/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// BenchlingAppsUnarchive struct for BenchlingAppsUnarchive
type BenchlingAppsUnarchive struct {
	// Array of app IDs
	AppIds []string `json:"appIds"`
}

// NewBenchlingAppsUnarchive instantiates a new BenchlingAppsUnarchive object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBenchlingAppsUnarchive(appIds []string) *BenchlingAppsUnarchive {
	this := BenchlingAppsUnarchive{}
	this.AppIds = appIds
	return &this
}

// NewBenchlingAppsUnarchiveWithDefaults instantiates a new BenchlingAppsUnarchive object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBenchlingAppsUnarchiveWithDefaults() *BenchlingAppsUnarchive {
	this := BenchlingAppsUnarchive{}
	return &this
}

// GetAppIds returns the AppIds field value
func (o *BenchlingAppsUnarchive) GetAppIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.AppIds
}

// GetAppIdsOk returns a tuple with the AppIds field value
// and a boolean to check if the value has been set.
func (o *BenchlingAppsUnarchive) GetAppIdsOk() ([]string, bool) {
	if o == nil {
    return nil, false
	}
	return o.AppIds, true
}

// SetAppIds sets field value
func (o *BenchlingAppsUnarchive) SetAppIds(v []string) {
	o.AppIds = v
}

func (o BenchlingAppsUnarchive) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["appIds"] = o.AppIds
	}
	return json.Marshal(toSerialize)
}

type NullableBenchlingAppsUnarchive struct {
	value *BenchlingAppsUnarchive
	isSet bool
}

func (v NullableBenchlingAppsUnarchive) Get() *BenchlingAppsUnarchive {
	return v.value
}

func (v *NullableBenchlingAppsUnarchive) Set(val *BenchlingAppsUnarchive) {
	v.value = val
	v.isSet = true
}

func (v NullableBenchlingAppsUnarchive) IsSet() bool {
	return v.isSet
}

func (v *NullableBenchlingAppsUnarchive) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBenchlingAppsUnarchive(val *BenchlingAppsUnarchive) *NullableBenchlingAppsUnarchive {
	return &NullableBenchlingAppsUnarchive{value: val, isSet: true}
}

func (v NullableBenchlingAppsUnarchive) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBenchlingAppsUnarchive) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


