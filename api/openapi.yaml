openapi: 3.0.1
info:
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Benchling API
  version: 2.0.0
externalDocs:
  description: Additional API Documentation
  url: https://docs.benchling.com
servers:
- url: /api/v2
security:
- oAuth: []
- basicApiKeyAuth: []
tags:
- description: |
    AA Sequences are the working units of cells that make everything run (they help make structures, catalyze reactions and allow for signaling - a kind of internal cell communication). On Benchling, these are comprised of a string of amino acids and collections of other attributes, such as annotations.
  name: AA Sequences
- description: Create and manage Benchling apps on your tenant
  name: Apps
- description: |2

    Results represent the output of assays that have been performed. You can customize the schemas of results to fit your needs. Results can link to runs, batches, and other types.

    To learn more about creating results, [click here](https://docs.benchling.com/docs/example-creating-results).
  name: Assay Results
- description: Runs capture the details / parameters of a run that was performed.
    Results are usually nested under a run.
  name: Assay Runs
- description: Endpoints to help authenticate with the rest of the API resources.
  name: Authentication
- description: |
    Batches represent physical quantities of a sequence, protein, or other biological entity. A batch is identified by its biological entity's name (or Registry ID, if the entity is registered), its date of creation, and an optional inventory number.
  name: Batches
- description: |
    Blobs are opaque files that can be linked to other items in Benchling, like assay runs or results. For example, you can upload a blob, then upload an assay result that links to that blob by ID. The blob will then appear as part of the assay result in the Benchling web UI.
  name: Blobs
- description: |2

    Boxes are a structured storage type, consisting of a grid of positions that can each hold one container. Unlike locations, there are a maximum number of containers that a box can hold (one per position).

    Boxes are all associated with schemas, which define the type of the box (e.g. "10x10 Cryo Box") along with the fields that are tracked and the dimensions of the box.

    Like all storage, every Box has a barcode that is unique across the registry.
  name: Boxes
- description: |2

    Containers are the backbone of sample management in Benchling. They represent physical containers, such as tubes or wells, that hold quantities of biological samples (represented by the batches inside the container). The container itself tracks its total volume, and the concentration of every batch inside of it.

    Containers are all associated with schemas, which define the type of the container (e.g. "Tube") along with the fields that are tracked.

    Like all storage, every container has a barcode that is unique across the registry.
  name: Containers
- description: |
    Benchling supports custom entities for biological entities that are neither sequences or proteins. Custom entities must have an entity schema set and can have both schema fields and custom fields.
  name: Custom Entities
- description: "A DNA alignment is a Benchling object representing an alignment of\
    \ multiple DNA sequences. This endpoint is deprecated, please migrate to the existing\
    \ [Nucleotide Alignments endpoints.](#/Nucleotide%20Alignments)"
  name: DNA Alignments
- description: "DNA Oligos are short linear DNA sequences that can be attached as\
    \ primers to full DNA sequences. Just like other entities, they support schemas,\
    \ tags, and aliases."
  name: DNA Oligos
- description: |
    DNA sequences are the bread and butter of the Benchling Molecular Biology suite. On Benchling, these are comprised of a string of nucleotides and collections of other attributes, such as annotations and primers.
  name: DNA Sequences
- description: "Dropdowns are registry-wide enums. Use dropdowns to standardize on\
    \ spelling and naming conventions, especially for important metadata like resistance\
    \ markers."
  name: Dropdowns
- description: Entries are rich text documents that allow you to capture all of your
    experimental data in one place.
  name: Entries
- description: "The Events system allows external services to subscribe to events\
    \ that are triggered in Benchling (e.g. plasmid registration, request submission,\
    \ etc)."
  name: Events
- description: Export a Notebook Entry or a Legacy Workflow Stage Entry.
  name: Exports
- description: Feature Libraries are collections of shared canonical patterns that
    can be used to generate annotations on matching regions of DNA Sequences or AA
    Sequences.
  name: Feature Libraries
- description: Manage folder objects.
  name: Folders
- description: Manage inventory wide objects.
  name: Inventory
- description: "Lab Automation endpoints support integration with lab instruments,\
    \ and liquid handlers to create samples or results, and capture transfers between\
    \ containers at scale."
  name: Lab Automation
- description: List label templates.
  name: Label Templates
- description: Legacy workflows allow orchestrating complex experiments.
  name: Legacy Workflows
- description: Please use endpoints for Legacy Workflows. These deprecated endpoints
    will be removed once users are migrated onto Legacy Workflows endpoints.
  name: Legacy Workflows (deprecated)
- description: |2

    Manage locations objects.

    Like all storage, every Location has a barcode that is unique across the registry.
  name: Locations
- description: |
    Mixtures are solutions comprised of multiple ingredients where the exact quantities of each ingredient are important to track. Each ingredient is uniquely identified by its component entity.
  name: Mixtures
- description: "Molecules are groups of atoms held together by bonds, representing\
    \ entities smaller than DNA Sequences and AA Sequences. Just like other entities,\
    \ they support schemas, tags, and aliases."
  name: Molecules
- description: A Nucleotide Alignment is a Benchling object representing an alignment
    of multiple DNA and/or RNA sequences.
  name: Nucleotide Alignments
- description: |2

    Oligos are short linear DNA sequences that can be attached as primers to full DNA sequences. Just like other entities, they support schemas, tags, and aliases.

    Please migrate to the corresponding DNA Oligos endpoints so that we can support RNA Oligos.
  name: Oligos
- description: View organization objects.
  name: Organizations
- description: |2

    Plates are a structured storage type, grids of wells that each function like containers. Plates come in two types: a traditional "fixed" type, where the wells cannot move, and a "matrix" type. A matrix plate has similar functionality to a box, where the containers inside can be moved around and removed altogether.

    Plates are all associated with schemas, which define the type of the plate (e.g. "96 Well Plate") along with the fields that are tracked, the dimensions of the plate, and whether or not the plate is a matrix plate or a traditional well plate.

    Like all storage, every Plate has a barcode that is unique across the registry.
  name: Plates
- description: List printers.
  name: Printers
- description: Manage project objects.
  name: Projects
- description: |
    Manage registry objects.

    See our documentation on [how to register entities](https://docs.benchling.com/docs/registering-entities).
  name: Registry
- description: Requests allow scientists and teams to collaborate around experimental
    assays and workflows.
  name: Requests
- description: "RNA Oligos are short linear RNA sequences that can be attached as\
    \ primers to full DNA sequences. Just like other entities, they support schemas,\
    \ tags, and aliases."
  name: RNA Oligos
- description: "Chains of linear, single stranded RNA that support most capabilities\
    \ and attributes of DNA Sequences."
  name: RNA Sequences
- description: |2

    Schemas represent custom configuration of objects in Benchling. See this [guide in our documentation](https://docs.benchling.com/docs/schemas) on how Schemas impact our developers
  name: Schemas
- description: |2

    Endpoints that perform expensive computations launch long-running tasks. These endpoints return the task ID (a UUID) in the response body.

    After launching a task, periodically invoke the [Get a task](#/Tasks/getTask) endpoint with the task UUID (e.g., every 10 seconds), until the status is no longer RUNNING.

    You can access a task for up to 30 minutes after its completion, after which its data will no longer be available.
  name: Tasks
- description: View team objects.
  name: Teams
- description: View user objects.
  name: Users
- description: Manage warehouse credentials.
  name: Warehouse
- description: Workflow outputs are outputs of a workflow task
  name: Workflow Outputs
- description: Workflow task groups are groups of workflow tasks of the same schema
  name: Workflow Task Groups
- description: Workflow tasks encapsulate a single unit of work
  name: Workflow Tasks
paths:
  /aa-sequences:
    get:
      description: List AA sequences
      operationId: listAASequences
      parameters:
      - description: |
          Number of results to return. Defaults to 50, maximum of 100.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 50
          maximum: 100
          minimum: 0
          nullable: false
          type: integer
        style: form
      - description: Token for pagination
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          default: modifiedAt:desc
          description: |
            Method by which to order search results. Valid sorts are modifiedAt (modified time, most recent first) and name (entity name, alphabetical). Optionally add :asc or :desc to specify ascending or descending order.
          enum:
          - modifiedAt
          - modifiedAt:asc
          - modifiedAt:desc
          - name
          - name:asc
          - name:desc
          nullable: false
          type: string
        style: form
      - description: |
          Datetime, in RFC 3339 format. Supports the > and < operators. Time zone defaults to UTC. Restricts results to those modified in the specified range. e.g. > 2017-04-30.
        explode: true
        in: query
        name: modifiedAt
        required: false
        schema:
          type: string
        style: form
      - description: "Name of an AA Sequence. Restricts results to those with the\
          \ specified name, alias, or entity registry ID."
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: "Name substring of an AA sequence. Restricts results to those\
          \ with names, aliases, or entity registry IDs that include the provided\
          \ substring."
        explode: true
        in: query
        name: nameIncludes
        required: false
        schema:
          type: string
        style: form
      - description: String of amino acids. Restricts results to AA sequences exactly
          matching these amino acids (case-insensitive).
        explode: true
        in: query
        name: aminoAcids
        required: false
        schema:
          type: string
        style: form
      - description: ID of a folder. Restricts results to those in the folder.
        explode: true
        in: query
        name: folderId
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of entry IDs. Restricts results to AA sequences mentioned in those entries.
        explode: true
        in: query
        name: mentionedIn
        required: false
        schema:
          type: string
        style: form
      - description: ID of a project. Restricts results to those in the project.
        explode: true
        in: query
        name: projectId
        required: false
        schema:
          type: string
        style: form
      - description: |
          ID of a registry. Restricts results to those registered in this registry. Specifying "null" returns unregistered items.
        explode: true
        in: query
        name: registryId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: |
          ID of a schema. Restricts results to those of the specified schema.
        explode: true
        in: query
        name: schemaId
        required: false
        schema:
          type: string
        style: form
      - description: |
          Schema field value. For Integer, Float, and Date type fields, supports the >= and <= operators. If present, the schemaId param must also be present. Restricts results to those with a field of whose value matches the filter.
        explode: true
        in: query
        name: schemaFields
        required: false
        schema:
          $ref: '#/components/schemas/SchemaFieldsQueryParam'
        style: form
      - description: |
          Archive reason. Restricts items to those with the specified archive reason. Use "NOT_ARCHIVED" to filter for unarchived AA sequences. Use "ANY_ARCHIVED" to filter for archived AA sequences regardless of reason. Use "ANY_ARCHIVED_OR_NOT_ARCHIVED" to return items for both archived and unarchived.
        examples:
          "1_not_archived":
            summary: Only include unarchived items (default).
            value: NOT_ARCHIVED
          "2_archived_reason":
            summary: Includes items archived for a specific reason.
            value: RETIRED
          "3_any_archived":
            summary: Includes items archived for any reason.
            value: ANY_ARCHIVED
          "4_any_archived_or_not_archived":
            summary: Includes both archived and unarchived items.
            value: ANY_ARCHIVED_OR_NOT_ARCHIVED
        explode: true
        in: query
        name: archiveReason
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of item IDs. Restricts results to those that mention the given items in the description.
        explode: true
        in: query
        name: mentions
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of ids. Matches all of the provided IDs, or returns a 400 error that includes a list of which IDs are invalid.
        explode: true
        in: query
        name: ids
        required: false
        schema:
          example: "prtn_6gxJGfPh,prtn_u7fOvqWg"
          type: string
        style: form
      - description: |
          Comma-separated list of entity registry IDs. Restricts results to those that match any of the specified registry IDs.
        explode: true
        in: query
        name: entityRegistryIds.anyOf
        required: false
        schema:
          example: "TP001,TP002"
          type: string
        style: form
      - description: |
          Comma-separated list of names. Restricts results to those that match any of the specified names, aliases, or entity registry IDs, case insensitive.  Warning - this filter can be non-performant due to case insensitivity.
        explode: true
        in: query
        name: names.anyOf
        required: false
        schema:
          example: "MyName1,MyName2"
          type: string
        style: form
      - description: |
          Comma-separated list of names. Restricts results to those that match any of the specified names, aliases, or entity registry IDs, case sensitive.
        explode: true
        in: query
        name: names.anyOf.caseSensitive
        required: false
        schema:
          example: "MyName1,MyName2"
          type: string
        style: form
      - description: Comma separated list of users IDs
        explode: true
        in: query
        name: creatorIds
        required: false
        schema:
          example: ent_a0SApq3z
          type: string
        style: form
      - description: Comma separated list of user or app IDs
        explode: true
        in: query
        name: authorIds.anyOf
        required: false
        schema:
          example: "ent_a0SApq3z,ent_b4AApz9b"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AaSequencesPaginatedList'
          description: OK
          headers:
            Result-Count:
              description: The total number of items that match the given query
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-limit:
              description: The number of allowed requests in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-remaining:
              description: The number of requests remaining in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-reset:
              description: The number of seconds remaining in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: List AA sequences
      tags:
      - AA Sequences
    post:
      description: Create an AA sequence
      operationId: createAASequence
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AaSequenceCreate'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AaSequence'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
        "503":
          description: Service Unavailable (Lock Contention)
      summary: Create an AA sequence
      tags:
      - AA Sequences
  /aa-sequences/{aa_sequence_id}:
    get:
      description: Get an AA sequence
      operationId: getAASequence
      parameters:
      - explode: false
        in: path
        name: aa_sequence_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AaSequence'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Get an AA sequence
      tags:
      - AA Sequences
    patch:
      description: Update an AA sequence
      operationId: updateAASequence
      parameters:
      - explode: false
        in: path
        name: aa_sequence_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AaSequenceUpdate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AaSequence'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Update an AA sequence
      tags:
      - AA Sequences
  /aa-sequences:archive:
    post:
      description: Archive AA sequences
      operationId: archiveAASequences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AaSequencesArchive'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AaSequencesArchivalChange'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Archive AA sequences
      tags:
      - AA Sequences
  /aa-sequences:auto-annotate:
    post:
      description: Auto-annotate AA sequences with matching features from specified
        Feature Libraries
      operationId: autoAnnotateAaSequences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutoAnnotateAaSequences'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskLink'
          description: |
            This endpoint launches a [long-running task](#/Tasks/getTask) and returns the Task ID of the launched task.
            When successful, the task has an empty response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Auto-annotate AA sequences with matching features from specified Feature
        Libraries
      tags:
      - AA Sequences
  /aa-sequences:bulk-create:
    post:
      description: Bulk Create AA sequences. Limit of 1000 AA Sequences per request.
      operationId: bulkCreateAASequences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AaSequencesBulkCreateRequest'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskLink'
          description: |
            This endpoint launches a [long-running task](#/Tasks/getTask) and returns the Task ID of the launched task.
            The task response contains the full list of AA Sequences that were created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Bulk Create AA sequences
      tags:
      - AA Sequences
  /aa-sequences:bulk-get:
    get:
      description: Bulk get AA sequences by ID
      operationId: bulkGetAASequences
      parameters:
      - description: |
          Comma-separated list of IDs of AA sequences to get.
        explode: true
        in: query
        name: aaSequenceIds
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AaSequencesBulkGet'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Bulk get AA sequences by ID
      tags:
      - AA Sequences
  /aa-sequences:bulk-update:
    post:
      description: Bulk Update AA sequences
      operationId: bulkUpdateAASequences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AaSequencesBulkUpdateRequest'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskLink'
          description: |
            This endpoint launches a [long-running task](#/Tasks/getTask) and returns the Task ID of the launched task.
            When successful, the task returns a full list of [AA Sequence](#/AA%20Sequences/bulkGetAASequences) resources
            that were updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Bulk Update AA sequences
      tags:
      - AA Sequences
  /aa-sequences:unarchive:
    post:
      description: Unarchive AA sequences
      operationId: unarchiveAASequences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AaSequencesUnarchive'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AaSequencesArchivalChange'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Unarchive AA sequences
      tags:
      - AA Sequences
  /app-configuration-items:
    get:
      description: Get app configuration items
      operationId: listAppConfigurationItems
      parameters:
      - description: Token for pagination
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: "Number of results to return. Defaults to 50, maximum of 100."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 50
          maximum: 100
          minimum: 0
          nullable: false
          type: integer
        style: form
      - description: |
          Datetime, in RFC 3339 format. Supports the > and < operators. Time zone defaults to UTC. Restricts results to those modified in the specified range. e.g. > 2017-04-30.
        explode: true
        in: query
        name: modifiedAt
        required: false
        schema:
          type: string
        style: form
      - description: App id to which the configuration belongs.
        example: app_e59sjL23Pqn30xHg
        explode: true
        in: query
        name: appId
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of ids. Matches all of the provided IDs, or returns a 400 error that includes a list of which IDs are invalid.
        explode: true
        in: query
        name: ids
        required: false
        schema:
          example: "aci_VfVOART1,aci_RFhDGaaC"
          type: string
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          default: modifiedAt:desc
          description: |
            Method by which to order search results. Valid sorts are modifiedAt (modified time, most recent first) and name (entity name, alphabetical). Optionally add :asc or :desc to specify ascending or descending order.
          enum:
          - modifiedAt
          - modifiedAt:asc
          - modifiedAt:desc
          nullable: false
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppConfigurationPaginatedList'
          description: OK
          headers:
            Result-Count:
              description: The total number of items that match the given query
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-limit:
              description: The number of allowed requests in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-remaining:
              description: The number of requests remaining in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-reset:
              description: The number of seconds remaining in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: Get app configuration items
      tags:
      - Apps
    post:
      description: Create app configuration item
      operationId: createAppConfigurationItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppConfigItemCreate'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppConfigItem'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Create app configuration item
      tags:
      - Apps
  /app-configuration-items/{item_id}:
    get:
      description: Get app configuration item
      operationId: getAppConfigurationItemById
      parameters:
      - example: aci_e59sjL23Pqn30xHg
        explode: false
        in: path
        name: item_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppConfigItem'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: Get app configuration item
      tags:
      - Apps
    patch:
      description: Update app configuration item
      operationId: updateAppConfigurationItem
      parameters:
      - example: aci_e59sjL23Pqn30xHg
        explode: false
        in: path
        name: item_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppConfigItemUpdate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppConfigItem'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: Update app configuration item
      tags:
      - Apps
  /app-configuration-items:bulk-create:
    post:
      description: Bulk Create app configuration items
      operationId: bulkCreateAppConfigurationItems
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppConfigItemsBulkCreateRequest'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskLink'
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Bulk Create app configuration items. Limit of 1000 App Config Items
        per request.
      tags:
      - Apps
  /app-configuration-items:bulk-update:
    post:
      description: Bulk Update app configuration items
      operationId: bulkUpdateAppConfigurationItems
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppConfigItemsBulkUpdateRequest'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskLink'
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Bulk Update app configuration items. Limit of 1000 App Config Items
        per request.
      tags:
      - Apps
  /apps:
    get:
      description: List apps
      operationId: listBenchlingApps
      parameters:
      - description: Number of results to return.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 50
          maximum: 100
          nullable: false
          type: integer
        style: form
      - description: Token for pagination
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: |
          Method by which to order search results. Valid sorts are modifiedAt (modified time, most recent first) and name (app name, alphabetical). Optionally add :asc or :desc to specify ascending or descending order. Default is modifiedAt.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: modifiedAt
          enum:
          - modifiedAt
          - name
          - modifiedAt:asc
          - name:asc
          - modifiedAt:desc
          - name:desc
          nullable: false
          type: string
        style: form
      - description: |
          Comma-separated list of ids. Matches all of the provided IDs, or returns a 400 error that includes a list of which IDs are invalid.
        explode: true
        in: query
        name: ids
        required: false
        schema:
          example: "app_J39na03L1nsLS34o,app_ae92kBv9aNSl593z,app_e59sjL23Pqn30xHg"
          type: string
        style: form
      - description: |
          Datetime, in RFC 3339 format. Supports the > and < operators. Time zone defaults to UTC. Restricts results to those modified in the specified range. e.g. > 2017-04-30.
        explode: true
        in: query
        name: modifiedAt
        required: false
        schema:
          type: string
        style: form
      - description: Name of an app. Restricts results to those with the specified
          name.
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Name substring of an app. Restricts results to those with names
          that include the provided substring.
        explode: true
        in: query
        name: nameIncludes
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of app names. Restricts results to those that match any of the specified names, case insensitive.  Warning - this filter can be non-performant due to case insensitivity.
        explode: true
        in: query
        name: names.anyOf
        required: false
        schema:
          example: "MyName1, MyName2"
          type: string
        style: form
      - description: |
          Comma-separated list of app names. Restricts results to those that match any of the specified names, case sensitive.
        explode: true
        in: query
        name: names.anyOf.caseSensitive
        required: false
        schema:
          example: "MyName1,MyName2"
          type: string
        style: form
      - description: Comma separated list of users IDs
        explode: true
        in: query
        name: creatorIds
        required: false
        schema:
          example: ent_a0SApq3z
          type: string
        style: form
      - description: Comma-separated list of organization and/or team API IDs. Restricts
          results to apps that are members of all given groups.
        explode: true
        in: query
        name: memberOf
        required: false
        schema:
          type: string
        style: form
      - description: Comma-separated list of organization and/or team API IDs. Restricts
          results to apps that are admins of all given groups.
        explode: true
        in: query
        name: adminOf
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenchlingAppsPaginatedList'
          description: OK
          headers:
            Result-Count:
              description: The total number of items that match the given query
              explode: false
              schema:
                type: integer
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: Forbidden
      summary: List apps
      tags:
      - Apps
    post:
      description: Create an app
      operationId: createBenchlingApp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenchlingAppCreate'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenchlingApp'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: Conflict
      summary: Create an app
      tags:
      - Apps
  /apps/{app_id}:
    get:
      description: Get an app by ID
      operationId: getBenchlingAppByID
      parameters:
      - example: app_J39na03L1nsLS34o
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenchlingApp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: Get an app by ID
      tags:
      - Apps
    patch:
      description: Update an app
      operationId: patchBenchlingApp
      parameters:
      - example: app_e59sjL23Pqn30xHg
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenchlingAppUpdate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenchlingApp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: Update an app
      tags:
      - Apps
  /apps:archive:
    post:
      description: Archive apps
      operationId: archiveBenchlingApps
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenchlingAppsArchive'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenchlingAppsArchivalChange'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Archive apps
      tags:
      - Apps
  /apps:unarchive:
    post:
      description: Unarchive apps
      operationId: unarchiveBenchlingApps
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenchlingAppsUnarchive'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenchlingAppsArchivalChange'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Unarchive apps
      tags:
      - Apps
  /assay-result-schemas:
    get:
      description: List assay result schemas
      operationId: listAssayResultSchemas
      parameters:
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 50
          maximum: 100
          minimum: 0
          nullable: false
          type: integer
        style: form
      - description: |
          Datetime, in RFC 3339 format. Supports the > and < operators. Time zone defaults to UTC. Restricts results to those modified in the specified range. e.g. > 2017-04-30.
        explode: true
        in: query
        name: modifiedAt
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssayResultSchemasPaginatedList'
          description: OK
          headers:
            Result-Count:
              description: The total number of schemas that match the given query
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-limit:
              description: The number of allowed assay results in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-remaining:
              description: The number of calls remaining in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-reset:
              description: The number of seconds remaining in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: List assay result schemas
      tags:
      - Schemas
  /assay-result-schemas/{schema_id}:
    get:
      description: Get a Result schema by ID
      operationId: getResultSchema
      parameters:
      - description: ID of schema to get
        explode: false
        in: path
        name: schema_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssayResultSchema'
          description: OK
        "400":
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: Get a Result schema by ID
      tags:
      - Schemas
  /assay-results:
    get:
      description: List results
      operationId: listAssayResults
      parameters:
      - description: ID of the assay result schema to filter by
        explode: true
        in: query
        name: schemaId
        required: true
        schema:
          type: string
        style: form
      - description: |
          Datetime, in RFC 3339 format. Time zone defaults to UTC. Restricts results to those created before the specified time. e.g. < 2017-04-30.
        explode: true
        in: query
        name: createdAt.lt
        required: false
        schema:
          type: string
        style: form
      - description: |
          Datetime, in RFC 3339 format. Time zone defaults to UTC. Restricts results to those created after the specified time. e.g. > 2017-04-30.
        explode: true
        in: query
        name: createdAt.gt
        required: false
        schema:
          type: string
        style: form
      - description: |
          Datetime, in RFC 3339 format. Time zone defaults to UTC. Restricts results to those created on or before the specified time. e.g. <= 2017-04-30.
        explode: true
        in: query
        name: createdAt.lte
        required: false
        schema:
          type: string
        style: form
      - description: |
          Datetime, in RFC 3339 format. Time zone defaults to UTC. Restricts results to those created on or after the specified time. e.g. >= 2017-04-30.
        explode: true
        in: query
        name: createdAt.gte
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: Filter by results created after this unix timestamp
        explode: true
        in: query
        name: minCreatedTime
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: Filter by results created before this unix timestamp
        explode: true
        in: query
        name: maxCreatedTime
        required: false
        schema:
          type: integer
        style: form
      - description: |
          Method by which to order search results. Valid sorts are createdAt (created time, oldest first). Use :asc or :desc to specify ascending or descending order. Default is createdAt:asc.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: createdAt:asc
          enum:
          - createdAt:asc
          - createdAt:desc
          nullable: false
          type: string
        style: form
      - description: Token for pagination
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: "Number of results to return. Defaults to 50, maximum of 100."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 50
          maximum: 100
          minimum: 0
          nullable: false
          type: integer
        style: form
      - description: "Filter by comma-separated list of related Entity IDs, maximum\
          \ of 20."
        explode: true
        in: query
        name: entityIds
        required: false
        schema:
          type: string
        style: form
      - description: |
          Filter by comma-separated list of related storage (container, box, plate, or location) IDs, maximum of 20.
        explode: true
        in: query
        name: storageIds
        required: false
        schema:
          type: string
        style: form
      - description: Filter by comma-separated list of associated AssayRun IDs.
        explode: true
        in: query
        name: assayRunIds
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of ids. Matches all of the provided IDs, or returns a 400 error that includes a list of which IDs are invalid.
        explode: true
        in: query
        name: ids
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssayResultsPaginatedList'
          description: OK
      summary: List results
      tags:
      - Assay Results
    post:
      description: Create 1 or more results.
      operationId: createAssayResults
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssayResultsBulkCreateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssayResultsCreateResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Create 1 or more results.
      tags:
      - Assay Results
  /assay-results/{assay_result_id}:
    get:
      description: Get a result
      operationId: getAssayResult
      parameters:
      - explode: false
        in: path
        name: assay_result_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssayResult'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Get a result
      tags:
      - Assay Results
  /assay-results:archive:
    post:
      description: |
        **Only results that have not been added to a Notebook Entry can be Archived.**
        Once results are attached to a notebook entry, they are tracked in the history of that notebook entry, and cannot be archived.
      operationId: archiveAssayResults
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssayResultsArchive'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssayResultIdsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Archive 1 or more results.
      tags:
      - Assay Results
  /assay-results:bulk-get:
    get:
      description: Up to 200 IDs can be specified at once.
      operationId: bulkGetAssayResults
      parameters:
      - description: Comma-separated list of assay result IDs.
        explode: true
        in: query
        name: assayResultIds
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssayResultsBulkGet'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Gets multiple results specified by a list of IDs.
      tags:
      - Assay Results
  /assay-results:unarchive:
    post:
      description: Unarchive 1 or more results.
      operationId: unarchiveAssayResults
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssayResultIdsRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssayResultIdsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Unarchive 1 or more results.
      tags:
      - Assay Results
  /assay-run-schemas:
    get:
      description: List assay run schemas
      operationId: listAssayRunSchemas
      parameters:
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 50
          maximum: 100
          minimum: 0
          nullable: false
          type: integer
        style: form
      - description: |
          Datetime, in RFC 3339 format. Supports the > and < operators. Time zone defaults to UTC. Restricts results to those modified in the specified range. e.g. > 2017-04-30.
        explode: true
        in: query
        name: modifiedAt
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssayRunSchemasPaginatedList'
          description: OK
          headers:
            Run-Count:
              description: The total number of schemas that match the given query
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-limit:
              description: The number of allowed assay runs in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-remaining:
              description: The number of calls remaining in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-reset:
              description: The number of seconds remaining in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: List assay run schemas
      tags:
      - Schemas
  /assay-run-schemas/{schema_id}:
    get:
      description: Get a Run schema by ID
      operationId: getRunSchema
      parameters:
      - description: ID of schema to get
        explode: false
        in: path
        name: schema_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssayRunSchema'
          description: OK
        "400":
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: Get a Run schema by ID
      tags:
      - Schemas
  /assay-runs:
    get:
      description: List runs
      operationId: listAssayRuns
      parameters:
      - description: ID of the assay run schema to filter by
        explode: true
        in: query
        name: schemaId
        required: true
        schema:
          type: string
        style: form
      - description: Filter by runs created after this unix timestamp
        explode: true
        in: query
        name: minCreatedTime
        required: false
        schema:
          type: integer
        style: form
      - description: Filter by runs created before this unix timestamp
        explode: true
        in: query
        name: maxCreatedTime
        required: false
        schema:
          type: integer
        style: form
      - description: Token for pagination
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: "Number of results to return. Defaults to 50, maximum of 100."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 50
          maximum: 100
          minimum: 0
          nullable: false
          type: integer
        style: form
      - description: |
          Comma-separated list of ids. Matches all of the provided IDs, or returns a 400 error that includes a list of which IDs are invalid.
        explode: true
        in: query
        name: ids
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssayRunsPaginatedList'
          description: OK
      summary: List runs
      tags:
      - Assay Runs
    post:
      description: Create 1 or more runs.
      operationId: createAssayRuns
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssayRunsBulkCreateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssayRunsBulkCreateResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Create 1 or more runs.
      tags:
      - Assay Runs
  /assay-runs/{assay_run_id}:
    get:
      description: Get a run
      operationId: getAssayRun
      parameters:
      - explode: false
        in: path
        name: assay_run_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssayRun'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Get a run
      tags:
      - Assay Runs
    patch:
      description: Update a run
      operationId: updateAssayRun
      parameters:
      - description: ID of the Run to be updated
        explode: false
        in: path
        name: assay_run_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssayRunUpdate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssayRun'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Update a run
      tags:
      - Assay Runs
  /assay-runs/{assay_run_id}/automation-input-generators:
    get:
      description: list AutomationInputGenerators by Run
      operationId: listAutomationInputGenerators
      parameters:
      - explode: false
        in: path
        name: assay_run_id
        required: true
        schema:
          type: string
        style: simple
      - description: Token for pagination
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: |
          Datetime, in RFC 3339 format. Supports the > and < operators. Time zone defaults to UTC. Restricts results to those modified in the specified range. e.g. > 2017-04-30.
        explode: true
        in: query
        name: modifiedAt
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationFileInputsPaginatedList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: list AutomationInputGenerators by Run
      tags:
      - Assay Runs
  /assay-runs/{assay_run_id}/automation-output-processors:
    get:
      deprecated: true
      description: "Deprecated in favor of '/automation-output-processors'. For each\
        \ output config in the run config, will create an empty automationOutputProcessor\
        \ for the run if one doesn't exist."
      operationId: listAutomationOutputProcessorsDeprecated
      parameters:
      - explode: false
        in: path
        name: assay_run_id
        required: true
        schema:
          type: string
        style: simple
      - description: Token for pagination
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeprecatedAutomationOutputProcessorsPaginatedList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: list AutomationOutputProcessors by Run
      tags:
      - Assay Runs
  /assay-runs:archive:
    post:
      description: Archive assay runs that are not embedded in a notebook entry
      operationId: archiveAssayRuns
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssayRunsArchive'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssayRunsArchivalChange'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Archive Assay Runs
      tags:
      - Assay Runs
  /assay-runs:bulk-get:
    get:
      description: Bulk get runs by ID
      operationId: bulkGetAssayRuns
      parameters:
      - description: Comma-separated list of assay run IDs
        explode: true
        in: query
        name: assayRunIds
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssayRunsBulkGet'
          description: OK
      summary: Bulk get runs by ID
      tags:
      - Assay Runs
  /assay-runs:unarchive:
    post:
      description: Unarchive assay runs
      operationId: unarchiveAssayRuns
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssayRunsUnarchive'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssayRunsArchivalChange'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Unarchive Assay Runs
      tags:
      - Assay Runs
  /automation-file-transforms/{transform_id}:
    get:
      description: Get a Lab Automation Transform step
      operationId: getLabAutomationTransform
      parameters:
      - explode: false
        in: path
        name: transform_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabAutomationTransform'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: Get a Lab Automation Transform step
      tags:
      - Lab Automation
    patch:
      description: Update a Lab Automation Transform step
      operationId: updateLabAutomationTransform
      parameters:
      - explode: false
        in: path
        name: transform_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabAutomationTransformUpdate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabAutomationTransform'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Update a Lab Automation Transform step
      tags:
      - Lab Automation
  /automation-input-generators/{input_generator_id}:
    get:
      description: Get an Automation Input Generator
      operationId: getAutomationInputGenerator
      parameters:
      - explode: false
        in: path
        name: input_generator_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationInputGenerator'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Get an Automation Input Generator
      tags:
      - Lab Automation
    patch:
      description: Update an Automation Input Generator
      operationId: updateAutomationInputGenerator
      parameters:
      - explode: false
        in: path
        name: input_generator_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutomationInputGeneratorUpdate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationInputGenerator'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Update an Automation Input Generator
      tags:
      - Lab Automation
  /automation-input-generators/{input_generator_id}:generate-input:
    post:
      description: Generate Input with an Automation Input Generator
      operationId: generateInputWithAutomationInputGenerator
      parameters:
      - explode: false
        in: path
        name: input_generator_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskLink'
          description: |
            This endpoint launches a [long-running task](#/Tasks/getTask) and returns the Task ID of the launched task.
            The task response contains the Automation Input Generator with the generated file.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Generate Input with an Automation Input Generator
      tags:
      - Lab Automation
  /automation-output-processors:
    get:
      description: List Automation Output Processors which have an attached file
      operationId: listAutomationOutputProcessors
      parameters:
      - description: Id of the Run
        explode: true
        in: query
        name: assayRunId
        required: false
        schema:
          type: string
        style: form
      - description: Name of the Automation File Config
        explode: true
        in: query
        name: automationFileConfigName
        required: false
        schema:
          type: string
        style: form
      - description: |
          Archive reason. Restricts items to those with the specified archive reason. Use "NOT_ARCHIVED" to filter for unarchived processors. Use "ANY_ARCHIVED" to filter for archived processors regardless of reason. Use "ANY_ARCHIVED_OR_NOT_ARCHIVED" to return items for both archived and unarchived.
        examples:
          "1_not_archived":
            summary: Only include unarchived items (default).
            value: NOT_ARCHIVED
          "2_archived_reason":
            summary: Includes items archived for a specific reason.
            value: RETIRED
          "3_any_archived":
            summary: Includes items archived for any reason.
            value: ANY_ARCHIVED
          "4_any_archived_or_not_archived":
            summary: Includes both archived and unarchived items.
            value: ANY_ARCHIVED_OR_NOT_ARCHIVED
        explode: true
        in: query
        name: archiveReason
        required: false
        schema:
          type: string
        style: form
      - description: |
          Datetime, in RFC 3339 format. Supports the > and < operators. Time zone defaults to UTC. Restricts results to those modified in the specified range. e.g. > 2017-04-30.
        explode: true
        in: query
        name: modifiedAt
        required: false
        schema:
          type: string
        style: form
      - description: Token for pagination
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationOutputProcessorsPaginatedList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: List non-empty Automation Output Processors
      tags:
      - Lab Automation
    post:
      description: Create Automation Output Processor
      operationId: createAutomationOutputProcessor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutomationOutputProcessorCreate'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationOutputProcessor'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Create Automation Output Processor
      tags:
      - Lab Automation
  /automation-output-processors/{output_processor_id}:
    get:
      description: Get an Automation Output Processor
      operationId: getAutomationOutputProcessor
      parameters:
      - explode: false
        in: path
        name: output_processor_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationOutputProcessor'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Get an Automation Output Processor
      tags:
      - Lab Automation
    patch:
      description: Update an Automation Output Processor
      operationId: updateAutomationOutputProcessor
      parameters:
      - explode: false
        in: path
        name: output_processor_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutomationOutputProcessorUpdate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationOutputProcessor'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Update an Automation Output Processor
      tags:
      - Lab Automation
  /automation-output-processors/{output_processor_id}:process-output:
    post:
      description: Process Output with an Automation Output Processor
      operationId: processOutputWithAutomationOutputProcessor
      parameters:
      - explode: false
        in: path
        name: output_processor_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskLink'
          description: |
            This endpoint launches a [long-running task](#/Tasks/getTask) and returns the Task ID of the launched task.
            The task response contains the Automation Output Processor that was processed.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Process Output with an Automation Output Processor
      tags:
      - Lab Automation
  /automation-output-processors:archive:
    post:
      description: Archive Automation Output Processors and linked Results
      operationId: archiveAutomationOutputProcessors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutomationOutputProcessorsArchive'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationOutputProcessorArchivalChange'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Archive Automation Output Processors and linked Results
      tags:
      - Lab Automation
  /automation-output-processors:unarchive:
    post:
      description: Unarchive Automation Output Processors and linked Results
      operationId: unarchiveAutomationOutputProcessors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutomationOutputProcessorsUnarchive'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationOutputProcessorArchivalChange'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Unarchive Automation Output Processors and linked Results
      tags:
      - Lab Automation
  /batch-schemas:
    get:
      description: List batch schemas
      operationId: listBatchSchemas
      parameters:
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 50
          maximum: 100
          minimum: 0
          nullable: false
          type: integer
        style: form
      - description: |
          Datetime, in RFC 3339 format. Supports the > and < operators. Time zone defaults to UTC. Restricts results to those modified in the specified range. e.g. > 2017-04-30.
        explode: true
        in: query
        name: modifiedAt
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchSchemasPaginatedList'
          description: OK
          headers:
            Result-Count:
              description: The total number of schemas that match the given query
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-limit:
              description: The number of allowed requests in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-remaining:
              description: The number of calls remaining in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-reset:
              description: The number of seconds remaining in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: List batch schemas
      tags:
      - Schemas
  /batch-schemas/{schema_id}:
    get:
      description: Get a batch schema by ID
      operationId: getBatchSchema
      parameters:
      - description: ID of schema to get
        explode: false
        in: path
        name: schema_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchSchema'
          description: OK
        "400":
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: Get a batch schema by ID
      tags:
      - Schemas
  /batches:
    get:
      description: List batches
      operationId: listBatches
      parameters:
      - description: |
          Number of results to return. Defaults to 50, maximum of 100.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 50
          maximum: 100
          minimum: 0
          nullable: false
          type: integer
        style: form
      - description: Token for pagination
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          default: modifiedAt:desc
          description: |
            Method by which to order search results. Valid sorts are modifiedAt (modified time, most recent first) and name (entity name, alphabetical). Optionally add :asc or :desc to specify ascending or descending order.
          enum:
          - modifiedAt
          - modifiedAt:asc
          - modifiedAt:desc
          - name
          - name:asc
          - name:desc
          nullable: false
          type: string
        style: form
      - description: |
          Datetime, in RFC 3339 format. Supports the > and < operators. Time zone defaults to UTC. Restricts results to those modified in the specified range. e.g. > 2017-04-30.
        explode: true
        in: query
        name: modifiedAt
        required: false
        schema:
          type: string
        style: form
      - description: |
          ID of a schema. Restricts results to those of the specified schema.
        explode: true
        in: query
        name: schemaId
        required: false
        schema:
          type: string
        style: form
      - description: |
          Schema field value. For Integer, Float, and Date type fields, supports the >= and <= operators. If present, the schemaId param must also be present. Restricts results to those with a field of whose value matches the filter.
        explode: true
        in: query
        name: schemaFields
        required: false
        schema:
          $ref: '#/components/schemas/SchemaFieldsQueryParam'
        style: form
      - description: |
          Archive reason. Restricts items to those with the specified archive reason. Use "NOT_ARCHIVED" to filter for unarchived batches. Use "ANY_ARCHIVED" to filter for archived batches regardless of reason. Use "ANY_ARCHIVED_OR_NOT_ARCHIVED" to return items for both archived and unarchived.
        examples:
          "1_not_archived":
            summary: Only include unarchived items (default).
            value: NOT_ARCHIVED
          "2_archived_reason":
            summary: Includes items archived for a specific reason.
            value: RETIRED
          "3_any_archived":
            summary: Includes items archived for any reason.
            value: ANY_ARCHIVED
          "4_any_archived_or_not_archived":
            summary: Includes both archived and unarchived items.
            value: ANY_ARCHIVED_OR_NOT_ARCHIVED
        explode: true
        in: query
        name: archiveReason
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of ids. Matches all of the provided IDs, or returns a 400 error that includes a list of which IDs are invalid.
        explode: true
        in: query
        name: ids
        required: false
        schema:
          example: "bat_VfVOART1,bat_RFhDGaaC"
          type: string
        style: form
      - description: Comma separated list of users IDs
        explode: true
        in: query
        name: creatorIds
        required: false
        schema:
          example: ent_a0SApq3z
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchesPaginatedList'
          description: OK
          headers:
            Result-Count:
              description: The total number of items that match the given query
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-limit:
              description: The number of allowed requests in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-remaining:
              description: The number of requests remaining in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-reset:
              description: The number of seconds remaining in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: List batches
      tags:
      - Batches
    post:
      description: Create a batch
      operationId: createBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchCreate'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Batch'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Create a batch
      tags:
      - Batches
  /batches/{batch_id}:
    get:
      description: Get a batch
      operationId: getBatch
      parameters:
      - explode: false
        in: path
        name: batch_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Batch'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Get a batch
      tags:
      - Batches
    patch:
      description: Update a batch
      operationId: updateBatch
      parameters:
      - explode: false
        in: path
        name: batch_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchUpdate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Batch'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Update a batch
      tags:
      - Batches
  /batches:archive:
    post:
      description: Archive Batches
      operationId: archiveBatches
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchesArchive'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchesArchivalChange'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Archive Batches
      tags:
      - Batches
  /batches:bulk-get:
    get:
      description: |
        Batches can be queried by their IDs or their names. Querying by name requires specifying a registryId since batch names are not necessarily unique across registries. Batches must be registered to query by name.
      operationId: bulkGetBatches
      parameters:
      - description: Comma-separated list of batch IDs.
        explode: true
        in: query
        name: batchIds
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of batch names. Batch names have the format {file name}-{creation date as YYYYMMDD}-{optional inventory number}. Must specify registryId with batchNames.
        explode: true
        in: query
        name: batchNames
        required: false
        schema:
          type: string
        style: form
      - description: ID of the registry that batches are registered in. Required if
          querying by batchNames.
        explode: true
        in: query
        name: registryId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchesBulkGet'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Bulk get batches
      tags:
      - Batches
  /batches:unarchive:
    post:
      description: Unarchive Batches
      operationId: unarchiveBatches
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchesUnarchive'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchesArchivalChange'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Unarchive Batches
      tags:
      - Batches
  /blobs:
    post:
      description: |2

        This endpoint uploads a blob in a single API call.

        Blobs larger than 10MB should be uploaded in [multiple parts](#/Blobs/createMultipartBlob). The data64 parameter is the base64-encoded part contents, and the md5 parameter is the hex-encoded MD5 hash of the part contents. For example, given the string hello, data64 is aGVsbG8= and md5 is 5d41402abc4b2a76b9719d911017c592.
      operationId: createBlob
      requestBody:
        content:
          application/json:
            examples:
              raw_file:
                summary: A file containing the string "hello"
                value:
                  data64: aGVsbG8=
                  md5: 5d41402abc4b2a76b9719d911017c592
                  mimeType: text/plain
                  name: hello.txt
                  type: RAW_FILE
              visualization_file:
                summary: A .png image
                value:
                  data64: iVBORw0KGgoAAAANSUhEUgAAAB4AAAAUBAMAAABohZD3AAAAG1BMVEUAAAD////f39+/v78fHx9/f39fX1+fn58/Pz+3dh1rAAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAT0lEQVQYlWNgoDlQBhGF7AIwvjOIYGJQwMkPSigsAPLZhRrAfCe3sgAzID+dDaLEmcNUUBTIL2NQgfLNAkD6k1wg8oqFooUahepCMP00BQC95QvY1zDquQAAAABJRU5ErkJggg==
                  md5: 50170053b55179167f1c21350c869bb7
                  mimeType: image/png
                  name: hello.png
                  type: VISUALIZATION
            schema:
              $ref: '#/components/schemas/BlobCreate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blob'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Upload single-part blob
      tags:
      - Blobs
  /blobs/{blob_id}:
    get:
      description: Get a Blob
      operationId: getBlob
      parameters:
      - explode: false
        in: path
        name: blob_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blob'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: Get a Blob
      tags:
      - Blobs
  /blobs/{blob_id}/download-url:
    get:
      description: Get a Blob's download url
      operationId: getBlobUrl
      parameters:
      - explode: false
        in: path
        name: blob_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlobUrl'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: Get a Blob's download url
      tags:
      - Blobs
  /blobs/{blob_id}/parts:
    post:
      description: |2

        Upload a part of the blob. This part must be at least 5MB, unless it's the last or only part. It's recommended to keep the part size around 10MB.

        The data64 parameter is the base64-encoded part contents, and the md5 parameter is the hex-encoded MD5 hash of the part contents. For example, given the string hello, data64 is aGVsbG8= and md5 is 5d41402abc4b2a76b9719d911017c592.

        ## Multipart Upload

        If a blob is larger than 10MB, it should be uploaded in multiple parts using the following endpoints:
        - [Start a multi-part blob upload](#/Blobs/createMultipartBlob)
        - [Upload a blob part](#/Blobs/createBlobPart)
        - [Complete a blob upload](#/Blobs/completeMultipartBlob)

        Each part has a *partNumber* and an *eTag*. The part number can be any number between 1 to 10,000, inclusive - this number should be unique and identifies the order of the part in the final blob. The eTag of a part is returned in the API response - this eTag must be specified when completing the upload in order to ensure the server has received all the expected parts.
      operationId: createBlobPart
      parameters:
      - explode: false
        in: path
        name: blob_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlobPartCreate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlobPart'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Upload a part of a multi-part blob
      tags:
      - Blobs
  /blobs/{blob_id}:abort-upload:
    post:
      description: Abort multi-part blob upload
      operationId: abortMultipartBlob
      parameters:
      - explode: false
        in: path
        name: blob_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyObject'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Abort multi-part blob upload
      tags:
      - Blobs
  /blobs/{blob_id}:complete-upload:
    post:
      description: |2

        Combine blob parts into a single blob.

        ## Multipart Upload

        If a blob is larger than 10MB, it should be uploaded in multiple parts using the following endpoints:
        - [Start a multi-part blob upload](#/Blobs/createMultipartBlob)
        - [Upload a blob part](#/Blobs/createBlobPart)
        - [Complete a blob upload](#/Blobs/completeMultipartBlob)

        Each part must be at least 5MB in size, except for the last part. We recommend keeping each part to under 10MB when uploading.

        Each part has a *partNumber* and an *eTag*. The part number can be any number between 1 to 10,000, inclusive - this number should be unique and identifies the order of the part in the final blob. The eTag of a part is returned in the API response - this eTag must be specified when completing the upload in order to ensure the server has received all the expected parts.
      operationId: completeMultipartBlob
      parameters:
      - explode: false
        in: path
        name: blob_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlobComplete'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blob'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Complete multi-part blob upload
      tags:
      - Blobs
  /blobs:bulk-get:
    get:
      description: Bulk get Blobs by UUID
      operationId: bulkGetBlobs
      parameters:
      - description: Comma-separated list of blob IDs.
        explode: true
        in: query
        name: blobIds
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlobsBulkGet'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Bulk get Blobs by UUID
      tags:
      - Blobs
  /blobs:start-multipart-upload:
    post:
      description: |2

        Blobs may be uploaded using multi-part upload. This endpoint initiates the upload process - blob parts can then be uploaded in multiple blob parts.

        ## Multipart Upload

        If a blob is larger than 10MB, it should be uploaded in multiple parts using the following endpoints:
        - [Start a multi-part blob upload](#/Blobs/createMultipartBlob)
        - [Upload a blob part](#/Blobs/createBlobPart)
        - [Complete a blob upload](#/Blobs/completeMultipartBlob)

        Each part must be at least 5MB in size, except for the last part. We recommend keeping each part to under 10MB when uploading.

        Each part has a *partNumber* and an *eTag*. The part number can be any number between 1 to 10,000, inclusive - this number should be unique and identifies the order of the part in the final blob. The eTag of a part is returned in the API response - this eTag must be specified when completing the upload in order to ensure the server has received all the expected parts.
      operationId: createMultipartBlob
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlobMultipartCreate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blob'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Initiate multi-part blob upload
      tags:
      - Blobs
  /box-schemas:
    get:
      description: List box schemas
      operationId: listBoxSchemas
      parameters:
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 50
          maximum: 100
          minimum: 0
          nullable: false
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoxSchemasPaginatedList'
          description: OK
          headers:
            Result-Count:
              description: The total number of schemas that match the given query
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-limit:
              description: The number of allowed requests in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-remaining:
              description: The number of calls remaining in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-reset:
              description: The number of seconds remaining in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: List box schemas
      tags:
      - Schemas
  /box-schemas/{schema_id}:
    get:
      description: Get a box schema by ID
      operationId: getBoxSchema
      parameters:
      - description: ID of schema to get
        explode: false
        in: path
        name: schema_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoxSchema'
          description: OK
        "400":
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: Get a box schema by ID
      tags:
      - Schemas
  /boxes:
    get:
      description: List boxes
      operationId: listBoxes
      parameters:
      - description: |
          Number of results to return. Defaults to 50, maximum of 100.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 50
          maximum: 100
          minimum: 0
          nullable: false
          type: integer
        style: form
      - description: Token for pagination
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          default: modifiedAt:desc
          description: |
            Method by which to order search results. Valid sorts are modifiedAt (modified time, most recent first) and name (entity name, alphabetical). Optionally add :asc or :desc to specify ascending or descending order.
          enum:
          - modifiedAt
          - modifiedAt:asc
          - modifiedAt:desc
          - name
          - name:asc
          - name:desc
          nullable: false
          type: string
        style: form
      - description: |
          ID of a schema. Restricts results to those of the specified schema.
        explode: true
        in: query
        name: schemaId
        required: false
        schema:
          type: string
        style: form
      - description: |
          Schema field value. For Integer, Float, and Date type fields, supports the >= and <= operators. If present, the schemaId param must also be present. Restricts results to those with a field of whose value matches the filter.
        explode: true
        in: query
        name: schemaFields
        required: false
        schema:
          $ref: '#/components/schemas/SchemaFieldsQueryParam'
        style: form
      - description: |
          Datetime, in RFC 3339 format. Supports the > and < operators. Time zone defaults to UTC. Restricts results to those modified in the specified range. e.g. > 2017-04-30.
        explode: true
        in: query
        name: modifiedAt
        required: false
        schema:
          type: string
        style: form
      - description: Name of a box. Restricts results to those with the specified
          name.
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: |
          Name substring of a box. Restricts results to those with names that include the provided substring.
        explode: true
        in: query
        name: nameIncludes
        required: false
        schema:
          type: string
        style: form
      - description: |
          Only return boxes that have the specified number of empty positions
        explode: true
        in: query
        name: emptyPositions
        required: false
        schema:
          type: integer
        style: form
      - description: |
          Only return boxes that have greater-than or equal-to the specified number of empty positions.
        explode: true
        in: query
        name: emptyPositions.gte
        required: false
        schema:
          type: integer
        style: form
      - description: |
          Only return boxes that have greater-than the specified number of empty positions.
        explode: true
        in: query
        name: emptyPositions.gt
        required: false
        schema:
          type: integer
        style: form
      - description: |
          Only return boxes that have less-than or equal-to the specified number of empty positions.
        explode: true
        in: query
        name: emptyPositions.lte
        required: false
        schema:
          type: integer
        style: form
      - description: |
          Only return boxes that have less-than the specified number of empty positions.
        explode: true
        in: query
        name: emptyPositions.lt
        required: false
        schema:
          type: integer
        style: form
      - description: |
          Only return boxes that have the specified number of empty containers (containers without contents).
        explode: true
        in: query
        name: emptyContainers
        required: false
        schema:
          type: integer
        style: form
      - description: |
          Only return boxes that have greater-than or equal-to the specified number of empty containers (containers without contents).
        explode: true
        in: query
        name: emptyContainers.gte
        required: false
        schema:
          type: integer
        style: form
      - description: |
          Only return boxes that have greater-than the specified number of empty containers (containers without contents).
        explode: true
        in: query
        name: emptyContainers.gt
        required: false
        schema:
          type: integer
        style: form
      - description: |
          Only return boxes that have less-than or equal-to the specified number of empty containers (containers without contents).
        explode: true
        in: query
        name: emptyContainers.lte
        required: false
        schema:
          type: integer
        style: form
      - description: |
          Only return boxes that have less-than the specified number of empty containers (containers without contents).
        explode: true
        in: query
        name: emptyContainers.lt
        required: false
        schema:
          type: integer
        style: form
      - description: |
          ID of a location. Restricts results to those located in the specified storage.
        explode: true
        in: query
        name: ancestorStorageId
        required: false
        schema:
          type: string
        style: form
      - description: |
          ID of a batch, entity, or entity schema. Restricts results to those that hold containers with entities or batches associated with the specified ID.
        explode: true
        in: query
        name: storageContentsId
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of IDs of batches or entities. Restricts results to those that hold containers with at least one of the specified batches, entities, or batches of the specified entities.
        explode: true
        in: query
        name: storageContentsIds
        required: false
        schema:
          type: string
        style: form
      - description: |
          Archive reason. Restricts items to those with the specified archive reason. Use "NOT_ARCHIVED" to filter for unarchived boxes. Use "ANY_ARCHIVED" to filter for archived boxes regardless of reason. Use "ANY_ARCHIVED_OR_NOT_ARCHIVED" to return items for both archived and unarchived.
        examples:
          "1_not_archived":
            summary: Only include unarchived items (default).
            value: NOT_ARCHIVED
          "2_archived_reason":
            summary: Includes items archived for a specific reason.
            value: RETIRED
          "3_any_archived":
            summary: Includes items archived for any reason.
            value: ANY_ARCHIVED
          "4_any_archived_or_not_archived":
            summary: Includes both archived and unarchived items.
            value: ANY_ARCHIVED_OR_NOT_ARCHIVED
        explode: true
        in: query
        name: archiveReason
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of ids. Matches all of the provided IDs, or returns a 400 error that includes a list of which IDs are invalid.
        explode: true
        in: query
        name: ids
        required: false
        schema:
          example: "box_Jx8Zsphf,box_s9Zv7Jto,box_mFDuLwA6"
          type: string
        style: form
      - description: |
          Comma-separated list of barcodes. Matches all of the provided barcodes, or returns a 400 error that includes a list of which barcodes are invalid.
        explode: true
        in: query
        name: barcodes
        required: false
        schema:
          example: "10x10-BOX105,10x10-BOX115"
          type: string
        style: form
      - description: |
          Comma-separated list of names. Restricts results to those that match any of the specified names, case insensitive.  Warning - this filter can be non-performant due to case insensitivity.
        explode: true
        in: query
        name: names.anyOf
        required: false
        schema:
          example: "MyName1,MyName2"
          type: string
        style: form
      - description: |
          Comma-separated list of names. Restricts results to those that match any of the specified names, case sensitive.
        explode: true
        in: query
        name: names.anyOf.caseSensitive
        required: false
        schema:
          example: "MyName1,MyName2"
          type: string
        style: form
      - description: Comma separated list of users IDs
        explode: true
        in: query
        name: creatorIds
        required: false
        schema:
          example: ent_a0SApq3z
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoxesPaginatedList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: List boxes
      tags:
      - Boxes
    post:
      description: Create a box
      operationId: createBox
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BoxCreate'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Box'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Create a box
      tags:
      - Boxes
  /boxes/{box_id}:
    get:
      description: Get a box
      operationId: getBox
      parameters:
      - explode: false
        in: path
        name: box_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Box'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Get a box
      tags:
      - Boxes
    patch:
      description: Update a box
      operationId: updateBox
      parameters:
      - explode: false
        in: path
        name: box_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BoxUpdate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Box'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Update a box
      tags:
      - Boxes
  /boxes/{box_id}/contents:
    get:
      description: List a box's contents
      operationId: listBoxContents
      parameters:
      - explode: false
        in: path
        name: box_id
        required: true
        schema:
          type: string
        style: simple
      - description: Number of results to return.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 50
          maximum: 100
          nullable: false
          type: integer
        style: form
      - description: Token for pagination
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoxContentsPaginatedList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: List a box's contents
      tags:
      - Boxes
  /boxes:archive:
    post:
      description: Archive boxes and any containers of the boxes
      operationId: archiveBoxes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BoxesArchive'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoxesArchivalChange'
          description: OK
      summary: Archive boxes
      tags:
      - Boxes
  /boxes:bulk-get:
    get:
      description: BulkGet boxes
      operationId: bulkGetBoxes
      parameters:
      - explode: true
        in: query
        name: boxIds
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: barcodes
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoxesBulkGet'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: BulkGet boxes
      tags:
      - Boxes
  /boxes:unarchive:
    post:
      description: Unarchive boxes and the containers that were archived along with
        them
      operationId: unarchiveBoxes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BoxesUnarchive'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoxesArchivalChange'
          description: OK
      summary: Unarchive boxes
      tags:
      - Boxes
  /container-schemas:
    get:
      description: List container schemas
      operationId: listContainerSchemas
      parameters:
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 50
          maximum: 100
          minimum: 0
          nullable: false
          type: integer
        style: form
      - description: |
          Datetime, in RFC 3339 format. Supports the > and < operators. Time zone defaults to UTC. Restricts results to those modified in the specified range. e.g. > 2017-04-30.
        explode: true
        in: query
        name: modifiedAt
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerSchemasPaginatedList'
          description: OK
          headers:
            Result-Count:
              description: The total number of schemas that match the given query
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-limit:
              description: The number of allowed requests in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-remaining:
              description: The number of calls remaining in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-reset:
              description: The number of seconds remaining in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: List container schemas
      tags:
      - Schemas
  /container-schemas/{schema_id}:
    get:
      description: Get a container schema by ID
      operationId: getContainerSchema
      parameters:
      - description: ID of schema to get
        explode: false
        in: path
        name: schema_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerSchema'
          description: OK
        "400":
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: Get a container schema by ID
      tags:
      - Schemas
  /containers:
    get:
      description: List containers
      operationId: listContainers
      parameters:
      - description: Number of results to return.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 50
          maximum: 100
          nullable: false
          type: integer
        style: form
      - description: Token for pagination
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: |
          Method by which to order search results. Valid sorts are barcode (bar code, alphabetical) modifiedAt (modified time, most recent first) and name (entity name, alphabetical). Optionally add :asc or :desc to specify ascending or descending order. Default is modifiedAt.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: modifiedAt
          enum:
          - barcode
          - modifiedAt
          - name
          - barcode:asc
          - modifiedAt:asc
          - name:asc
          - barcode:desc
          - modifiedAt:desc
          - name:desc
          nullable: false
          type: string
        style: form
      - description: ID of a schema. Restricts results to those of the specified schema.
        explode: true
        in: query
        name: schemaId
        required: false
        schema:
          type: string
        style: form
      - description: |
          Schema field value. For Integer, Float, and Date type fields, supports the >= and <= operators. If present, the schemaId param must also be present. Restricts results to those with a field of whose value matches the filter.
        explode: true
        in: query
        name: schemaFields
        required: false
        schema:
          $ref: '#/components/schemas/SchemaFieldsQueryParam'
        style: form
      - description: |
          Datetime, in RFC 3339 format. Supports the > and < operators. Time zone defaults to UTC. Restricts results to those modified in the specified range. e.g. > 2017-04-30.
        explode: true
        in: query
        name: modifiedAt
        required: false
        schema:
          type: string
        style: form
      - description: Name of a container. Restricts results to those with the specified
          name.
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: |
          Name substring of a container. Restricts results to those with names that include the provided substring.
        explode: true
        in: query
        name: nameIncludes
        required: false
        schema:
          type: string
        style: form
      - description: "ID of a plate, box, or location. Restricts results to those\
          \ located in the specified storage."
        explode: true
        in: query
        name: ancestorStorageId
        required: false
        schema:
          type: string
        style: form
      - description: |
          ID of a batch, entity, or entity schema. Restricts results to those that contain the specified batches, batches of the specified entities, or batches of entities of the specified schema.
        explode: true
        in: query
        name: storageContentsId
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of IDs of batches or entities. Restricts results to those that hold containers with at least one of the specified batches, entities, or batches of the specified entities.
        explode: true
        in: query
        name: storageContentsIds
        required: false
        schema:
          type: string
        style: form
      - description: |
          Archive reason. Restricts items to those with the specified archive reason. Use "NOT_ARCHIVED" to filter for unarchived containers. Use "ANY_ARCHIVED" to filter for archived containers regardless of reason. Use "ANY_ARCHIVED_OR_NOT_ARCHIVED" to return items for both archived and unarchived.
        examples:
          "1_not_archived":
            summary: Only include unarchived items (default).
            value: NOT_ARCHIVED
          "2_archived_reason":
            summary: Includes items archived for a specific reason.
            value: RETIRED
          "3_any_archived":
            summary: Includes items archived for any reason.
            value: ANY_ARCHIVED
          "4_any_archived_or_not_archived":
            summary: Includes both archived and unarchived items.
            value: ANY_ARCHIVED_OR_NOT_ARCHIVED
        explode: true
        in: query
        name: archiveReason
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of check-out statuses. Restricts results to those that match one of the specified statuses. Valid statuses are AVAILABLE, RESERVED, and CHECKED_OUT.
        explode: true
        in: query
        name: checkoutStatus
        required: false
        schema:
          enum:
          - AVAILABLE
          - RESERVED
          - CHECKED_OUT
          type: string
        style: form
      - description: |
          Comma-separated list of ids. Matches all of the provided IDs, or returns a 400 error that includes a list of which IDs are invalid.
        explode: true
        in: query
        name: ids
        required: false
        schema:
          example: "con_Q6uhNZvw,con_OwmERWGE,con_nzuDFhNvz"
          type: string
        style: form
      - description: |
          Comma-separated list of barcodes. Matches all of the provided barcodes, or returns a 400 error that includes a list of which barcodes are invalid.
        explode: true
        in: query
        name: barcodes
        required: false
        schema:
          example: "W103371,W103343,W103366"
          type: string
        style: form
      - description: |
          Comma-separated list of names. Restricts results to those that match any of the specified names, case insensitive.  Warning - this filter can be non-performant due to case insensitivity.
        explode: true
        in: query
        name: names.anyOf
        required: false
        schema:
          example: "MyName1,MyName2"
          type: string
        style: form
      - description: |
          Comma-separated list of names. Restricts results to those that match any of the specified names, case sensitive.
        explode: true
        in: query
        name: names.anyOf.caseSensitive
        required: false
        schema:
          example: "MyName1,MyName2"
          type: string
        style: form
      - description: Comma separated list of users IDs
        explode: true
        in: query
        name: creatorIds
        required: false
        schema:
          example: ent_a0SApq3z
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainersPaginatedList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: List containers
      tags:
      - Containers
    post:
      description: Create a new container
      operationId: createContainer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContainerCreate'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Container'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Create a new container
      tags:
      - Containers
  /containers/{container_id}:
    get:
      description: get a container by id
      operationId: getContainer
      parameters:
      - explode: false
        in: path
        name: container_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Container'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: get a container by id
      tags:
      - Containers
    patch:
      description: update a container
      operationId: updateContainer
      parameters:
      - explode: false
        in: path
        name: container_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContainerUpdate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Container'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: update a container
      tags:
      - Containers
  /containers/{container_id}/contents:
    get:
      description: List a container's contents
      operationId: listContainerContents
      parameters:
      - explode: false
        in: path
        name: container_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerContentsList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: List a container's contents
      tags:
      - Containers
  /containers/{container_id}/contents/{containable_id}:
    delete:
      description: Delete a container content
      operationId: deleteContainerContent
      parameters:
      - explode: false
        in: path
        name: container_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: containable_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: Delete a container content
      tags:
      - Containers
    get:
      description: Get a container content
      operationId: getContainerContent
      parameters:
      - explode: false
        in: path
        name: container_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: containable_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerContent'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: Get a container content
      tags:
      - Containers
    patch:
      description: Update a container content
      operationId: updateContainerContent
      parameters:
      - explode: false
        in: path
        name: container_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: containable_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContainerContentUpdate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerContent'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: Update a container content
      tags:
      - Containers
  /containers/{destination_container_id}:transfer:
    post:
      description: |
        Transfers a volume of an entity, batch, or container into a destination container.
        Transfering a volume is cumulative with the existing destination container's contents. To transfer an entire container's contents, the sourceContainerId should be specified. To otherwise transfer multiple entities within a container, you can make multiple calls to this endpoint, specifying a single entity with each call.
      operationId: transferIntoContainer
      parameters:
      - explode: false
        in: path
        name: destination_container_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContainerTransfer'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyObject'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Transfer into container
      tags:
      - Containers
  /containers:archive:
    post:
      description: Archive containers
      operationId: archiveContainers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContainersArchive'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainersArchivalChange'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Archive containers
      tags:
      - Containers
  /containers:bulk-create:
    post:
      description: Bulk create containers
      operationId: bulkCreateContainers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContainersBulkCreateRequest'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskLink'
          description: |
            This endpoint launches a [long-running task](#/Tasks/getTask) and returns the Task ID of the launched task.
            The task response contains the full list of Containers that were created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Bulk create containers. Limit of 1000 containers per request.
      tags:
      - Containers
  /containers:bulk-get:
    get:
      description: "Bulk get a set of containers. Provide either containerIds or barcodes,\
        \ not both."
      operationId: bulkGetContainers
      parameters:
      - description: |
          Comma-separated list of container IDs.
        explode: true
        in: query
        name: containerIds
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of barcodes. Matches all of the provided barcodes, or returns a 400 error that includes a list of which barcodes are invalid.
        explode: true
        in: query
        name: barcodes
        required: false
        schema:
          example: "W102477,W102478"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainersList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Bulk get a set of containers
      tags:
      - Containers
  /containers:bulk-update:
    post:
      description: Bulk update containers
      operationId: bulkUpdateContainers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContainersBulkUpdateRequest'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskLink'
          description: |
            This endpoint launches a [long-running task](#/Tasks/getTask) and returns the Task ID of the launched task.
            The task response contains the full list of Containers that were updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Bulk update containers
      tags:
      - Containers
  /containers:check-in:
    post:
      description: Check in containers to signify that they are available for use.
      operationId: checkinContainers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContainersCheckin'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyObject'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Check in containers
      tags:
      - Containers
  /containers:check-out:
    post:
      description: Check out containers to signify that they are in use.
      operationId: checkoutContainers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContainersCheckout'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyObject'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Check out containers
      tags:
      - Containers
  /containers:print-labels:
    post:
      description: Print labels
      operationId: printLabels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrintLabels'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyObject'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Print labels
      tags:
      - Containers
  /containers:reserve:
    post:
      description: Reserve containers to signify that someone plans to use the containers.
      operationId: reserveContainers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContainersCheckout'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyObject'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Reserve containers
      tags:
      - Containers
  /containers:unarchive:
    post:
      description: Unarchive containers
      operationId: unarchiveContainers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContainersUnarchive'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainersArchivalChange'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Unarchive containers
      tags:
      - Containers
  /custom-entities:
    get:
      description: List custom entities
      operationId: listCustomEntities
      parameters:
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 50
          maximum: 100
          minimum: 0
          nullable: false
          type: integer
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          default: modifiedAt:desc
          description: |
            Sets the sort-order of the response. Valid sorts are modifiedAt (modified time, most recent first) and name (entity name, alphabetical). Optionally add :asc or :desc to specify ascending or descending order.
          enum:
          - modifiedAt
          - modifiedAt:asc
          - modifiedAt:desc
          - name
          - name:asc
          - name:desc
          nullable: false
          type: string
        style: form
      - description: |
          Datetime, in RFC 3339 format. Supports the > and < operators. Time zone defaults to UTC. Restricts results to those modified in the specified range. e.g. > 2017-04-30.
        explode: true
        in: query
        name: modifiedAt
        required: false
        schema:
          type: string
        style: form
      - description: "Name of a custom entity. Restricts results to those with the\
          \ specified name, alias, or entity registry ID."
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: "Comma-separated list of fields to return. Modifies the output\
          \ shape. To return all keys at a given level, enumerate them or use the\
          \ wildcard, '*'. For more information, [click here](https://docs.benchling.com/docs/getting-started-1#returning-query-parameter)."
        explode: true
        in: query
        name: returning
        required: false
        schema:
          example: "customEntities.id,customEntities.modifiedAt"
          type: string
        style: form
      - description: |
          Name substring of a custom entity. Restricts results to those with names, aliases, or entity registry IDs that include the provided substring.
        explode: true
        in: query
        name: nameIncludes
        required: false
        schema:
          type: string
        style: form
      - description: ID of a folder. Restricts results to those in the folder.
        explode: true
        in: query
        name: folderId
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of entry IDs. Restricts results to custom entities mentioned in those entries.
        explode: true
        in: query
        name: mentionedIn
        required: false
        schema:
          type: string
        style: form
      - description: ID of a project. Restricts results to those in the project.
        explode: true
        in: query
        name: projectId
        required: false
        schema:
          type: string
        style: form
      - description: |
          ID of a registry. Restricts results to those registered in this registry. Specifying "null" returns unregistered items.
        explode: true
        in: query
        name: registryId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: |
          ID of a schema. Restricts results to those of the specified schema.
        explode: true
        in: query
        name: schemaId
        required: false
        schema:
          type: string
        style: form
      - description: |
          Schema field value. For Integer, Float, and Date type fields, supports the >= and <= operators. If present, the schemaId param must also be present. Restricts results to those with a field of whose value matches the filter.
        explode: true
        in: query
        name: schemaFields
        required: false
        schema:
          $ref: '#/components/schemas/SchemaFieldsQueryParam'
        style: form
      - description: |
          Archive reason. Restricts items to those with the specified archive reason. Use "NOT_ARCHIVED" to filter for unarchived custom entities. Use "ANY_ARCHIVED" to filter for archived custom entities regardless of reason. Use "ANY_ARCHIVED_OR_NOT_ARCHIVED" to return items for both archived and unarchived.
        examples:
          "1_not_archived":
            summary: Only include unarchived items (default).
            value: NOT_ARCHIVED
          "2_archived_reason":
            summary: Includes items archived for a specific reason.
            value: RETIRED
          "3_any_archived":
            summary: Includes items archived for any reason.
            value: ANY_ARCHIVED
          "4_any_archived_or_not_archived":
            summary: Includes both archived and unarchived items.
            value: ANY_ARCHIVED_OR_NOT_ARCHIVED
        explode: true
        in: query
        name: archiveReason
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of resource IDs. Restricts results to those that mention the given items in the description.
        explode: true
        in: query
        name: mentions
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of ids. Matches all of the provided IDs, or returns a 400 error that includes a list of which IDs are invalid.
        explode: true
        in: query
        name: ids
        required: false
        schema:
          example: "bfi_blhxTUl1,bfi_y5bkDmJp,bfi_xwfILBog"
          type: string
        style: form
      - description: |
          Comma-separated list of names. Restricts results to those that match any of the specified names, aliases, or entity registry IDs, case insensitive.  Warning - this filter can be non-performant due to case insensitivity.
        explode: true
        in: query
        name: names.anyOf
        required: false
        schema:
          example: "MyName1,MyName2"
          type: string
        style: form
      - description: |
          Comma-separated list of names. Restricts results to those that match any of the specified names, aliases, or entity registry IDs, case sensitive.
        explode: true
        in: query
        name: names.anyOf.caseSensitive
        required: false
        schema:
          example: "MyName1,MyName2"
          type: string
        style: form
      - description: |
          Comma-separated list of entity registry IDs. Restricts results to those that match any of the specified registry IDs
        explode: true
        in: query
        name: entityRegistryIds.anyOf
        required: false
        schema:
          example: "TP001,TP002"
          type: string
        style: form
      - description: Comma separated list of users IDs
        explode: true
        in: query
        name: creatorIds
        required: false
        schema:
          example: ent_a0SApq3z
          type: string
        style: form
      - description: Comma separated list of user or app IDs
        explode: true
        in: query
        name: authorIds.anyOf
        required: false
        schema:
          example: "ent_a0SApq3z,ent_b4AApz9b"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomEntitiesPaginatedList'
          description: OK
          headers:
            Result-Count:
              description: The total number of items that match the given query
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-limit:
              description: The number of allowed requests in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-remaining:
              description: The number of seconds remaining in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-reset:
              description: The number of seconds remaining in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: List custom entities
      tags:
      - Custom Entities
    post:
      description: Create a custom entity
      operationId: createCustomEntity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomEntityCreate'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomEntity'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
        "503":
          description: Service Unavailable (Lock Contention)
      summary: Create a custom entity
      tags:
      - Custom Entities
  /custom-entities/{custom_entity_id}:
    get:
      description: Get a custom entity
      operationId: getCustomEntity
      parameters:
      - explode: false
        in: path
        name: custom_entity_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomEntity'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Get a custom entity
      tags:
      - Custom Entities
    patch:
      description: Update a custom entity
      operationId: updateCustomEntity
      parameters:
      - explode: false
        in: path
        name: custom_entity_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomEntityUpdate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomEntity'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Update a custom entity
      tags:
      - Custom Entities
  /custom-entities:archive:
    post:
      description: Archive custom entities
      operationId: archiveCustomEntities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomEntitiesArchive'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomEntitiesArchivalChange'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Archive custom entities
      tags:
      - Custom Entities
  /custom-entities:bulk-create:
    post:
      description: Bulk Create custom entities. Limit of 2500 custom entities per
        request.
      operationId: bulkCreateCustomEntities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomEntitiesBulkCreateRequest'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskLink'
          description: |
            This endpoint launches a [long-running task](#/Tasks/getTask) and returns the Task ID of the launched task.
            The task response contains the full list of custom entities that were created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Bulk Create custom entities
      tags:
      - Custom Entities
  /custom-entities:bulk-get:
    get:
      description: Bulk get custom entities by ID
      operationId: bulkGetCustomEntities
      parameters:
      - description: |
          Comma-separated list of IDs of custom entities to get.
        explode: true
        in: query
        name: customEntityIds
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomEntitiesList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Bulk get custom entities by ID
      tags:
      - Custom Entities
  /custom-entities:bulk-update:
    post:
      description: Bulk Update custom entities
      operationId: bulkUpdateCustomEntities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomEntitiesBulkUpdateRequest'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskLink'
          description: |
            This endpoint launches a [long-running task](#/Tasks/getTask) and returns the Task ID of the launched task.
            The task response contains the full list of custom entities that were updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Bulk Update custom entities
      tags:
      - Custom Entities
  /custom-entities:unarchive:
    post:
      description: Unarchive custom entities
      operationId: unarchiveCustomEntities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomEntitiesUnarchive'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomEntitiesArchivalChange'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Unarchive custom entities
      tags:
      - Custom Entities
  /dna-alignments:
    get:
      deprecated: true
      description: List DNA Alignments
      operationId: listDNAAlignments
      parameters:
      - description: |
          Number of results to return. Defaults to 50, maximum of 100.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 50
          maximum: 100
          minimum: 0
          nullable: false
          type: integer
        style: form
      - description: Token for pagination
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          default: modifiedAt:desc
          description: |
            Method by which to order search results. Valid sorts are modifiedAt (modified time, most recent first) and name (entity name, alphabetical). Optionally add :asc or :desc to specify ascending or descending order.
          enum:
          - modifiedAt
          - modifiedAt:asc
          - modifiedAt:desc
          - name
          - name:asc
          - name:desc
          nullable: false
          type: string
        style: form
      - description: |
          Datetime, in RFC 3339 format. Supports the > and < operators. Time zone defaults to UTC. Restricts results to those modified in the specified range. e.g. > 2017-04-30.
        explode: true
        in: query
        name: modifiedAt
        required: false
        schema:
          type: string
        style: form
      - description: Name of a DNA Alignment. Restricts results to those with the
          specified name.
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Name substring of a DNA Alignment. Restricts results to those
          with names that include the provided substring.
        explode: true
        in: query
        name: nameIncludes
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of ids. Matches all of the provided IDs, or returns a 400 error that includes a list of which IDs are invalid.
        explode: true
        in: query
        name: ids
        required: false
        schema:
          example: "seqanl_VfVOART1,seqanl_RFhDGaaC"
          type: string
        style: form
      - description: |
          Comma-separated list of names. Restricts results to those that match any of the specified names, case insensitive.  Warning - this filter can be non-performant due to case insensitivity.
        explode: true
        in: query
        name: names.anyOf
        required: false
        schema:
          example: "MyName1,MyName2"
          type: string
        style: form
      - description: |
          Comma-separated list of names. Restricts results to those that match any of the specified names, case sensitive.
        explode: true
        in: query
        name: names.anyOf.caseSensitive
        required: false
        schema:
          example: "MyName1,MyName2"
          type: string
        style: form
      - description: |
          Comma-separated list of sequence ids that own one or more DNA Alignments (i.e. ids of sequences used as the template in a Template Alignment or created as the consensus sequence from a Consensus Alignment). Matches all of the provided IDs, or returns a 400 error that includes a list of which IDs are invalid.
        explode: true
        in: query
        name: sequenceIds
        required: false
        schema:
          example: "seq_VfVOART1,seq_RFhDGaaC"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnaAlignmentsPaginatedList'
          description: OK
          headers:
            Result-Count:
              description: The total number of items that match the given query
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-limit:
              description: The number of allowed requests in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-remaining:
              description: The number of requests remaining in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-reset:
              description: The number of seconds remaining in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: List DNA Alignments
      tags:
      - DNA Alignments
  /dna-alignments/{dna_alignment_id}:
    delete:
      deprecated: true
      description: Delete a DNA Alignment
      operationId: deleteDNAAlignment
      parameters:
      - explode: false
        in: path
        name: dna_alignment_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyObject'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: Delete a DNA Alignment
      tags:
      - DNA Alignments
    get:
      deprecated: true
      description: Get a DNA Alignment
      operationId: getDNAAlignment
      parameters:
      - explode: false
        in: path
        name: dna_alignment_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnaAlignment'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Get a DNA Alignment
      tags:
      - DNA Alignments
  /dna-alignments:create-consensus-alignment:
    post:
      deprecated: true
      description: Create a consensus DNA alignment
      operationId: createDnaConsensusAlignment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnaConsensusAlignmentCreate'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskLink'
          description: |
            This endpoint launches a [long-running task](#/Tasks/getTask) and returns the Task ID of the launched task.
            When successful, the task returns the [DNA Alignment](#/DNA%20Alignments/getDNAAlignment) resource that was created.
      summary: Create a consensus DNA alignment
      tags:
      - DNA Alignments
  /dna-alignments:create-template-alignment:
    post:
      deprecated: true
      description: Create a template DNA alignment
      operationId: createDnaTemplateAlignment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnaTemplateAlignmentCreate'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskLink'
          description: |
            This endpoint launches a [long-running task](#/Tasks/getTask) and returns the Task ID of the launched task.
            When successful, the task returns the [DNA Alignment](#/DNA%20Alignments/getDNAAlignment) resource that was created.
      summary: Create a template DNA alignment
      tags:
      - DNA Alignments
  /dna-oligos:
    get:
      description: List DNA Oligos
      operationId: listDNAOligos
      parameters:
      - description: |
          Number of results to return. Defaults to 50, maximum of 100.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 50
          maximum: 100
          minimum: 0
          nullable: false
          type: integer
        style: form
      - description: Token for pagination
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          default: modifiedAt:desc
          description: |
            Method by which to order search results. Valid sorts are modifiedAt (modified time, most recent first) and name (entity name, alphabetical). Optionally add :asc or :desc to specify ascending or descending order.
          enum:
          - modifiedAt
          - modifiedAt:asc
          - modifiedAt:desc
          - name
          - name:asc
          - name:desc
          nullable: false
          type: string
        style: form
      - description: |
          Datetime, in RFC 3339 format. Supports the > and < operators. Time zone defaults to UTC. Restricts results to those modified in the specified range. e.g. > 2017-04-30.
        explode: true
        in: query
        name: modifiedAt
        required: false
        schema:
          type: string
        style: form
      - description: "Name of a DNA Oligo. Restricts results to those with the specified\
          \ name, alias, or entity registry ID."
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: "Name substring of a DNA Oligo. Restricts results to those with\
          \ names, aliases, or entity registry IDs that include the provided substring."
        explode: true
        in: query
        name: nameIncludes
        required: false
        schema:
          type: string
        style: form
      - description: |
          Full bases of the DNA Oligo. Restricts results to those with the specified bases, case-insensitive, allowing for circular or reverse complement matches. Does not allow partial matching or loose matching via degenerate bases.
        explode: true
        in: query
        name: bases
        required: false
        schema:
          type: string
        style: form
      - description: ID of a folder. Restricts results to those in the folder.
        explode: true
        in: query
        name: folderId
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of entry IDs. Restricts results to DNA Oligos mentioned in those entries.
        explode: true
        in: query
        name: mentionedIn
        required: false
        schema:
          type: string
        style: form
      - description: ID of a project. Restricts results to those in the project.
        explode: true
        in: query
        name: projectId
        required: false
        schema:
          type: string
        style: form
      - description: |
          ID of a registry. Restricts results to those registered in this registry. Specifying "null" returns unregistered items.
        explode: true
        in: query
        name: registryId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: |
          ID of a schema. Restricts results to those of the specified schema.
        explode: true
        in: query
        name: schemaId
        required: false
        schema:
          type: string
        style: form
      - description: |
          Schema field value. For Integer, Float, and Date type fields, supports the >= and <= operators. If present, the schemaId param must also be present. Restricts results to those with a field of whose value matches the filter.
        explode: true
        in: query
        name: schemaFields
        required: false
        schema:
          $ref: '#/components/schemas/SchemaFieldsQueryParam'
        style: form
      - description: |
          Archive reason. Restricts items to those with the specified archive reason. Use "NOT_ARCHIVED" to filter for unarchived DNA Oligos. Use "ANY_ARCHIVED" to filter for archived DNA Oligos regardless of reason. Use "ANY_ARCHIVED_OR_NOT_ARCHIVED" to return items for both archived and unarchived.
        examples:
          "1_not_archived":
            summary: Only include unarchived items (default).
            value: NOT_ARCHIVED
          "2_archived_reason":
            summary: Includes items archived for a specific reason.
            value: RETIRED
          "3_any_archived":
            summary: Includes items archived for any reason.
            value: ANY_ARCHIVED
          "4_any_archived_or_not_archived":
            summary: Includes both archived and unarchived items.
            value: ANY_ARCHIVED_OR_NOT_ARCHIVED
        explode: true
        in: query
        name: archiveReason
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of item IDs. Restricts results to those that mention the given items in the description.
        explode: true
        in: query
        name: mentions
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of ids. Matches all of the provided IDs, or returns a 400 error that includes a list of which IDs are invalid.
        explode: true
        in: query
        name: ids
        required: false
        schema:
          example: "seq_yWs5X7lv,seq_RhYGVnHF"
          type: string
        style: form
      - description: |
          Comma-separated list of entity registry IDs. Restricts results to those that match any of the specified registry IDs.
        explode: true
        in: query
        name: entityRegistryIds.anyOf
        required: false
        schema:
          example: "TP001,TP002"
          type: string
        style: form
      - description: |
          Comma-separated list of names. Restricts results to those that match any of the specified names, aliases, or entity registry IDs, case insensitive.  Warning - this filter can be non-performant due to case insensitivity.
        explode: true
        in: query
        name: names.anyOf
        required: false
        schema:
          example: "MyName1,MyName2"
          type: string
        style: form
      - description: |
          Comma-separated list of names. Restricts results to those that match any of the specified names, aliases, or entity registry IDs, case sensitive.
        explode: true
        in: query
        name: names.anyOf.caseSensitive
        required: false
        schema:
          example: "MyName1,MyName2"
          type: string
        style: form
      - description: Comma separated list of users IDs
        explode: true
        in: query
        name: creatorIds
        required: false
        schema:
          example: ent_a0SApq3z
          type: string
        style: form
      - description: Comma separated list of user or app IDs
        explode: true
        in: query
        name: authorIds.anyOf
        required: false
        schema:
          example: "ent_a0SApq3z,ent_b4AApz9b"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnaOligosPaginatedList'
          description: OK
          headers:
            Result-Count:
              description: The total number of items that match the given query
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-limit:
              description: The number of allowed requests in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-remaining:
              description: The number of requests remaining in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-reset:
              description: The number of seconds remaining in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: List DNA Oligos
      tags:
      - DNA Oligos
    post:
      description: Create a DNA Oligo
      operationId: createDNAOligo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnaOligoCreate'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnaOligo'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
        "503":
          description: Service Unavailable (Lock Contention)
      summary: Create a DNA Oligo
      tags:
      - DNA Oligos
  /dna-oligos/{oligo_id}:
    get:
      description: Get a DNA Oligo
      operationId: getDNAOligo
      parameters:
      - explode: false
        in: path
        name: oligo_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnaOligo'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Get a DNA Oligo
      tags:
      - DNA Oligos
    patch:
      description: Update a DNA Oligo
      operationId: updateDNAOligo
      parameters:
      - explode: false
        in: path
        name: oligo_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnaOligoUpdate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnaOligo'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Update a DNA Oligo
      tags:
      - DNA Oligos
  /dna-oligos:archive:
    post:
      description: Archive DNA Oligos
      operationId: archiveDNAOligos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnaOligosArchive'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnaOligosArchivalChange'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Archive DNA Oligos
      tags:
      - DNA Oligos
  /dna-oligos:bulk-create:
    post:
      description: Bulk Create DNA Oligos. Limit of 1000 DNA Oligos per request.
      operationId: bulkCreateDNAOligos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnaOligosBulkCreateRequest'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskLink'
          description: |
            This endpoint launches a [long-running task](#/Tasks/getTask) and returns the Task ID of the launched task.
            The task response contains the full list of DNA Oligos that were created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Bulk Create DNA Oligos
      tags:
      - DNA Oligos
  /dna-oligos:bulk-update:
    post:
      description: Bulk Update DNA Oligos
      operationId: bulkUpdateDNAOligos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnaOligosBulkUpdateRequest'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskLink'
          description: |
            This endpoint launches a [long-running task](#/Tasks/getTask) and returns the Task ID of the launched task.
            When successful, the task returns a full list of [DNA Oligo](#/DNA%20Oligos/getDNAOligo) resources that were updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Bulk Update DNA Oligos
      tags:
      - DNA Oligos
  /dna-oligos:unarchive:
    post:
      description: Unarchive DNA Oligos
      operationId: unarchiveDNAOligos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnaOligosUnarchive'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnaOligosArchivalChange'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Unarchive DNA Oligos
      tags:
      - DNA Oligos
  /dna-sequences:
    get:
      description: List DNA sequences
      operationId: listDNASequences
      parameters:
      - description: |
          Number of results to return. Defaults to 50, maximum of 100.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 50
          maximum: 100
          minimum: 0
          nullable: false
          type: integer
        style: form
      - description: Token for pagination
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          default: modifiedAt:desc
          description: |
            Method by which to order search results. Valid sorts are modifiedAt (modified time, most recent first) and name (entity name, alphabetical). Optionally add :asc or :desc to specify ascending or descending order.
          enum:
          - modifiedAt
          - modifiedAt:asc
          - modifiedAt:desc
          - name
          - name:asc
          - name:desc
          nullable: false
          type: string
        style: form
      - description: |
          Datetime, in RFC 3339 format. Supports the > and < operators. Time zone defaults to UTC. Restricts results to those modified in the specified range. e.g. > 2017-04-30.
        explode: true
        in: query
        name: modifiedAt
        required: false
        schema:
          type: string
        style: form
      - description: "Name of a DNA Sequence. Restricts results to those with the\
          \ specified name, alias, or entity registry ID."
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: "Name substring of a DNA Sequence. Restricts results to those\
          \ with names, aliases, or entity registry IDs that include the provided\
          \ substring."
        explode: true
        in: query
        name: nameIncludes
        required: false
        schema:
          type: string
        style: form
      - description: "Full bases of the DNA sequence. Restricts results to those with\
          \ the specified bases, case-insensitive, allowing for circular or reverse\
          \ complement matches. Does not allow partial matching or loose matching\
          \ via degenerate bases."
        explode: true
        in: query
        name: bases
        required: false
        schema:
          type: string
        style: form
      - description: ID of a folder. Restricts results to those in the folder.
        explode: true
        in: query
        name: folderId
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of entry IDs. Restricts results to DNA sequences mentioned in those entries.
        explode: true
        in: query
        name: mentionedIn
        required: false
        schema:
          type: string
        style: form
      - description: ID of a project. Restricts results to those in the project.
        explode: true
        in: query
        name: projectId
        required: false
        schema:
          type: string
        style: form
      - description: |
          ID of a registry. Restricts results to those registered in this registry. Specifying "null" returns unregistered items.
        explode: true
        in: query
        name: registryId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: |
          ID of a schema. Restricts results to those of the specified schema.
        explode: true
        in: query
        name: schemaId
        required: false
        schema:
          type: string
        style: form
      - description: |
          Schema field value. For Integer, Float, and Date type fields, supports the >= and <= operators. If present, the schemaId param must also be present. Restricts results to those with a field of whose value matches the filter.
        explode: true
        in: query
        name: schemaFields
        required: false
        schema:
          $ref: '#/components/schemas/SchemaFieldsQueryParam'
        style: form
      - description: |
          Archive reason. Restricts items to those with the specified archive reason. Use "NOT_ARCHIVED" to filter for unarchived DNA sequences. Use "ANY_ARCHIVED" to filter for archived DNA sequences regardless of reason. Use "ANY_ARCHIVED_OR_NOT_ARCHIVED" to return items for both archived and unarchived.
        examples:
          "1_not_archived":
            summary: Only include unarchived items (default).
            value: NOT_ARCHIVED
          "2_archived_reason":
            summary: Includes items archived for a specific reason.
            value: RETIRED
          "3_any_archived":
            summary: Includes items archived for any reason.
            value: ANY_ARCHIVED
          "4_any_archived_or_not_archived":
            summary: Includes both archived and unarchived items.
            value: ANY_ARCHIVED_OR_NOT_ARCHIVED
        explode: true
        in: query
        name: archiveReason
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of item IDs. Restricts results to those that mention the given items in the description.
        explode: true
        in: query
        name: mentions
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of ids. Matches all of the provided IDs, or returns a 400 error that includes a list of which IDs are invalid.
        explode: true
        in: query
        name: ids
        required: false
        schema:
          example: "seq_VfVOART1,seq_RFhDGaaC"
          type: string
        style: form
      - description: |
          Comma-separated list of entity registry IDs. Restricts results to those that match any of the specified registry IDs.
        explode: true
        in: query
        name: entityRegistryIds.anyOf
        required: false
        schema:
          example: "TP001,TP002"
          type: string
        style: form
      - description: |
          Comma-separated list of names. Restricts results to those that match any of the specified names, aliases, or entity registry IDs, case insensitive.  Warning - this filter can be non-performant due to case insensitivity.
        explode: true
        in: query
        name: names.anyOf
        required: false
        schema:
          example: "MyName1,MyName2"
          type: string
        style: form
      - description: |
          Comma-separated list of names. Restricts results to those that match any of the specified names, aliases, or entity registry IDs, case sensitive.
        explode: true
        in: query
        name: names.anyOf.caseSensitive
        required: false
        schema:
          example: "MyName1,MyName2"
          type: string
        style: form
      - description: Comma separated list of users IDs
        explode: true
        in: query
        name: creatorIds
        required: false
        schema:
          example: ent_a0SApq3z
          type: string
        style: form
      - description: Comma separated list of user or app IDs
        explode: true
        in: query
        name: authorIds.anyOf
        required: false
        schema:
          example: "ent_a0SApq3z,ent_b4AApz9b"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnaSequencesPaginatedList'
          description: OK
          headers:
            Result-Count:
              description: The total number of items that match the given query
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-limit:
              description: The number of allowed requests in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-remaining:
              description: The number of requests remaining in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-reset:
              description: The number of seconds remaining in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: List DNA sequences
      tags:
      - DNA Sequences
    post:
      description: Create a DNA sequence
      operationId: createDNASequence
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnaSequenceCreate'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnaSequence'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
        "503":
          description: Service Unavailable (Lock Contention)
      summary: Create a DNA sequence
      tags:
      - DNA Sequences
  /dna-sequences/{dna_sequence_id}:
    get:
      description: Get a DNA sequence
      operationId: getDNASequence
      parameters:
      - explode: false
        in: path
        name: dna_sequence_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnaSequence'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Get a DNA sequence
      tags:
      - DNA Sequences
    patch:
      description: Update a DNA sequence
      operationId: updateDNASequence
      parameters:
      - explode: false
        in: path
        name: dna_sequence_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnaSequenceUpdate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnaSequence'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Update a DNA sequence
      tags:
      - DNA Sequences
  /dna-sequences:archive:
    post:
      description: Archive DNA sequences
      operationId: archiveDNASequences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnaSequencesArchive'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnaSequencesArchivalChange'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Archive DNA sequences
      tags:
      - DNA Sequences
  /dna-sequences:auto-annotate:
    post:
      description: Auto-annotate DNA sequences with matching features from specified
        Feature Libraries
      operationId: autoAnnotateDnaSequences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutoAnnotateDnaSequences'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskLink'
          description: |
            This endpoint launches a [long-running task](#/Tasks/getTask) and returns the Task ID of the launched task.
            When successful, the task has an empty response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Auto-annotate DNA sequences with matching features from specified Feature
        Libraries
      tags:
      - DNA Sequences
  /dna-sequences:autofill-parts:
    post:
      description: Autofill DNA sequence parts
      operationId: autofillDNASequenceParts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutofillSequences'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskLink'
          description: |
            This endpoint launches a [long-running task](#/Tasks/getTask) and returns the Task ID of the launched task.
            When successful, the task has an empty response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Autofill DNA sequence parts
      tags:
      - DNA Sequences
  /dna-sequences:autofill-translations:
    post:
      description: Autofill DNA sequence translations
      operationId: autofillDNASequenceTranslations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutofillSequences'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskLink'
          description: |
            This endpoint launches a [long-running task](#/Tasks/getTask) and returns the Task ID of the launched task.
            When successful, the task has an empty response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Autofill DNA sequence translations
      tags:
      - DNA Sequences
  /dna-sequences:bulk-create:
    post:
      description: Bulk Create DNA sequences. Limit of 1000 DNA Sequences per request.
      operationId: bulkCreateDNASequences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnaSequencesBulkCreateRequest'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskLink'
          description: |
            This endpoint launches a [long-running task](#/Tasks/getTask) and returns the Task ID of the launched task.
            When successful, the task returns a full list of [DNA Sequence](#/DNA%20Sequences/getDNASequence) resources that were created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Bulk Create DNA sequences
      tags:
      - DNA Sequences
  /dna-sequences:bulk-get:
    get:
      description: Bulk get DNA sequences by ID
      operationId: bulkGetDNASequences
      parameters:
      - description: |
          Comma-separated list of IDs of DNA sequences to get.
        explode: true
        in: query
        name: dnaSequenceIds
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnaSequencesBulkGet'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Bulk get DNA sequences by ID
      tags:
      - DNA Sequences
  /dna-sequences:bulk-update:
    post:
      description: Bulk Update DNA sequences
      operationId: bulkUpdateDNASequences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnaSequencesBulkUpdateRequest'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskLink'
          description: |
            This endpoint launches a [long-running task](#/Tasks/getTask) and returns the Task ID of the launched task.
            When successful, the task returns a full list of [DNA Sequence](#/DNA%20Sequences/getDNASequence) resources that were updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Bulk Update DNA sequences
      tags:
      - DNA Sequences
  /dna-sequences:unarchive:
    post:
      description: Unarchive DNA sequences
      operationId: unarchiveDNASequences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnaSequencesUnarchive'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnaSequencesArchivalChange'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Unarchive DNA sequences
      tags:
      - DNA Sequences
  /dropdowns:
    get:
      description: List dropdowns
      operationId: listDropdowns
      parameters:
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 50
          maximum: 100
          minimum: 0
          nullable: false
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DropdownSummariesPaginatedList'
          description: OK
          headers:
            Result-Count:
              description: The total number of dropdowns that match the given query
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-limit:
              description: The number of allowed requests in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-remaining:
              description: The number of calls remaining in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-reset:
              description: The number of seconds remaining in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: List dropdowns
      tags:
      - Dropdowns
    post:
      description: Create a dropdown
      operationId: createDropdown
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DropdownCreate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dropdown'
          description: Created
          headers:
            x-rate-limit-limit:
              description: The number of allowed requests in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-remaining:
              description: The number of seconds remaining in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-reset:
              description: The number of seconds remaining in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Create a dropdown
      tags:
      - Dropdowns
  /dropdowns/{dropdown_id}:
    get:
      description: Get a dropdown
      operationId: getDropdown
      parameters:
      - explode: false
        in: path
        name: dropdown_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dropdown'
          description: OK
          headers:
            x-rate-limit-limit:
              description: The number of allowed requests in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-remaining:
              description: The number of seconds remaining in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-reset:
              description: The number of seconds remaining in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: Get a dropdown
      tags:
      - Dropdowns
    patch:
      description: Update a dropdown
      operationId: updateDropdown
      parameters:
      - explode: false
        in: path
        name: dropdown_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DropdownUpdate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dropdown'
          description: OK
          headers:
            x-rate-limit-limit:
              description: The number of allowed requests in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-remaining:
              description: The number of seconds remaining in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-reset:
              description: The number of seconds remaining in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: Update a dropdown
      tags:
      - Dropdowns
  /dropdowns/{dropdown_id}/options:archive:
    post:
      description: Archive options belonging to a dropdown
      operationId: archiveDropdownOptions
      parameters:
      - description: ID of the dropdown to archive options for.
        explode: false
        in: path
        name: dropdown_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DropdownOptionsArchive'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DropdownOptionsArchivalChange'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: Archive dropdown options
      tags:
      - Dropdowns
  /dropdowns/{dropdown_id}/options:unarchive:
    post:
      description: Unarchive options belonging to a dropdown
      operationId: unarchiveDropdownOptions
      parameters:
      - description: ID of the dropdown to archive options for.
        explode: false
        in: path
        name: dropdown_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DropdownOptionsUnarchive'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DropdownOptionsArchivalChange'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: Unarchive dropdown options
      tags:
      - Dropdowns
  /entities/{entity_id}/batches:
    get:
      description: Get an entity's batches
      operationId: getEnitityBatches
      parameters:
      - explode: false
        in: path
        name: entity_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchesPaginatedList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Get an entity's batches
      tags:
      - Batches
  /entity-schemas:
    get:
      description: List entity schemas
      operationId: listEntitySchemas
      parameters:
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 50
          maximum: 100
          minimum: 0
          nullable: false
          type: integer
        style: form
      - description: |
          Datetime, in RFC 3339 format. Supports the > and < operators. Time zone defaults to UTC. Restricts results to those modified in the specified range. e.g. > 2017-04-30.
        explode: true
        in: query
        name: modifiedAt
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitySchemasPaginatedList'
          description: OK
          headers:
            Result-Count:
              description: The total number of schemas that match the given query
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-limit:
              description: The number of allowed requests in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-remaining:
              description: The number of calls remaining in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-reset:
              description: The number of seconds remaining in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: List entity schemas
      tags:
      - Schemas
  /entity-schemas/{schema_id}:
    get:
      description: Get an entity schema by ID
      operationId: getEntitySchema
      parameters:
      - description: ID of schema to get
        explode: false
        in: path
        name: schema_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitySchema'
          description: OK
        "400":
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: Get an entity schema by ID
      tags:
      - Schemas
  /entries:
    get:
      description: List notebook entries
      operationId: listEntries
      parameters:
      - description: "Number of results to return. Defaults to 50, maximum of 100."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 50
          maximum: 100
          minimum: 0
          nullable: false
          type: integer
        style: form
      - description: Token for pagination
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: |
          Method by which to order search results. Valid sorts are modifiedAt (modified time, most recent first) and name (entity name, alphabetical). Optionally add :asc or :desc to specify ascending or descending order.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: modifiedAt:desc
          enum:
          - modifiedAt
          - modifiedAt:asc
          - modifiedAt:desc
          - name
          - name:asc
          - name:desc
          nullable: false
          type: string
        style: form
      - description: |
          Datetime, in RFC 3339 format. Supports the > operator. Time zone defaults to UTC. Restricts results to those modified in the specified range. e.g. > 2017-04-30.
        explode: true
        in: query
        name: modifiedAt
        required: false
        schema:
          type: string
        style: form
      - description: Name of an Entry. Restricts results to those with the specified
          name.
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: ID of a project. Restricts results to those in the project.
        explode: true
        in: query
        name: projectId
        required: false
        schema:
          type: string
        style: form
      - description: |
          Archive reason. Restricts items to those with the specified archive reason. Use "NOT_ARCHIVED" to filter for unarchived entries. Use "ANY_ARCHIVED" to filter for archived entries regardless of reason. Use "ANY_ARCHIVED_OR_NOT_ARCHIVED" to return items for both archived and unarchived.
        examples:
          "1_not_archived":
            summary: Only include unarchived items (default).
            value: NOT_ARCHIVED
          "2_archived_reason":
            summary: Includes items archived for a specific reason.
            value: RETIRED
          "3_any_archived":
            summary: Includes items archived for any reason.
            value: ANY_ARCHIVED
          "4_any_archived_or_not_archived":
            summary: Includes both archived and unarchived items.
            value: ANY_ARCHIVED_OR_NOT_ARCHIVED
        explode: true
        in: query
        name: archiveReason
        required: false
        schema:
          type: string
        style: form
      - description: |
          Restrict results to those with the given review status. Supported statuses: IN_PROGRESS, ACCEPTED, REJECTED, NEEDS_REVIEW, RETRACTED
        explode: true
        in: query
        name: reviewStatus
        required: false
        schema:
          enum:
          - IN_PROGRESS
          - ACCEPTED
          - REJECTED
          - NEEDS_REVIEW
          - RETRACTED
          type: string
        style: form
      - description: |
          Comma-separated list of entry IDs. Restricts results to those mentioned within the entries in this list.
        explode: true
        in: query
        name: mentionedIn
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of resource IDs. Restricts results to entries that mention the given items.
        explode: true
        in: query
        name: mentions
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of ids. Matches all of the provided IDs, or returns a 400 error that includes a list of which IDs are invalid.
        explode: true
        in: query
        name: ids
        required: false
        schema:
          type: string
        style: form
      - description: |
          ID of a schema. Restricts results to those of the specified schema.
        explode: true
        in: query
        name: schemaId
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of names. Restricts results to those that match any of the specified names, case insensitive.  Warning - this filter can be non-performant due to case insensitivity.
        explode: true
        in: query
        name: names.anyOf
        required: false
        schema:
          example: "MyName1,MyName2"
          type: string
        style: form
      - description: |
          Comma-separated list of names. Restricts results to those that match any of the specified names, case sensitive.
        explode: true
        in: query
        name: names.anyOf.caseSensitive
        required: false
        schema:
          example: "MyName1,MyName2"
          type: string
        style: form
      - description: Comma-separated list of ids. Restricts results to entries that
          have assignees of any of the specified ids.
        explode: true
        in: query
        name: assignedReviewerIds.anyOf
        required: false
        schema:
          example: "ent_a0SApq3z,ent_SdUvia1v"
          type: string
        style: form
      - description: Comma separated list of users IDs
        explode: true
        in: query
        name: creatorIds
        required: false
        schema:
          example: ent_a0SApq3z
          type: string
        style: form
      - description: Comma separated list of user or app IDs
        explode: true
        in: query
        name: authorIds.anyOf
        required: false
        schema:
          example: "ent_a0SApq3z,ent_b4AApz9b"
          type: string
        style: form
      - description: Comma-separated list of Entry Display IDs.
        explode: true
        in: query
        name: displayIds
        required: false
        schema:
          example: "VPR001,VPR002"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntriesPaginatedList'
          description: |
            Returns a list of entries. Entries are notes that users can take. They're organized by "days" (which are user-configurable) and modeled within each day as a list of "notes." Each note has a type - the simplest is a "text" type, but lists, tables, and external files are also supported.

            *Note:* the current Entry resource has a few limitations:
            - Formatting information is not yet supported. Header formatting, bolding, and other stylistic information is not presented.
            - Data in tables is presented as text always - numeric values will need to be parsed into floats or integers, as appropriate.

            Note: Data in Results tables are not accessible through this API call. Results table data can be called through the Results API calls.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: List entries
      tags:
      - Entries
    post:
      description: Create a notebook entry
      operationId: createEntry
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntryCreate'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entry'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Create a notebook entry
      tags:
      - Entries
  /entries/{entry_id}:
    get:
      description: Get a notebook entry by ID
      operationId: getEntry
      parameters:
      - description: ID of the entry
        explode: false
        in: path
        name: entry_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntryById'
          description: |
            Returns a single entry. Entries are notes that users can take. They're organized by "days" (which are user-configurable) and modeled within each day as a list of "notes." Each note has a type - the simplest is a "text" type, but lists, tables, and external files are also supported.

            *Note:* the current Entry resource has a few limitations:
            - Formatting information is not yet supported. Header formatting, bolding, and other stylistic information is not presented.
            - Data in tables is presented as text always - numeric values will need to be parsed into floats or integers, as appropriate.

            Note: Data in Results tables are not accessible through this API call. Results table data can be called through the Results API calls.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: Get a notebook entry by ID
      tags:
      - Entries
    patch:
      description: Update a notebook entry's metadata
      operationId: updateEntry
      parameters:
      - description: ID of the entry
        explode: false
        in: path
        name: entry_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntryUpdate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entry'
          description: OK
      summary: Update a notebook entry's metadata
      tags:
      - Entries
  /entries/{entry_id}/external-files/{external_file_id}:
    get:
      description: |
        Retrieves the metadata for an external file. Use the 'downloadURL' to download the actual file. (Expand the schema view for details)
      operationId: getExternalFileMetadata
      parameters:
      - description: ID of the entry the file was uploaded to
        explode: false
        in: path
        name: entry_id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the external file
        explode: false
        in: path
        name: external_file_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntryExternalFileById'
          description: OK
      summary: |
        Retrieves the metadata for an external file. Use the 'downloadURL' to download the actual file.
      tags:
      - Entries
  /entries:archive:
    post:
      description: Archive notebook entries
      operationId: archiveEntries
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntriesArchive'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntriesArchivalChange'
          description: OK
      summary: Archive notebook entries
      tags:
      - Entries
  /entries:bulk-get:
    get:
      description: Get notebook entries using entry IDs or display IDs
      operationId: bulkGetEntries
      parameters:
      - description: Comma-separated list of Entry IDs.
        explode: true
        in: query
        name: entryIds
        required: false
        schema:
          type: string
        style: form
      - description: Comma-separated list of Entry Display IDs.
        explode: true
        in: query
        name: displayIds
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entries'
          description: |
            Returns a list of entries. Entries are notes that users can take. They're organized by "days" (which are user-configurable) and modeled within each day as a list of "notes." Each note has a type - the simplest is a "text" type, but lists, tables, and external files are also supported.

            *Note:* the current Entry resource has a few limitations:
            - Formatting information is not yet supported. Header formatting, bolding, and other stylistic information is not presented.
            - Data in tables is presented as text always - numeric values will need to be parsed into floats or integers, as appropriate.

            Note: Data in Results tables are not accessible through this API call. Results table data can be called through the Results API calls.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Get notebook entries using entry IDs or display IDs
      tags:
      - Entries
  /entries:unarchive:
    post:
      description: Unarchive notebook entries
      operationId: unarchiveEntries
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntriesUnarchive'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntriesArchivalChange'
          description: OK
      summary: Unarchive notebook entries
      tags:
      - Entries
  /entry-schemas:
    get:
      description: List entry schemas
      operationId: listEntrySchemas
      parameters:
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 50
          maximum: 100
          minimum: 0
          nullable: false
          type: integer
        style: form
      - description: |
          Datetime, in RFC 3339 format. Supports the > and < operators. Time zone defaults to UTC. Restricts results to those modified in the specified range. e.g. > 2017-04-30.
        explode: true
        in: query
        name: modifiedAt
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntrySchemasPaginatedList'
          description: OK
          headers:
            Result-Count:
              description: The total number of schemas that match the given query
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-limit:
              description: The number of allowed entrys in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-remaining:
              description: The number of calls remaining in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-reset:
              description: The number of seconds remaining in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: List entry schemas
      tags:
      - Schemas
  /entry-schemas/{schema_id}:
    get:
      description: Get an Entry schema by ID
      operationId: getEntrySchema
      parameters:
      - description: ID of schema to get
        explode: false
        in: path
        name: schema_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntrySchemaDetailed'
          description: OK
        "400":
          description: Bad Entry
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: Get an Entry schema by ID
      tags:
      - Schemas
  /entry-templates:
    get:
      description: List entry templates
      operationId: listEntryTemplates
      parameters:
      - description: "Number of results to return. Defaults to 50, maximum of 100."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 50
          maximum: 100
          minimum: 0
          nullable: false
          type: integer
        style: form
      - description: Token for pagination
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: |
          Datetime, in RFC 3339 format. Supports the > and < operators. Time zone defaults to UTC. Restricts results to those modified in the specified range. e.g. > 2017-04-30.
        explode: true
        in: query
        name: modifiedAt
        required: false
        schema:
          type: string
        style: form
      - description: Name of an Entry Template. Restricts results to those with the
          specified name.
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: |
          ID of a template collection. Resticts results to those in the template collection.
        explode: true
        in: query
        name: templateCollectionId
        required: false
        schema:
          example: tmplcol_jC7rOniv
          type: string
        style: form
      - description: |
          Comma-separated list of ids. Matches all of the provided IDs, or returns a 400 error that includes a list of which IDs are invalid.
        explode: true
        in: query
        name: ids
        required: false
        schema:
          type: string
        style: form
      - description: |
          ID of a schema. Restricts results to those of the specified schema.
        explode: true
        in: query
        name: schemaId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntryTemplatesPaginatedList'
          description: |
            Returns a list of entry templates. Entry templates are templates that users can base new notebook entries off of.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: List entry templates
      tags:
      - Entries
  /entry-templates/{entry_template_id}:
    get:
      description: Get a notebook template entry by ID
      operationId: getEntryTemplate
      parameters:
      - description: ID of the entry template
        explode: false
        in: path
        name: entry_template_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntryTemplate'
          description: |
            Returns a single entry template. Entry templates are templates that users can base new notebook entries off of.
      summary: Get a notebook template entry by ID
      tags:
      - Entries
  /events:
    get:
      description: |
        List Events

        ## Event Sort Order

        Events in Benchling are assigned a stable sort order that reflects when the event was processed (not created). The createdAt time is not the stable sorted order of events. For this reason event createdAt time may appear out of order.
      operationId: listEvents
      parameters:
      - description: |
          Number of results to return. Defaults to 50, maximum of 100.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 50
          maximum: 100
          minimum: 0
          nullable: false
          type: integer
        style: form
      - description: Token for pagination
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: |
          Datetime, in RFC 3339 format. Time zone defaults to UTC. Restricts results to those modified in the specified range. e.g. "2020-05-23".
        explode: true
        in: query
        name: createdAt.gte
        required: false
        schema:
          type: string
        style: form
      - description: Event ID after which events will be returned.
        explode: true
        in: query
        name: startingAfter
        required: false
        schema:
          type: string
        style: form
      - description: Comma-separated list of event types to return.
        explode: true
        in: query
        name: eventTypes
        required: false
        schema:
          type: string
        style: form
      - description: "When True, the API will always return a nextToken to enable\
          \ polling events indefinitely."
        explode: true
        in: query
        name: poll
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventsPaginatedList'
          description: |2

            Returns a list of event resources. For additional JSON examples, [click here](https://docs.benchling.com/docs/events-reference#json-examples).
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: List Events
      tags:
      - Events
  /exports:
    post:
      description: |
        This endpoint launches a [long-running task](#/Tasks/getTask) and returns the Task ID of the launched task.
        The task response contains a link to download the exported item from Amazon S3. The download is a ZIP file that contains the exported PDFs.
      operationId: exportItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportItemRequest'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskLink'
          description: |
            This endpoint launches a [long-running task](#/Tasks/getTask) and returns the Task ID of the launched task.
            The task response contains a link to download the exported item from Amazon S3.
            The download is a ZIP file that contains the exported PDFs.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Export Item
      tags:
      - Exports
  /feature-libraries:
    get:
      description: List Feature Libraries
      operationId: listFeatureLibraries
      parameters:
      - description: |
          Number of results to return. Defaults to 50, maximum of 100.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 50
          maximum: 100
          minimum: 0
          nullable: false
          type: integer
        style: form
      - description: Token for pagination
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          default: modifiedAt:desc
          description: |
            Method by which to order search results. Valid sorts are modifiedAt (modified time, most recent first) and name (entity name, alphabetical). Optionally add :asc or :desc to specify ascending or descending order.
          enum:
          - modifiedAt
          - modifiedAt:asc
          - modifiedAt:desc
          - name
          - name:asc
          - name:desc
          nullable: false
          type: string
        style: form
      - description: |
          Datetime, in RFC 3339 format. Supports the > and < operators. Time zone defaults to UTC. Restricts results to those modified in the specified range. e.g. > 2017-04-30.
        explode: true
        in: query
        name: modifiedAt
        required: false
        schema:
          type: string
        style: form
      - description: Name of a Feature Library. Restricts results to those with the
          specified name.
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Name substring of a Feature Library. Restricts results to those
          with names that include the provided substring.
        explode: true
        in: query
        name: nameIncludes
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of ids. Matches all of the provided IDs, or returns a 400 error that includes a list of which IDs are invalid.
        explode: true
        in: query
        name: ids
        required: false
        schema:
          example: "featlib_VfVOART1,featlib_RFhDGaaC"
          type: string
        style: form
      - description: |
          Comma-separated list of names. Restricts results to those that match any of the specified names.
        explode: true
        in: query
        name: names.anyOf
        required: false
        schema:
          example: "MyName1,MyName2"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureLibrariesPaginatedList'
          description: OK
          headers:
            Result-Count:
              description: The total number of items that match the given query
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-limit:
              description: The number of allowed requests in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-remaining:
              description: The number of requests remaining in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-reset:
              description: The number of seconds remaining in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: List Feature Libraries
      tags:
      - Feature Libraries
    post:
      description: Create a Feature Library
      operationId: createFeatureLibrary
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeatureLibraryCreate'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureLibrary'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Create a Feature Library
      tags:
      - Feature Libraries
  /feature-libraries/{feature_library_id}:
    get:
      description: Get a feature library by ID
      operationId: getFeatureLibrary
      parameters:
      - description: ID of feature library to get
        explode: false
        in: path
        name: feature_library_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureLibrary'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: Get a feature library by ID
      tags:
      - Feature Libraries
    patch:
      description: |
        Update a feature library. Note: Features cannot be updated from this endpoint.
        Use the /features* endpoints to add or modify features.
      operationId: updateFeatureLibrary
      parameters:
      - explode: false
        in: path
        name: feature_library_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeatureLibraryUpdate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureLibrary'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: Update a feature library
      tags:
      - Feature Libraries
  /features:
    get:
      description: List Features
      operationId: listFeatures
      parameters:
      - description: |
          Number of results to return. Defaults to 50, maximum of 100.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 50
          maximum: 100
          minimum: 0
          nullable: false
          type: integer
        style: form
      - description: Token for pagination
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: Name of a Feature. Restricts results to those with the specified
          name.
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of ids. Matches all of the provided IDs, or returns a 400 error that includes a list of which IDs are invalid.
        explode: true
        in: query
        name: ids
        required: false
        schema:
          example: "feat_VfVOART1,feat_RFhDGaaC"
          type: string
        style: form
      - description: |
          Comma-separated list of names. Restricts results to those that match any of the specified names.
        explode: true
        in: query
        name: names.anyOf.caseSensitive
        required: false
        schema:
          example: "MyName1,MyName2"
          type: string
        style: form
      - description: Id of a Feature Library. Restricts results to those associated
          with the provided feature library
        explode: true
        in: query
        name: featureLibraryId
        required: false
        schema:
          example: featlib_D0v2x9Q7
          type: string
        style: form
      - description: |
          The type of feature, like gene, promoter, etc. Note: This is an arbitrary string, not an enum
        explode: true
        in: query
        name: featureType
        required: false
        schema:
          example: terminator
          type: string
        style: form
      - description: The match type of the feature used to determine how auto-annotate
          matches are made.
        explode: true
        in: query
        name: matchType
        required: false
        schema:
          enum:
          - nucleotide
          - protein
          example: nucleotide
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeaturesPaginatedList'
          description: OK
          headers:
            Result-Count:
              description: The total number of items that match the given query
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-limit:
              description: The number of allowed requests in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-remaining:
              description: The number of requests remaining in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-reset:
              description: The number of seconds remaining in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: List Features
      tags:
      - Feature Libraries
    post:
      description: Create a Feature
      operationId: createFeature
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeatureCreate'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Create a Feature
      tags:
      - Feature Libraries
  /features/{feature_id}:
    get:
      description: Get a feature by ID
      operationId: getFeature
      parameters:
      - description: ID of feature to get
        explode: false
        in: path
        name: feature_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: Get a feature by ID
      tags:
      - Feature Libraries
    patch:
      description: Update a feature
      operationId: updateFeature
      parameters:
      - explode: false
        in: path
        name: feature_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeatureUpdate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: Update a feature
      tags:
      - Feature Libraries
  /features:bulk-create:
    post:
      description: Bulk create Features
      operationId: bulkCreateFeatures
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeaturesBulkCreateRequest'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskLink'
          description: |
            This endpoint launches a [long-running task](#/Tasks/getTask) and returns the Task ID of the launched task.
            The task response contains the full list of features that were created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Bulk create Features
      tags:
      - Feature Libraries
  /folders:
    get:
      description: List folders
      operationId: listFolders
      parameters:
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 50
          maximum: 100
          minimum: 0
          nullable: false
          type: integer
        style: form
      - description: |
          Method by which to order search results. Valid sorts are modifiedAt (modified time, most recent first) and name (folder name, alphabetical). Optionally add :asc or :desc to specify ascending or descending order.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: name
          enum:
          - modifiedAt
          - name
          - modifiedAt:asc
          - name:asc
          - modifiedAt:desc
          - name:desc
          nullable: false
          type: string
        style: form
      - description: |
          Archive reason. Restricts items to those with the specified archive reason. Use "NOT_ARCHIVED" to filter for unarchived folders. Use "ANY_ARCHIVED" to filter for archived folders regardless of reason. Use "ANY_ARCHIVED_OR_NOT_ARCHIVED" to return items for both archived and unarchived.
        examples:
          "1_not_archived":
            summary: Only include unarchived items (default).
            value: NOT_ARCHIVED
          "2_archived_reason":
            summary: Includes items archived for a specific reason.
            value: RETIRED
          "3_any_archived":
            summary: Includes items archived for any reason.
            value: ANY_ARCHIVED
          "4_any_archived_or_not_archived":
            summary: Includes both archived and unarchived items.
            value: ANY_ARCHIVED_OR_NOT_ARCHIVED
        explode: true
        in: query
        name: archiveReason
        required: false
        schema:
          type: string
        style: form
      - description: |
          Name substring of a folder. Restricts results to those with names that include the provided substring.
        explode: true
        in: query
        name: nameIncludes
        required: false
        schema:
          type: string
        style: form
      - description: ID of a folder. Restricts results to those in the folder. Use
          "NO_PARENT" to filter for root folders.
        explode: true
        in: query
        name: parentFolderId
        required: false
        schema:
          type: string
        style: form
      - description: ID of a project. Restricts results to those in the project.
        explode: true
        in: query
        name: projectId
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of ids. Matches all of the provided IDs, or returns a 400 error that includes a list of which IDs are invalid.
        explode: true
        in: query
        name: ids
        required: false
        schema:
          example: "lib_qQFY3WQH,lib_QvXryHdi,lib_3eF8mZjn"
          type: string
        style: form
      - description: Name of a folder. Restricts results to those with the specified
          name.
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: |
          INVENTORY or NOTEBOOK. Returns folders of inventory type or notebook type. Returns all folders if sections are merged.
        explode: true
        in: query
        name: section
        required: false
        schema:
          enum:
          - INVENTORY
          - NOTEBOOK
          example: INVENTORY
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FoldersPaginatedList'
          description: OK
      summary: List folders
      tags:
      - Folders
    post:
      description: Create folder
      operationId: createFolder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FolderCreate'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Create folder
      tags:
      - Folders
  /folders/{folder_id}:
    get:
      description: Get a folder by ID
      operationId: getFolder
      parameters:
      - description: ID of folder to get
        explode: false
        in: path
        name: folder_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: Get a folder by ID
      tags:
      - Folders
  /folders:archive:
    post:
      description: Archives folders and their contents
      operationId: archiveFolders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FoldersArchive'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FoldersArchivalChange'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Archive folders
      tags:
      - Folders
  /folders:unarchive:
    post:
      description: Unarchives folders and the contents that were archived along with
        them
      operationId: unarchiveFolders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FoldersUnarchive'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FoldersArchivalChange'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Unarchive folders
      tags:
      - Folders
  /legacy-workflow-stage-runs/{stage_run_id}/input-samples:
    get:
      description: List legacy workflow stage run input samples
      operationId: listLegacyWorkflowStageRunInputSamples
      parameters:
      - description: ID of the legacy workflow stage run to list input samples for
        explode: false
        in: path
        name: stage_run_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegacyWorkflowSampleList'
          description: OK
      summary: List legacy workflow stage run input samples
      tags:
      - Legacy Workflows
  /legacy-workflow-stage-runs/{stage_run_id}/output-samples:
    get:
      description: List legacy workflow stage run output samples
      operationId: listLegacyWorkflowStageRunOutputSamples
      parameters:
      - description: ID of the legacy workflow stage run to list output samples for
        explode: false
        in: path
        name: stage_run_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegacyWorkflowSampleList'
          description: OK
      summary: List legacy workflow stage run output samples
      tags:
      - Legacy Workflows
  /legacy-workflow-stage-runs/{stage_run_id}/registered-samples:
    get:
      description: List legacy workflow stage run registered samples
      operationId: listLegacyWorkflowStageRunRegisteredSamples
      parameters:
      - description: ID of the legacy workflow stage run to list registered samples
          for
        explode: false
        in: path
        name: stage_run_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegacyWorkflowSampleList'
          description: OK
      summary: List legacy workflow stage run registered samples
      tags:
      - Legacy Workflows
  /legacy-workflow-stages/{stage_id}/workflow-stage-runs:
    get:
      description: List legacy workflow stage runs
      operationId: listLegacyWorkflowStageRuns
      parameters:
      - description: ID of the legacy workflow stage to list runs for
        explode: false
        in: path
        name: stage_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegacyWorkflowStageRunList'
          description: OK
      summary: List legacy workflow stage runs
      tags:
      - Legacy Workflows
  /legacy-workflows:
    get:
      description: List legacy workflows
      operationId: listLegacyWorkflows
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegacyWorkflowList'
          description: OK
      summary: List legacy workflows
      tags:
      - Legacy Workflows
  /legacy-workflows/{legacy_workflow_id}:
    patch:
      description: Update workflow metadata
      operationId: UpdateLegacyWorkflowMetadata
      parameters:
      - description: ID of the legacy workflow to update
        explode: false
        in: path
        name: legacy_workflow_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LegacyWorkflowPatch'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegacyWorkflow'
          description: OK
      summary: Update legacy workflow
      tags:
      - Legacy Workflows
  /legacy-workflows/{legacy_workflow_id}/workflow-stages:
    get:
      description: List legacy workflow stages
      operationId: listLegacyWorkflowStages
      parameters:
      - description: ID of the legacy workflow to list stages for
        explode: false
        in: path
        name: legacy_workflow_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegacyWorkflowStageList'
          description: OK
      summary: List legacy workflow stages
      tags:
      - Legacy Workflows
  /location-schemas:
    get:
      description: List location schemas
      operationId: listLocationSchemas
      parameters:
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 50
          maximum: 100
          minimum: 0
          nullable: false
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationSchemasPaginatedList'
          description: OK
          headers:
            Result-Count:
              description: The total number of schemas that match the given query
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-limit:
              description: The number of allowed requests in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-remaining:
              description: The number of calls remaining in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-reset:
              description: The number of seconds remaining in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: List location schemas
      tags:
      - Schemas
  /location-schemas/{schema_id}:
    get:
      description: Get a location schema by ID
      operationId: getLocationSchema
      parameters:
      - description: ID of schema to get
        explode: false
        in: path
        name: schema_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationSchema'
          description: OK
        "400":
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: Get a location schema by ID
      tags:
      - Schemas
  /locations:
    get:
      description: List locations
      operationId: listLocations
      parameters:
      - description: Number of results to return.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 50
          maximum: 100
          nullable: false
          type: integer
        style: form
      - description: Token for pagination
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: |
          Method by which to order search results. Valid sorts are barcode (barcode, alphabetical) modifiedAt (modified time, most recent first) and name (location name, alphabetical). Optionally add :asc or :desc to specify ascending or descending order. Default is modifiedAt.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: modifiedAt
          enum:
          - barcode
          - modifiedAt
          - name
          - barcode:asc
          - modifiedAt:asc
          - name:asc
          - barcode:desc
          - modifiedAt:desc
          - name:desc
          nullable: false
          type: string
        style: form
      - description: ID of a schema. Restricts results to those of the specified schema.
        explode: true
        in: query
        name: schemaId
        required: false
        schema:
          type: string
        style: form
      - description: |
          Schema field value. For Integer, Float, and Date type fields, supports the >= and <= operators. If present, the schemaId param must also be present. Restricts results to those with a field of whose value matches the filter.
        explode: true
        in: query
        name: schemaFields
        required: false
        schema:
          $ref: '#/components/schemas/SchemaFieldsQueryParam'
        style: form
      - description: |
          Datetime, in RFC 3339 format. Supports the > and < operators. Time zone defaults to UTC. Restricts results to those modified in the specified range. e.g. > 2017-04-30.
        explode: true
        in: query
        name: modifiedAt
        required: false
        schema:
          type: string
        style: form
      - description: Name of a location. Restricts results to those with the specified
          name.
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: |
          Name substring of a location. Restricts results to those with names that include the provided substring.
        explode: true
        in: query
        name: nameIncludes
        required: false
        schema:
          type: string
        style: form
      - description: "ID of a plate, box, or location. Restricts results to those\
          \ located in the specified storage."
        explode: true
        in: query
        name: ancestorStorageId
        required: false
        schema:
          type: string
        style: form
      - description: |
          Archive reason. Restricts items to those with the specified archive reason. Use "NOT_ARCHIVED" to filter for unarchived locations. Use "ANY_ARCHIVED" to filter for archived locations regardless of reason. Use "ANY_ARCHIVED_OR_NOT_ARCHIVED" to return items for both archived and unarchived.
        examples:
          "1_not_archived":
            summary: Only include unarchived items (default).
            value: NOT_ARCHIVED
          "2_archived_reason":
            summary: Includes items archived for a specific reason.
            value: RETIRED
          "3_any_archived":
            summary: Includes items archived for any reason.
            value: ANY_ARCHIVED
          "4_any_archived_or_not_archived":
            summary: Includes both archived and unarchived items.
            value: ANY_ARCHIVED_OR_NOT_ARCHIVED
        explode: true
        in: query
        name: archiveReason
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of ids. Matches all of the provided IDs, or returns a 400 error that includes a list of which IDs are invalid.
        explode: true
        in: query
        name: ids
        required: false
        schema:
          example: "loc_9fxPzGDy,loc_fALwBTI7,loc_GyxUeUIi"
          type: string
        style: form
      - description: |
          Comma-separated list of barcodes. Matches all of the provided barcodes, or returns a 400 error that includes a list of which barcodes are invalid.
        explode: true
        in: query
        name: barcodes
        required: false
        schema:
          example: "b001, b002, f001"
          type: string
        style: form
      - description: |
          Comma-separated list of names. Restricts results to those that match any of the specified names, case insensitive.  Warning - this filter can be non-performant due to case insensitivity.
        explode: true
        in: query
        name: names.anyOf
        required: false
        schema:
          example: "MyName1,MyName2"
          type: string
        style: form
      - description: |
          Comma-separated list of names. Restricts results to those that match any of the specified names, case sensitive.
        explode: true
        in: query
        name: names.anyOf.caseSensitive
        required: false
        schema:
          example: "MyName1,MyName2"
          type: string
        style: form
      - description: Comma separated list of users IDs
        explode: true
        in: query
        name: creatorIds
        required: false
        schema:
          example: ent_a0SApq3z
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationsPaginatedList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: List locations
      tags:
      - Locations
    post:
      description: Create a location
      operationId: createLocation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationCreate'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Create a location
      tags:
      - Locations
  /locations/{location_id}:
    get:
      description: Get a location by ID
      operationId: getLocation
      parameters:
      - description: ID of location to get
        explode: false
        in: path
        name: location_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
          description: OK
        "400":
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: Get a location by ID
      tags:
      - Locations
    patch:
      description: Update a location
      operationId: updateLocation
      parameters:
      - description: ID of the location to update
        explode: false
        in: path
        name: location_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationUpdate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Update a location
      tags:
      - Locations
  /locations:archive:
    post:
      description: Archive locations
      operationId: archiveLocations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationsArchive'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationsArchivalChange'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Archive locations
      tags:
      - Locations
  /locations:bulk-get:
    get:
      description: BulkGet locations
      operationId: bulkGetLocations
      parameters:
      - description: Comma-separated list of location IDs.
        explode: true
        in: query
        name: locationIds
        required: false
        schema:
          type: string
        style: form
      - description: Comma-separated list of location barcodes.
        explode: false
        in: query
        name: barcodes
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationsBulkGet'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: BulkGet locations
      tags:
      - Locations
  /locations:unarchive:
    post:
      description: Unarchive locations
      operationId: unarchiveLocations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationsUnarchive'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationsArchivalChange'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Unarchive locations
      tags:
      - Locations
  /mixtures:
    get:
      description: List mixtures
      operationId: listMixtures
      parameters:
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 50
          maximum: 100
          minimum: 0
          nullable: false
          type: integer
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          default: modifiedAt:desc
          description: |
            Sets the sort-order of the response. Valid sorts are modifiedAt (modified time, most recent first) and name (entity name, alphabetical). Optionally add :asc or :desc to specify ascending or descending order.
          enum:
          - modifiedAt
          - modifiedAt:asc
          - modifiedAt:desc
          - name
          - name:asc
          - name:desc
          nullable: false
          type: string
        style: form
      - description: |
          Datetime, in RFC 3339 format. Supports the > and < operators. Time zone defaults to UTC. Restricts results to those modified in the specified range. e.g. > 2017-04-30.
        explode: true
        in: query
        name: modifiedAt
        required: false
        schema:
          type: string
        style: form
      - description: "Name of a mixture. Restricts results to those with the specified\
          \ name, alias, or entity registry ID."
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: |
          Name substring of a mixture. Restricts results to those with names, aliases, or entity registry IDs that include the provided substring.
        explode: true
        in: query
        name: nameIncludes
        required: false
        schema:
          type: string
        style: form
      - description: ID of a folder. Restricts results to those in the folder.
        explode: true
        in: query
        name: folderId
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of entry IDs. Restricts results to mixtures mentioned in those entries.
        explode: true
        in: query
        name: mentionedIn
        required: false
        schema:
          type: string
        style: form
      - description: ID of a project. Restricts results to those in the project.
        explode: true
        in: query
        name: projectId
        required: false
        schema:
          type: string
        style: form
      - description: |
          ID of a registry. Restricts results to those registered in this registry. Specifying "null" returns unregistered items.
        explode: true
        in: query
        name: registryId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: |
          ID of a schema. Restricts results to those of the specified schema.
        explode: true
        in: query
        name: schemaId
        required: false
        schema:
          type: string
        style: form
      - description: |
          Schema field value. For Integer, Float, and Date type fields, supports the >= and <= operators. If present, the schemaId param must also be present. Restricts results to those with a field of whose value matches the filter.
        explode: true
        in: query
        name: schemaFields
        required: false
        schema:
          $ref: '#/components/schemas/SchemaFieldsQueryParam'
        style: form
      - description: |
          Archive reason. Restricts items to those with the specified archive reason. Use "NOT_ARCHIVED" to filter for unarchived mixtures. Use "ANY_ARCHIVED" to filter for archived mixtures regardless of reason. Use "ANY_ARCHIVED_OR_NOT_ARCHIVED" to return items for both archived and unarchived.
        examples:
          "1_not_archived":
            summary: Only include unarchived items (default).
            value: NOT_ARCHIVED
          "2_archived_reason":
            summary: Includes items archived for a specific reason.
            value: RETIRED
          "3_any_archived":
            summary: Includes items archived for any reason.
            value: ANY_ARCHIVED
          "4_any_archived_or_not_archived":
            summary: Includes both archived and unarchived items.
            value: ANY_ARCHIVED_OR_NOT_ARCHIVED
        explode: true
        in: query
        name: archiveReason
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of resource IDs. Restricts results to those that mention the given items in the description.
        explode: true
        in: query
        name: mentions
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of ids. Matches all of the provided IDs, or returns a 400 error that includes a list of which IDs are invalid.
        explode: true
        in: query
        name: ids
        required: false
        schema:
          example: "bfi_blhxTUl1,bfi_y5bkDmJp,bfi_xwfILBog"
          type: string
        style: form
      - description: |
          Comma-separated list of names. Restricts results to those that match any of the specified names, aliases, or entity registry IDs, case insensitive.  Warning - this filter can be non-performant due to case insensitivity.
        explode: true
        in: query
        name: names.anyOf
        required: false
        schema:
          example: "MyName1,MyName2"
          type: string
        style: form
      - description: |
          Comma-separated list of names. Restricts results to those that match any of the specified names, aliases, or entity registry IDs, case sensitive.
        explode: true
        in: query
        name: names.anyOf.caseSensitive
        required: false
        schema:
          example: "MyName1,MyName2"
          type: string
        style: form
      - description: |
          Comma-separated list of entity registry IDs. Restricts results to those that match any of the specified registry IDs.
        explode: true
        in: query
        name: entityRegistryIds.anyOf
        required: false
        schema:
          example: "TP001,TP002"
          type: string
        style: form
      - description: |
          Comma-separated list of ingredient component entity ids. Matches all mixtures that contain ingredients whose component entities match all of the provided IDs, or returns a 400 error that includes a list of which IDs are invalid.
        explode: true
        in: query
        name: ingredientComponentEntityIds
        required: false
        schema:
          example: "bfi_blhxTUl1,bfi_y5bkDmJp,bfi_xwfILBog"
          type: string
        style: form
      - description: |
          Comma-separated list of ingredient component entity ids. Matches all mixtures that contain ingredients whose component entities match any of the provided IDs, or returns a 400 error that includes a list of which IDs are invalid.
        explode: true
        in: query
        name: ingredientComponentEntityIds.anyOf
        required: false
        schema:
          example: "bfi_blhxTUl1,bfi_y5bkDmJp,bfi_xwfILBog"
          type: string
        style: form
      - description: Comma separated list of user or app IDs
        explode: true
        in: query
        name: authorIds.anyOf
        required: false
        schema:
          example: "ent_a0SApq3z,ent_b4AApz9b"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MixturesPaginatedList'
          description: OK
          headers:
            Result-Count:
              description: The total number of items that match the given query
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-limit:
              description: The number of allowed requests in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-remaining:
              description: The number of seconds remaining in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-reset:
              description: The number of seconds remaining in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: List mixtures
      tags:
      - Mixtures
    post:
      description: |
        Create a mixture.
        To create a new child mixture (eg. a prep) from a parent mixture (eg. a recipe), set the parent mixture field and specify the desired final state for your ingredients.
        Benchling will recognize that any ingredients you specify that match ingredients on the parent mixture (based on component entity) are inherited. This can be seen on the returned `ingredients[i].hasParent` attribute.
      operationId: createMixture
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MixtureCreate'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mixture'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
        "503":
          description: Service Unavailable (Lock Contention)
      summary: Create a mixture
      tags:
      - Mixtures
  /mixtures/{mixture_id}:
    get:
      description: Get a mixture
      operationId: getMixture
      parameters:
      - explode: false
        in: path
        name: mixture_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mixture'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Get a mixture
      tags:
      - Mixtures
    patch:
      description: |
        Update a mixture.
        To change the parent mixture, set the parent mixture field and specify the desired final state for your ingredients.
        Benchling will recognize that any ingredients you specify that match ingredients on the parent mixture (based on component entity) are inherited. This can be seen on the returned `ingredients[i].hasParent` attribute.
      operationId: updateMixture
      parameters:
      - explode: false
        in: path
        name: mixture_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MixtureUpdate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mixture'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Update a mixture
      tags:
      - Mixtures
  /mixtures:archive:
    post:
      description: Archive mixtures
      operationId: archiveMixtures
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MixturesArchive'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MixturesArchivalChange'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Archive mixtures
      tags:
      - Mixtures
  /mixtures:bulk-create:
    post:
      description: |
        Create multiple mixtures. Limit of 1000 mixtures per request.
        To create new child mixtures (eg. a prep) from parent mixtures (eg. a recipe), set the parent mixture field and specify the desired final state for your ingredients.
        Benchling will recognize that any ingredients you specify that match ingredients on the parent mixtures (based on component entity) are inherited. This can be seen on the returned `ingredients[i].hasParent` attribute.
      operationId: bulkCreateMixtures
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MixturesBulkCreateRequest'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskLink'
          description: |
            This endpoint launches a [long-running task](#/Tasks/getTask) and returns the Task ID of the launched task.
            The task response contains the full list of mixtures that were created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Bulk Create mixtures
      tags:
      - Mixtures
  /mixtures:bulk-update:
    post:
      description: |
        Update multiple mixtures.
        To change the parent mixture on your specified mixtures, set the parent mixture field and specify the desired final state for your ingredients.
        Benchling will recognize that any ingredients you specify that match ingredients on the parent mixtures (based on component entity) are inherited. This can be seen on the returned `ingredients[i].hasParent` attribute.
      operationId: bulkUpdateMixtures
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MixturesBulkUpdateRequest'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskLink'
          description: |
            This endpoint launches a [long-running task](#/Tasks/getTask) and returns the Task ID of the launched task.
            The task response contains the full list of mixtures that were updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Bulk Update mixtures
      tags:
      - Mixtures
  /mixtures:unarchive:
    post:
      description: Unarchive mixtures
      operationId: unarchiveMixtures
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MixturesUnarchive'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MixturesArchivalChange'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Unarchive mixtures
      tags:
      - Mixtures
  /molecules:
    get:
      description: List molecules
      operationId: listMolecules
      parameters:
      - description: |
          Number of results to return. Defaults to 50, maximum of 100.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 50
          maximum: 100
          minimum: 0
          nullable: false
          type: integer
        style: form
      - description: Token for pagination
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          default: modifiedAt:desc
          description: |
            Method by which to order search results. Valid sorts are modifiedAt (modified time, most recent first) and name (entity name, alphabetical). Optionally add :asc or :desc to specify ascending or descending order.
          enum:
          - modifiedAt
          - modifiedAt:asc
          - modifiedAt:desc
          - name
          - name:asc
          - name:desc
          nullable: false
          type: string
        style: form
      - description: |
          Datetime, in RFC 3339 format. Supports the > and < operators. Time zone defaults to UTC. Restricts results to those modified in the specified range. e.g. > 2017-04-30.
        explode: true
        in: query
        name: modifiedAt
        required: false
        schema:
          type: string
        style: form
      - description: "Name of a Molecule. Restricts results to those with the specified\
          \ name, alias, or entity registry ID."
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: "Name substring of a Molecule. Restricts results to those with\
          \ names, aliases, or entity registry IDs that include the provided substring."
        explode: true
        in: query
        name: nameIncludes
        required: false
        schema:
          type: string
        style: form
      - description: ID of a folder. Restricts results to those in the folder.
        explode: true
        in: query
        name: folderId
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of entry IDs. Restricts results to Molecules mentioned in those entries.
        explode: false
        in: query
        name: mentionedIn
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: ID of a project. Restricts results to those in the project.
        explode: true
        in: query
        name: projectId
        required: false
        schema:
          type: string
        style: form
      - description: |
          ID of a registry. Restricts results to those registered in this registry. Specifying "null" returns unregistered items.
        explode: true
        in: query
        name: registryId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: |
          ID of a schema. Restricts results to those of the specified schema.
        explode: true
        in: query
        name: schemaId
        required: false
        schema:
          type: string
        style: form
      - description: |
          Schema field value. For Integer, Float, and Date type fields, supports the >= and <= operators. If present, the schemaId param must also be present. Restricts results to those with a field of whose value matches the filter.
        explode: true
        in: query
        name: schemaFields
        required: false
        schema:
          $ref: '#/components/schemas/SchemaFieldsQueryParam'
        style: form
      - description: |
          Archive reason. Restricts results to those with the specified archive reason. Use “NOT_ARCHIVED” to filter for unarchived Molecules. Use "ANY_ARCHIVED" to filter for archived Molecules regardless of reason. Use "ANY_ARCHIVED_OR_NOT_ARCHIVED" to return items for both archived and unarchived.
        examples:
          any_archived:
            summary: Includes items archived for any reason.
            value: ANY_ARCHIVED
          any_archived_or_not_archived:
            summary: Includes both archived and unarchived items.
            value: ANY_ARCHIVED_OR_NOT_ARCHIVED
          arhived_reason:
            summary: Includes items archived for a specific reason.
            value: RETIRED
          not_archived:
            summary: Only include unarchived items (default).
            value: NOT_ARCHIVED
        explode: true
        in: query
        name: archiveReason
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of item IDs. Restricts results to those that mention the given items in the description.
        explode: false
        in: query
        name: mentions
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |
          Comma-separated list of ids. Matches all of the provided IDs, or returns a 400 error that includes a list of which IDs are invalid.
        explode: true
        in: query
        name: ids
        required: false
        schema:
          example: "mol_yWs5X7lv,mol_RhYGVnHF"
          type: string
        style: form
      - description: |
          Comma-separated list of entity registry IDs. Restricts results to those that match any of the specified registry IDs.
        explode: true
        in: query
        name: entityRegistryIds.anyOf
        required: false
        schema:
          example: "TP001,TP002"
          type: string
        style: form
      - description: |
          Comma-separated list of names. Restricts results to those that match any of the specified names, aliases, or entity registry IDs.
        explode: true
        in: query
        name: names.anyOf
        required: false
        schema:
          example: "MyName1,MyName2"
          type: string
        style: form
      - description: Comma separated list of user or app IDs
        explode: true
        in: query
        name: authorIds.anyOf
        required: false
        schema:
          example: "ent_a0SApq3z,ent_b4AApz9b"
          type: string
        style: form
      - description: mol-formatted string for a chemical substructure to search by
        explode: true
        in: query
        name: chemicalSubstructure.mol
        required: false
        schema:
          example: |
            Format described at https://en.wikipedia.org/wiki/Chemical_table_file#Molfile As an example, ethanol is represented as follows: ChEBI
              Marvin  10060515352D

              3  2  0  0  0  0            999 V2000
                4.8667   -3.3230    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0
                5.5812   -2.9105    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0
                6.2956   -3.3230    0.0000 O   0  0  0  0  0  0  0  0  0  0  0  0
              1  2  1  0  0  0  0
              2  3  1  0  0  0  0
            M  END
          type: string
        style: form
      - description: SMILES string for a chemical substructure to search by
        explode: true
        in: query
        name: chemicalSubstructure.smiles
        required: false
        schema:
          example: "CCO,C(C1C(C(C(C(O1)O)O)O)O)O"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MoleculesPaginatedList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad request
      summary: List Molecules
      tags:
      - Molecules
    post:
      description: Create a Molecule
      operationId: createMolecule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoleculeCreate'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Molecule'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
        "503":
          description: Service Unavailable (Lock Contention)
      summary: Create a Molecule
      tags:
      - Molecules
  /molecules/{molecule_id}:
    get:
      description: Get a Molecule
      operationId: getMolecule
      parameters:
      - explode: false
        in: path
        name: molecule_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Molecule'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Get a Molecule
      tags:
      - Molecules
    patch:
      description: Update a Molecule
      operationId: updateMolecule
      parameters:
      - explode: false
        in: path
        name: molecule_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoleculeUpdate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Molecule'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Update a Molecule
      tags:
      - Molecules
  /molecules:archive:
    post:
      description: Archive Molecules
      operationId: archiveMolecules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoleculesArchive'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MoleculesArchivalChange'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Archive Molecules
      tags:
      - Molecules
  /molecules:bulk-create:
    post:
      description: Bulk Create Molecules
      operationId: bulkCreateMolecules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoleculesBulkCreateRequest'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskLink'
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Bulk Create Molecules
      tags:
      - Molecules
  /molecules:bulk-update:
    post:
      description: Bulk Update Molecules
      operationId: bulkUpdateMolecules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoleculesBulkUpdateRequest'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskLink'
          description: |
            This endpoint launches a [long-running task](#/Tasks/getTask) and returns the Task ID of the launched task.
            When successful, the task returns a full list of [Molecule](#/Molecules/getMolecule) resources that were updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Bulk Update Molecules
      tags:
      - Molecules
  /molecules:unarchive:
    post:
      description: Unarchive Molecules
      operationId: unarchiveMolecules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoleculesUnarchive'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MoleculesArchivalChange'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Unarchive Molecules
      tags:
      - Molecules
  /nucleotide-alignments:
    get:
      description: List Nucleotide Alignments
      operationId: listNucleotideAlignments
      parameters:
      - description: |
          Number of results to return. Defaults to 50, maximum of 100.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 50
          maximum: 100
          minimum: 0
          nullable: false
          type: integer
        style: form
      - description: Token for pagination
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          default: modifiedAt:desc
          description: |
            Method by which to order search results. Valid sorts are modifiedAt (modified time, most recent first) and name (entity name, alphabetical). Optionally add :asc or :desc to specify ascending or descending order.
          enum:
          - modifiedAt
          - modifiedAt:asc
          - modifiedAt:desc
          - name
          - name:asc
          - name:desc
          nullable: false
          type: string
        style: form
      - description: |
          Datetime, in RFC 3339 format. Supports the > and < operators. Time zone defaults to UTC. Restricts results to those modified in the specified range. e.g. > 2017-04-30.
        explode: true
        in: query
        name: modifiedAt
        required: false
        schema:
          type: string
        style: form
      - description: Name of a Nucleotide Alignment. Restricts results to those with
          the specified name.
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Name substring of a Nucleotide Alignment. Restricts results to
          those with names that include the provided substring.
        explode: true
        in: query
        name: nameIncludes
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of ids. Matches all of the provided IDs, or returns a 400 error that includes a list of which IDs are invalid.
        explode: true
        in: query
        name: ids
        required: false
        schema:
          example: "seqanl_VfVOART1,seqanl_RFhDGaaC"
          type: string
        style: form
      - description: |
          Comma-separated list of names. Restricts results to those that match any of the specified names, case insensitive.  Warning - this filter can be non-performant due to case insensitivity.
        explode: true
        in: query
        name: names.anyOf
        required: false
        schema:
          example: "MyName1,MyName2"
          type: string
        style: form
      - description: |
          Comma-separated list of names. Restricts results to those that match any of the specified names, case sensitive.
        explode: true
        in: query
        name: names.anyOf.caseSensitive
        required: false
        schema:
          example: "MyName1,MyName2"
          type: string
        style: form
      - description: |
          Comma-separated list of sequence ids that own one or more Nucleotide Alignments (i.e. ids of sequences used as the template in a Template Alignment or created as the consensus sequence from a Consensus Alignment). Matches all of the provided IDs, or returns a 400 error that includes a list of which IDs are invalid.
        explode: true
        in: query
        name: sequenceIds
        required: false
        schema:
          example: "seq_VfVOART1,seq_RFhDGaaC"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NucleotideAlignmentsPaginatedList'
          description: OK
          headers:
            Result-Count:
              description: The total number of items that match the given query
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-limit:
              description: The number of allowed requests in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-remaining:
              description: The number of requests remaining in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-reset:
              description: The number of seconds remaining in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: List Nucleotide Alignments
      tags:
      - Nucleotide Alignments
  /nucleotide-alignments/{alignment_id}:
    delete:
      description: Delete a Nucleotide Alignment
      operationId: deleteNucleotideAlignment
      parameters:
      - explode: false
        in: path
        name: alignment_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyObject'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: Delete a Nucleotide Alignment
      tags:
      - Nucleotide Alignments
    get:
      description: Get a Nucleotide Alignment
      operationId: getNucleotideAlignment
      parameters:
      - explode: false
        in: path
        name: alignment_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NucleotideAlignment'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: Get a Nucleotide Alignment
      tags:
      - Nucleotide Alignments
  /nucleotide-alignments:create-consensus-alignment:
    post:
      description: Create a consensus Nucleotide Alignment
      operationId: createConsensusNucleotideAlignment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NucleotideConsensusAlignmentCreate'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskLink'
          description: |
            This endpoint launches a [long-running task](#/Tasks/getTask) and returns the Task ID of the launched task.
            When successful, the task returns the [Nucleotide Alignment](#/Nucleotide%20Alignments/getNucleotideAlignment) resource that was created.
      summary: Create a consensus Nucleotide Alignment
      tags:
      - Nucleotide Alignments
  /nucleotide-alignments:create-template-alignment:
    post:
      description: Create a template Nucleotide Alignment
      operationId: createTemplateNucleotideAlignment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NucleotideTemplateAlignmentCreate'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskLink'
          description: |
            This endpoint launches a [long-running task](#/Tasks/getTask) and returns the Task ID of the launched task.
            When successful, the task returns the [Nucleotide Alignment](#/Nucleotide%20Alignments/getNucleotideAlignment) resource that was created.
      summary: Create a template Nucleotide Alignment
      tags:
      - Nucleotide Alignments
  /oligos:
    get:
      deprecated: true
      description: List Oligos
      operationId: listOligos
      parameters:
      - description: |
          Number of results to return. Defaults to 50, maximum of 100.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 50
          maximum: 100
          minimum: 0
          nullable: false
          type: integer
        style: form
      - description: Token for pagination
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          default: modifiedAt:desc
          description: |
            Method by which to order search results. Valid sorts are modifiedAt (modified time, most recent first) and name (entity name, alphabetical). Optionally add :asc or :desc to specify ascending or descending order.
          enum:
          - modifiedAt
          - modifiedAt:asc
          - modifiedAt:desc
          - name
          - name:asc
          - name:desc
          nullable: false
          type: string
        style: form
      - description: |
          Datetime, in RFC 3339 format. Supports the > and < operators. Time zone defaults to UTC. Restricts results to those modified in the specified range. e.g. > 2017-04-30.
        explode: true
        in: query
        name: modifiedAt
        required: false
        schema:
          type: string
        style: form
      - description: "Name of an Oligo. Restricts results to those with the specified\
          \ name, alias, or entity registry ID."
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: |
          Full bases of the oligo. Restricts results to those with the specified bases, case-insensitive, allowing for circular or reverse complement matches. Does not allow partial matching or loose matching via degenerate bases.
        explode: true
        in: query
        name: bases
        required: false
        schema:
          type: string
        style: form
      - description: ID of a folder. Restricts results to those in the folder.
        explode: true
        in: query
        name: folderId
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of entry IDs. Restricts results to Oligos mentioned in those entries.
        explode: true
        in: query
        name: mentionedIn
        required: false
        schema:
          type: string
        style: form
      - description: ID of a project. Restricts results to those in the project.
        explode: true
        in: query
        name: projectId
        required: false
        schema:
          type: string
        style: form
      - description: |
          ID of a registry. Restricts results to those registered in this registry. Specifying "null" returns unregistered items.
        explode: true
        in: query
        name: registryId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: |
          ID of a schema. Restricts results to those of the specified schema.
        explode: true
        in: query
        name: schemaId
        required: false
        schema:
          type: string
        style: form
      - description: |
          Schema field value. For Integer, Float, and Date type fields, supports the >= and <= operators. If present, the schemaId param must also be present. Restricts results to those with a field of whose value matches the filter.
        explode: true
        in: query
        name: schemaFields
        required: false
        schema:
          $ref: '#/components/schemas/SchemaFieldsQueryParam'
        style: form
      - description: |
          Archive reason. Restricts items to those with the specified archive reason. Use "NOT_ARCHIVED" to filter for unarchived Oligos. Use "ANY_ARCHIVED" to filter for archived Oligos regardless of reason. Use "ANY_ARCHIVED_OR_NOT_ARCHIVED" to return items for both archived and unarchived.
        examples:
          "1_not_archived":
            summary: Only include unarchived items (default).
            value: NOT_ARCHIVED
          "2_archived_reason":
            summary: Includes items archived for a specific reason.
            value: RETIRED
          "3_any_archived":
            summary: Includes items archived for any reason.
            value: ANY_ARCHIVED
          "4_any_archived_or_not_archived":
            summary: Includes both archived and unarchived items.
            value: ANY_ARCHIVED_OR_NOT_ARCHIVED
        explode: true
        in: query
        name: archiveReason
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of item IDs. Restricts results to those that mention the given items in the description.
        explode: true
        in: query
        name: mentions
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of ids. Matches all of the provided IDs, or returns a 400 error that includes a list of which IDs are invalid.
        explode: true
        in: query
        name: ids
        required: false
        schema:
          example: "seq_yWs5X7lv,seq_RhYGVnHF"
          type: string
        style: form
      - description: |
          Comma-separated list of entity registry IDs. Restricts results to those that match any of the specified registry IDs.
        explode: true
        in: query
        name: entityRegistryIds.anyOf
        required: false
        schema:
          example: "TP001,TP002"
          type: string
        style: form
      - description: |
          Comma-separated list of names. Restricts results to those that match any of the specified names, aliases, or entity registry IDs, case insensitive.  Warning - this filter can be non-performant due to case insensitivity.
        explode: true
        in: query
        name: names.anyOf
        required: false
        schema:
          example: "MyName1,MyName2"
          type: string
        style: form
      - description: |
          Comma-separated list of names. Restricts results to those that match any of the specified names, aliases, or entity registry IDs, case sensitive.
        explode: true
        in: query
        name: names.anyOf.caseSensitive
        required: false
        schema:
          example: "MyName1,MyName2"
          type: string
        style: form
      - description: Comma separated list of users IDs
        explode: true
        in: query
        name: creatorIds
        required: false
        schema:
          example: ent_a0SApq3z
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OligosPaginatedList'
          description: OK
          headers:
            Result-Count:
              description: The total number of items that match the given query
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-limit:
              description: The number of allowed requests in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-remaining:
              description: The number of requests remaining in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-reset:
              description: The number of seconds remaining in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: List Oligos
      tags:
      - Oligos
    post:
      deprecated: true
      description: Create an Oligo
      operationId: createOligo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OligoCreate'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnaOligo'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
        "503":
          description: Service Unavailable (Lock Contention)
      summary: Create an Oligo
      tags:
      - Oligos
  /oligos/{oligo_id}:
    get:
      deprecated: true
      description: Get an Oligo
      operationId: getOligo
      parameters:
      - explode: false
        in: path
        name: oligo_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnaOligo'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Get an Oligo
      tags:
      - Oligos
    patch:
      deprecated: true
      description: Update an Oligo
      operationId: updateOligo
      parameters:
      - explode: false
        in: path
        name: oligo_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OligoUpdate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnaOligo'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Update an Oligo
      tags:
      - Oligos
  /oligos:archive:
    post:
      deprecated: true
      description: Archive Oligos
      operationId: archiveOligos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OligosArchive'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OligosArchivalChange'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Archive Oligos
      tags:
      - Oligos
  /oligos:bulk-create:
    post:
      deprecated: true
      description: |
        Bulk Create DNA Oligos
        Please migrate to [Bulk Create DNA Oligos](#/DNA%20Oligos/bulkCreateDNAOligos) so that we can support RNA Oligos.
      operationId: bulkCreateOligos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OligosBulkCreateRequest'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskLink'
          description: |
            This endpoint launches a [long-running task](#/Tasks/getTask) and returns the Task ID of the launched task.
            The task response contains the full list of DNA Oligos that were created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Bulk Create DNA Oligos
      tags:
      - Oligos
  /oligos:bulk-get:
    get:
      description: Bulk get Oligos by ID
      operationId: bulkGetOligos
      parameters:
      - description: |
          Comma-separated list of IDs of Oligos to get.
        explode: true
        in: query
        name: oligoIds
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OligosBulkGet'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Bulk get Oligos by ID
      tags:
      - Oligos
  /oligos:unarchive:
    post:
      deprecated: true
      description: Unarchive Oligos
      operationId: unarchiveOligos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OligosUnarchive'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OligosArchivalChange'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Unarchive Oligos
      tags:
      - Oligos
  /organizations:
    get:
      description: |
        Returns all organizations that the caller has permission to view. The following roles have view permission:
          - tenant admins
          - members of the organization
      operationId: listOrganizations
      parameters:
      - description: |
          Comma-separated list of ids. Matches all of the provided IDs, or returns a 400 error that includes a list of which IDs are invalid.
        explode: true
        in: query
        name: ids
        required: false
        schema:
          example: "ent_ZJy8RTbo,ent_8GVbVkPj,ent_qREJ33rn"
          type: string
        style: form
      - description: Name of an organization. Restricts results to those with the
          specified name.
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Name substring of an organization. Restricts results to those
          with names that include the provided substring.
        explode: true
        in: query
        name: nameIncludes
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of names. Restricts results to those that match any of the specified names, case insensitive.  Warning - this filter can be non-performant due to case insensitivity.
        explode: true
        in: query
        name: names.anyOf
        required: false
        schema:
          example: "MyName1,MyName2"
          type: string
        style: form
      - description: |
          Comma-separated list of names. Restricts results to those that match any of the specified names, case sensitive.
        explode: true
        in: query
        name: names.anyOf.caseSensitive
        required: false
        schema:
          example: "MyName1,MyName2"
          type: string
        style: form
      - description: |
          Datetime, in RFC 3339 format. Supports the > and < operators. Time zone defaults to UTC. Restricts results to those modified in the specified range. e.g. > 2017-04-30.
        explode: true
        in: query
        name: modifiedAt
        required: false
        schema:
          type: string
        style: form
      - description: Comma-separated list of user or Benchling app IDs. Restricts
          results to organizations that include all the given users/apps as members.
        explode: true
        in: query
        name: hasMembers
        required: false
        schema:
          type: string
        style: form
      - description: Comma-separated list of user or Benchling app IDs. Restricts
          results to organizations that include all the given users/apps as admins.
        explode: true
        in: query
        name: hasAdmins
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 50
          maximum: 100
          minimum: 0
          nullable: false
          type: integer
        style: form
      - description: Token for pagination
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          default: modifiedAt:desc
          description: |
            Sets the sort-order of the response. Valid sorts are modifiedAt (modified time, most recent first) and name (organization name, alphabetical). Optionally add :asc or :desc to specify ascending or descending order.
          enum:
          - modifiedAt
          - modifiedAt:asc
          - modifiedAt:desc
          - name
          - name:asc
          - name:desc
          nullable: false
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsPaginatedList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: List organizations
      tags:
      - Organizations
  /organizations/{organization_id}:
    get:
      description: |
        Returns an organization by ID if the caller has permission to view. The following roles have view permission:
          - tenant admins
          - members of the organization
      operationId: getOrganization
      parameters:
      - description: ID of organization to get
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: Get an organization by ID
      tags:
      - Organizations
  /plate-schemas:
    get:
      description: List plate schemas
      operationId: listPlateSchemas
      parameters:
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 50
          maximum: 100
          minimum: 0
          nullable: false
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlateSchemasPaginatedList'
          description: OK
          headers:
            Result-Count:
              description: The total number of schemas that match the given query
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-limit:
              description: The number of allowed requests in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-remaining:
              description: The number of calls remaining in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-reset:
              description: The number of seconds remaining in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: List plate schemas
      tags:
      - Schemas
  /plate-schemas/{schema_id}:
    get:
      description: Get a plate schema by ID
      operationId: getPlateSchema
      parameters:
      - description: ID of schema to get
        explode: false
        in: path
        name: schema_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlateSchema'
          description: OK
        "400":
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: Get a plate schema by ID
      tags:
      - Schemas
  /plates:
    get:
      description: List plates
      operationId: listPlates
      parameters:
      - description: |
          Number of results to return. Defaults to 50, maximum of 100.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 50
          maximum: 100
          minimum: 0
          nullable: false
          type: integer
        style: form
      - description: Token for pagination
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          default: modifiedAt:desc
          description: |
            Method by which to order search results. Valid sorts are modifiedAt (modified time, most recent first) and name (entity name, alphabetical). Optionally add :asc or :desc to specify ascending or descending order.
          enum:
          - barcode
          - modifiedAt
          - modifiedAt:asc
          - modifiedAt:desc
          - name
          - name:asc
          - name:desc
          nullable: false
          type: string
        style: form
      - description: |
          ID of a schema. Restricts results to those of the specified schema.
        explode: true
        in: query
        name: schemaId
        required: false
        schema:
          type: string
        style: form
      - description: |
          Schema field value. For Integer, Float, and Date type fields, supports the >= and <= operators. If present, the schemaId param must also be present. Restricts results to those with a field of whose value matches the filter.
        explode: true
        in: query
        name: schemaFields
        required: false
        schema:
          $ref: '#/components/schemas/SchemaFieldsQueryParam'
        style: form
      - description: |
          Datetime, in RFC 3339 format. Supports the > and < operators. Time zone defaults to UTC. Restricts results to those modified in the specified range. e.g. > 2017-04-30.
        explode: true
        in: query
        name: modifiedAt
        required: false
        schema:
          type: string
        style: form
      - description: Name of a plate. Restricts results to those with the specified
          name.
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: |
          Name substring of a plate. Restricts results to those with names that include the provided substring.
        explode: true
        in: query
        name: nameIncludes
        required: false
        schema:
          type: string
        style: form
      - description: |
          ID of a location. Restricts results to those located in the specified storage.
        explode: true
        in: query
        name: ancestorStorageId
        required: false
        schema:
          type: string
        style: form
      - description: |
          ID of a batch, entity, or entity schema. Restricts results to those that hold containers with entities or batches associated with the specified ID.
        explode: true
        in: query
        name: storageContentsId
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of IDs of batches or entities. Restricts results to those that hold containers with at least one of the specified batches, entities, or batches of the specified entities.
        explode: true
        in: query
        name: storageContentsIds
        required: false
        schema:
          type: string
        style: form
      - description: |
          Archive reason. Restricts items to those with the specified archive reason. Use "NOT_ARCHIVED" to filter for unarchived plates. Use "ANY_ARCHIVED" to filter for archived plates regardless of reason. Use "ANY_ARCHIVED_OR_NOT_ARCHIVED" to return items for both archived and unarchived.
        examples:
          "1_not_archived":
            summary: Only include unarchived items (default).
            value: NOT_ARCHIVED
          "2_archived_reason":
            summary: Includes items archived for a specific reason.
            value: RETIRED
          "3_any_archived":
            summary: Includes items archived for any reason.
            value: ANY_ARCHIVED
          "4_any_archived_or_not_archived":
            summary: Includes both archived and unarchived items.
            value: ANY_ARCHIVED_OR_NOT_ARCHIVED
        explode: true
        in: query
        name: archiveReason
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of ids. Matches all of the provided IDs, or returns a 400 error that includes a list of which IDs are invalid.
        explode: true
        in: query
        name: ids
        required: false
        schema:
          example: "plt_xd4hj4eB,plt_xd4hj4C"
          type: string
        style: form
      - description: |
          Comma-separated list of barcodes. Matches all of the provided barcodes, or returns a 400 error that includes a list of which barcodes are invalid.
        explode: true
        in: query
        name: barcodes
        required: false
        schema:
          example: "W102477,W102478"
          type: string
        style: form
      - description: |
          Comma-separated list of names. Restricts results to those that match any of the specified names, case insensitive.  Warning - this filter can be non-performant due to case insensitivity.
        explode: true
        in: query
        name: names.anyOf
        required: false
        schema:
          example: "MyName1,MyName2"
          type: string
        style: form
      - description: |
          Comma-separated list of names. Restricts results to those that match any of the specified names, case sensitive.
        explode: true
        in: query
        name: names.anyOf.caseSensitive
        required: false
        schema:
          example: "MyName1,MyName2"
          type: string
        style: form
      - description: |
          Comma-separated list of fields to return. Modifies the output shape. To return all keys at a given level, enumerate them or use the wildcard, '*'. For more information, [click here](https://docs.benchling.com/docs/getting-started-1#returning-query-parameter).
        explode: true
        in: query
        name: returning
        required: false
        schema:
          example: "plates.id,plates.wells.*.webURL"
          type: string
        style: form
      - description: Comma separated list of users IDs
        explode: true
        in: query
        name: creatorIds
        required: false
        schema:
          example: ent_a0SApq3z
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlatesPaginatedList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: List plates
      tags:
      - Plates
    post:
      description: Create a plate
      operationId: createPlate
      parameters:
      - description: |
          Comma-separated list of fields to return. Modifies the output shape. To return all keys at a given level, enumerate them or use the wildcard, '*'. For more information, [click here](https://docs.benchling.com/docs/getting-started-1#returning-query-parameter).
        explode: true
        in: query
        name: returning
        required: false
        schema:
          example: "id,webURL"
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlateCreate'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plate'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Create a plate
      tags:
      - Plates
  /plates/{plate_id}:
    get:
      description: Get a plate
      operationId: getPlate
      parameters:
      - explode: false
        in: path
        name: plate_id
        required: true
        schema:
          type: string
        style: simple
      - description: |
          Comma-separated list of fields to return. Modifies the output shape. To return all keys at a given level, enumerate them or use the wildcard, '*'. For more information, [click here](https://docs.benchling.com/docs/getting-started-1#returning-query-parameter).
        explode: true
        in: query
        name: returning
        required: false
        schema:
          example: "id,webURL"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plate'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: Get a plate
      tags:
      - Plates
    patch:
      description: Update a plate
      operationId: updatePlate
      parameters:
      - explode: false
        in: path
        name: plate_id
        required: true
        schema:
          type: string
        style: simple
      - description: |
          Comma-separated list of fields to return. Modifies the output shape. To return all keys at a given level, enumerate them or use the wildcard, '*'. For more information, [click here](https://docs.benchling.com/docs/getting-started-1#returning-query-parameter).
        explode: true
        in: query
        name: returning
        required: false
        schema:
          example: "id,webURL"
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlateUpdate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plate'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: Update a plate
      tags:
      - Plates
  /plates:archive:
    post:
      description: Archive plates and any containers of the plates
      operationId: archivePlates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlatesArchive'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlatesArchivalChange'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Archive plates
      tags:
      - Plates
  /plates:bulk-get:
    get:
      description: BulkGet plates
      operationId: bulkGetPlates
      parameters:
      - description: Comma-separated list of plate IDs.
        explode: true
        in: query
        name: plateIds
        required: false
        schema:
          type: string
        style: form
      - description: Comma-separated list of plate barcodes.
        explode: false
        in: query
        name: barcodes
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of fields to return. Modifies the output shape. To return all keys at a given level, enumerate them or use the wildcard, '*'. For more information, [click here](https://docs.benchling.com/docs/getting-started-1#returning-query-parameter).
        explode: true
        in: query
        name: returning
        required: false
        schema:
          example: "plates.id,plates.wells.*.webURL"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlatesBulkGet'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: BulkGet plates
      tags:
      - Plates
  /plates:unarchive:
    post:
      description: Unarchive plates and the containers that were archived along with
        them
      operationId: unarchivePlates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlatesUnarchive'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlatesArchivalChange'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Unarchive plates
      tags:
      - Plates
  /projects:
    get:
      description: List projects
      operationId: listProjects
      parameters:
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 50
          maximum: 100
          minimum: 0
          nullable: false
          type: integer
        style: form
      - description: |
          Method by which to order search results. Valid sorts are modifiedAt (modified time, most recent first) and name (project name, alphabetical). Optionally add :asc or :desc to specify ascending or descending order. Default is modifiedAt.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: modifiedAt
          enum:
          - modifiedAt
          - name
          - modifiedAt:asc
          - name:asc
          - modifiedAt:desc
          - name:desc
          nullable: false
          type: string
        style: form
      - description: |
          Archive reason. Restricts items to those with the specified archive reason. Use "NOT_ARCHIVED" to filter for unarchived projects. Use "ANY_ARCHIVED" to filter for archived projects regardless of reason. Use "ANY_ARCHIVED_OR_NOT_ARCHIVED" to return items for both archived and unarchived.
        examples:
          "1_not_archived":
            summary: Only include unarchived items (default).
            value: NOT_ARCHIVED
          "2_archived_reason":
            summary: Includes items archived for a specific reason.
            value: RETIRED
          "3_any_archived":
            summary: Includes items archived for any reason.
            value: ANY_ARCHIVED
          "4_any_archived_or_not_archived":
            summary: Includes both archived and unarchived items.
            value: ANY_ARCHIVED_OR_NOT_ARCHIVED
        explode: true
        in: query
        name: archiveReason
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of ids. Matches all of the provided IDs, or returns a 400 error that includes a list of which IDs are invalid.
        explode: true
        in: query
        name: ids
        required: false
        schema:
          example: "src_ZJy8RTbo,src_8GVbVkPj,src_qREJ33rn"
          type: string
        style: form
      - description: Name of a project. Restricts results to those with the specified
          name.
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsPaginatedList'
          description: OK
      summary: List projects
      tags:
      - Projects
  /projects/{project_id}:
    get:
      description: Get a project by ID
      operationId: getProject
      parameters:
      - description: ID of project to get
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: Get a project by ID
      tags:
      - Projects
  /projects:archive:
    post:
      description: Archives projects and their contents
      operationId: archiveProjects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectsArchive'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsArchivalChange'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Archive projects
      tags:
      - Projects
  /projects:unarchive:
    post:
      description: Unarchives projects and the contents that were archived along with
        them
      operationId: unarchiveProjects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectsUnarchive'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsArchivalChange'
          description: OK
      summary: Unarchive projects
      tags:
      - Projects
  /registries:
    get:
      description: List registries
      operationId: listRegistries
      parameters:
      - description: Name of a registry. Restricts results to those with the specified
          name.
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: |
          Datetime, in RFC 3339 format. Supports the > and < operators. Time zone defaults to UTC. Restricts results to those modified in the specified range. e.g. > 2017-04-30.
        explode: true
        in: query
        name: modifiedAt
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistriesList'
          description: OK
      summary: List registries
      tags:
      - Registry
  /registries/{registry_id}:
    get:
      description: Get registry
      operationId: getRegistry
      parameters:
      - description: ID for the registry
        explode: false
        in: path
        name: registry_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registry'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: Get registry
      tags:
      - Registry
  /registries/{registry_id}/batch-schemas:
    get:
      deprecated: true
      description: List batch schemas by registry. Deprecated - use Schemas endpoints
        instead.
      operationId: listBatchSchemasByRegistry
      parameters:
      - description: ID for the registry
        explode: false
        in: path
        name: registry_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchSchemasList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: List batch schemas by registry
      tags:
      - Registry
  /registries/{registry_id}/box-schemas:
    get:
      deprecated: true
      description: List box schemas by registry. Deprecated - use Schemas endpoints
        instead.
      operationId: listBoxSchemasByRegistry
      parameters:
      - description: ID for the registry
        explode: false
        in: path
        name: registry_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoxSchemasList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: List box schemas by registry
      tags:
      - Registry
  /registries/{registry_id}/container-schemas:
    get:
      deprecated: true
      description: List container schemas by registry. Deprecated - use Schemas endpoints
        instead.
      operationId: listContainerSchemasByRegistry
      parameters:
      - description: ID for the registry
        explode: false
        in: path
        name: registry_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerSchemasList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: List container schemas by registry
      tags:
      - Registry
  /registries/{registry_id}/dropdowns:
    get:
      deprecated: true
      description: List dropdowns by registry
      operationId: listDropdownsByRegistry
      parameters:
      - description: ID of the registry to list the dropdowns for.
        explode: false
        in: path
        name: registry_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DropdownsRegistryList'
          description: OK
          headers:
            x-rate-limit-limit:
              description: The number of allowed requests in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-remaining:
              description: The number of calls remaining in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-reset:
              description: The number of seconds remaining in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: List dropdowns for a given registry
      tags:
      - Registry
  /registries/{registry_id}/entity-schemas:
    get:
      deprecated: true
      description: List entity schemas by registry. Deprecated - use Schemas endpoints
        instead.
      operationId: listEntitySchemasByRegistry
      parameters:
      - description: ID for the registry
        explode: false
        in: path
        name: registry_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeprecatedEntitySchemasList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: List entity schemas by registry
      tags:
      - Registry
  /registries/{registry_id}/label-printers:
    get:
      description: List printers
      operationId: listPrinters
      parameters:
      - description: ID of the registry to list the printers for.
        explode: false
        in: path
        name: registry_id
        required: true
        schema:
          type: string
        style: simple
      - description: Name of a printer. Restricts results to those with the specified
          name.
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrintersList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: List printers
      tags:
      - Printers
  /registries/{registry_id}/label-templates:
    get:
      description: List label templates
      operationId: listLabelTemplates
      parameters:
      - description: ID of the registry to list the label templates of.
        explode: false
        in: path
        name: registry_id
        required: true
        schema:
          type: string
        style: simple
      - description: Name of a label template. Restricts results to those with the
          specified name.
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelTemplatesList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: List label templates
      tags:
      - Label Templates
  /registries/{registry_id}/location-schemas:
    get:
      deprecated: true
      description: List location schemas by registry. Deprecated - use Schemas endpoints
        instead.
      operationId: listLocationSchemasByRegistry
      parameters:
      - description: ID for the registry
        explode: false
        in: path
        name: registry_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationSchemasList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: List location schemas by registry
      tags:
      - Registry
  /registries/{registry_id}/plate-schemas:
    get:
      deprecated: true
      description: List plate schemas by registry. Deprecated - use Schemas endpoints
        instead.
      operationId: listPlateSchemasByRegistry
      parameters:
      - description: ID for the registry
        explode: false
        in: path
        name: registry_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlateSchemasList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: List plate schemas by registry
      tags:
      - Registry
  /registries/{registry_id}/registered-entities:bulk-get:
    get:
      description: Bulk get registered entities
      operationId: bulkGetRegisteredEntities
      parameters:
      - description: ID for the registry
        explode: false
        in: path
        name: registry_id
        required: true
        schema:
          type: string
        style: simple
      - description: Comma separated list of entity Registry IDs
        explode: true
        in: query
        name: entityRegistryIds
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisteredEntitiesList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: Bulk get registered entities
      tags:
      - Registry
  /registries/{registry_id}:bulk-register-entities:
    post:
      description: |
        Attempts to move entities into the registry. Limit of 2500 entities per request. This endpoint will first check that the entities are all valid to be moved into the registry, given the namingStrategy. If any entities fail validation, no files will be moved and errors describing invalid entities is returned. If all entities pass validation, the entities are moved into the registry.
      operationId: registerEntities
      parameters:
      - description: ID for the registry
        explode: false
        in: path
        name: registry_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterEntities'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskLink'
          description: |2

            This endpoint launches a [long-running task](#/Tasks/getTask) and returns the Task ID of the launched task.

            When successful, the task has an empty response. Benchling cannot always process two registration attempts within the same registry at the same time,
            so it's possible for the task to return an error response that indicates another attempt is already in progress and currently blocking this one.
            Benchling will automatically retry the task up to 3 times, and in the unlikely event that it is still failing, the task status will be “FAILED” and the error message will read:

            > Another registration attempt is in progress. Please try again in a few moments. If this problem persists, please wait 1-2 minutes before trying again.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Register entities
      tags:
      - Registry
  /registries/{registry_id}:unregister-entities:
    post:
      description: Unregisters entities and moves them to a folder
      operationId: unregisterEntities
      parameters:
      - description: ID of the registry
        explode: false
        in: path
        name: registry_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnregisterEntities'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyObject'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Unregister entities
      tags:
      - Registry
  /registries/{registry_id}:validate-barcodes:
    post:
      description: Validate barcodes on storage objects.
      operationId: validateBarcodes
      parameters:
      - description: ID of the registry to validate barcodes in.
        explode: false
        in: path
        name: registry_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BarcodesList'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BarcodeValidationResults'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: Validate barcodes
      tags:
      - Inventory
  /request-fulfillments:
    get:
      description: List Request Fulfillments
      operationId: listRequestFulfillments
      parameters:
      - example: etr_IKwdYx31
        explode: true
        in: query
        name: entryId
        required: true
        schema:
          type: string
        style: form
      - description: |
          Datetime, in RFC 3339 format. Supports the > and < operators. Time zone defaults to UTC. Restricts results to those modified in the specified range. e.g. > 2017-04-30.
        explode: true
        in: query
        name: modifiedAt
        required: false
        schema:
          type: string
        style: form
      - example: Im5ldyB0ZXN0Ig==
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 50
          maximum: 100
          minimum: 0
          nullable: false
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestFulfillmentsPaginatedList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: List Request Fulfillments
      tags:
      - Requests
  /request-fulfillments/{request_fulfillment_id}:
    get:
      description: Get a request's fulfillment
      operationId: getRequestFulfillment
      parameters:
      - example: reqffm_8Hm71Usw
        explode: false
        in: path
        name: request_fulfillment_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestFulfillment'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: Get a request's fulfillment
      tags:
      - Requests
  /request-schemas:
    get:
      description: List request schemas
      operationId: listRequestSchemas
      parameters:
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 50
          maximum: 100
          minimum: 0
          nullable: false
          type: integer
        style: form
      - description: |
          Datetime, in RFC 3339 format. Supports the > and < operators. Time zone defaults to UTC. Restricts results to those modified in the specified range. e.g. > 2017-04-30.
        explode: true
        in: query
        name: modifiedAt
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestSchemasPaginatedList'
          description: OK
          headers:
            Result-Count:
              description: The total number of schemas that match the given query
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-limit:
              description: The number of allowed requests in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-remaining:
              description: The number of calls remaining in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-reset:
              description: The number of seconds remaining in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: List request schemas
      tags:
      - Schemas
  /request-schemas/{schema_id}:
    get:
      description: Get a Request schema by ID
      operationId: getRequestSchema
      parameters:
      - description: ID of schema to get
        explode: false
        in: path
        name: schema_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestSchema'
          description: OK
        "400":
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: Get a Request schema by ID
      tags:
      - Schemas
  /request-task-schemas:
    get:
      description: List request task schemas
      operationId: listRequestTaskSchemas
      parameters:
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 50
          maximum: 100
          minimum: 0
          nullable: false
          type: integer
        style: form
      - description: |
          Datetime, in RFC 3339 format. Supports the > and < operators. Time zone defaults to UTC. Restricts results to those modified in the specified range. e.g. > 2017-04-30.
        explode: true
        in: query
        name: modifiedAt
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestTaskSchemasPaginatedList'
          description: OK
          headers:
            Result-Count:
              description: The total number of schemas that match the given query
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-limit:
              description: The number of allowed requests in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-remaining:
              description: The number of calls remaining in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-reset:
              description: The number of seconds remaining in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: List request task schemas
      tags:
      - Schemas
  /request-task-schemas/{schema_id}:
    get:
      description: Get a Request Task schema by ID
      operationId: getRequestTaskSchema
      parameters:
      - description: ID of schema to get
        explode: false
        in: path
        name: schema_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestTaskSchema'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: Get a Request Task schema by ID
      tags:
      - Schemas
  /requests:
    get:
      description: List requests
      operationId: listRequests
      parameters:
      - explode: true
        in: query
        name: schemaId
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: requestStatus
        required: false
        schema:
          $ref: '#/components/schemas/RequestStatus'
        style: form
      - description: minimum create time (unix seconds)
        explode: true
        in: query
        name: minCreatedTime
        required: false
        schema:
          type: integer
        style: form
      - description: maximum create time (unix seconds)
        explode: true
        in: query
        name: maxCreatedTime
        required: false
        schema:
          type: integer
        style: form
      - example: Im5ldyB0ZXN0Ig==
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 50
          maximum: 100
          minimum: 0
          nullable: false
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestsPaginatedList'
          description: OK
      summary: List requests
      tags:
      - Requests
    post:
      description: Create a request
      operationId: createRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestCreate'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Request'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Create a request
      tags:
      - Requests
  /requests/{request_id}:
    get:
      description: Get a request by ID
      operationId: getRequest
      parameters:
      - example: req_JekfeyVS
        explode: false
        in: path
        name: request_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Request'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: Get a request by ID
      tags:
      - Requests
    patch:
      description: Update a request
      operationId: patchRequest
      parameters:
      - explode: false
        in: path
        name: request_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestUpdate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Request'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Update a request
      tags:
      - Requests
  /requests/{request_id}/response:
    get:
      description: Get a request's response
      operationId: getRequestResponse
      parameters:
      - example: req_JekfeyVS
        explode: false
        in: path
        name: request_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestResponse'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: Get a request's response
      tags:
      - Requests
  /requests/{request_id}/tasks:bulk-create:
    post:
      description: Create tasks for a request
      operationId: bulkCreateRequestTasks
      parameters:
      - example: req_JekfeyVS
        explode: false
        in: path
        name: request_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestTasksBulkCreateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestTasksBulkCreateResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorBulk'
          description: Bad Request
      summary: Create tasks for a request
      tags:
      - Requests
  /requests/{request_id}/tasks:bulk-update:
    post:
      description: Bulk update tasks for a request
      operationId: bulkUpdateRequestTasks
      parameters:
      - example: req_JekfeyVS
        explode: false
        in: path
        name: request_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestTasksBulkUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestTasksBulkUpdateResponse'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: Bulk update tasks for a request
      tags:
      - Requests
  /requests/{request_id}:execute-sample-groups:
    post:
      description: Update the status of sample groups in a request
      operationId: executeRequestsSampleGroups
      parameters:
      - example: req_JekfeyVS
        explode: false
        in: path
        name: request_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SampleGroupsStatusUpdate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecuteSampleGroups'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: Update the status of sample groups in a request
      tags:
      - Requests
  /requests:bulk-get:
    get:
      description: Bulk get requests by API ID or display ID
      operationId: bulkGetRequests
      parameters:
      - description: Comma-separated list of request IDs. Exactly one of requestIds
          or displayIds must be specified.
        example: "req_xJk20sla,req_lQJ3nMs5"
        explode: true
        in: query
        name: requestIds
        required: false
        schema:
          type: string
        style: form
      - description: Comma-separated list of display IDs. Exactly one of requestIds
          or displayIds must be specified.
        example: "VPR001,VPR002"
        explode: true
        in: query
        name: displayIds
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestsBulkGet'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: Bulk get requests
      tags:
      - Requests
  /result-transactions:
    post:
      description: |
        Transactions allow results to be upload in multiple requests. This endpoint lets you create a transaction. You can then upload results to the transaction, abort the transaction, or commit the transaction.
      operationId: createAssayResultsTransaction
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssayResultTransactionCreateResponse'
          description: OK
      summary: Create a transaction
      tags:
      - Assay Results
  /result-transactions/{transaction_id}/results:
    post:
      description: Create results in a transaction
      operationId: createAssayResultsInTransaction
      parameters:
      - explode: false
        in: path
        name: transaction_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssayResultsBulkCreateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssayResultsCreateResponse'
          description: OK
      summary: Create results in a transaction
      tags:
      - Assay Results
  /result-transactions/{transaction_id}:abort:
    post:
      description: Aborting a transaction will discard all uploaded results.
      operationId: abortAssayResultsTransaction
      parameters:
      - explode: false
        in: path
        name: transaction_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssayResultTransactionCreateResponse'
          description: OK
      summary: Abort a transaction
      tags:
      - Assay Results
  /result-transactions/{transaction_id}:commit:
    post:
      description: Committing a transaction will cause all results that have been
        uploaded to be saved and visible to others.
      operationId: commitAssayResultsTransaction
      parameters:
      - explode: false
        in: path
        name: transaction_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssayResultTransactionCreateResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Commit a transaction
      tags:
      - Assay Results
  /rna-oligos:
    get:
      description: List RNA Oligos
      operationId: listRNAOligos
      parameters:
      - description: |
          Number of results to return. Defaults to 50, maximum of 100.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 50
          maximum: 100
          minimum: 0
          nullable: false
          type: integer
        style: form
      - description: Token for pagination
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          default: modifiedAt:desc
          description: |
            Method by which to order search results. Valid sorts are modifiedAt (modified time, most recent first) and name (entity name, alphabetical). Optionally add :asc or :desc to specify ascending or descending order.
          enum:
          - modifiedAt
          - modifiedAt:asc
          - modifiedAt:desc
          - name
          - name:asc
          - name:desc
          nullable: false
          type: string
        style: form
      - description: |
          Datetime, in RFC 3339 format. Supports the > and < operators. Time zone defaults to UTC. Restricts results to those modified in the specified range. e.g. > 2017-04-30.
        explode: true
        in: query
        name: modifiedAt
        required: false
        schema:
          type: string
        style: form
      - description: "Name of an RNA Oligo. Restricts results to those with the specified\
          \ name, alias, or entity registry ID."
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: "Name substring of an RNA Oligo. Restricts results to those with\
          \ names, aliases, or entity registry IDs that include the provided substring."
        explode: true
        in: query
        name: nameIncludes
        required: false
        schema:
          type: string
        style: form
      - description: |
          Full bases of the RNA Oligo. Restricts results to those with the specified bases, case-insensitive, allowing for circular or reverse complement matches. Does not allow partial matching or loose matching via degenerate bases.
        explode: true
        in: query
        name: bases
        required: false
        schema:
          type: string
        style: form
      - description: ID of a folder. Restricts results to those in the folder.
        explode: true
        in: query
        name: folderId
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of entry IDs. Restricts results to RNA Oligos mentioned in those entries.
        explode: true
        in: query
        name: mentionedIn
        required: false
        schema:
          type: string
        style: form
      - description: ID of a project. Restricts results to those in the project.
        explode: true
        in: query
        name: projectId
        required: false
        schema:
          type: string
        style: form
      - description: |
          ID of a registry. Restricts results to those registered in this registry. Specifying "null" returns unregistered items.
        explode: true
        in: query
        name: registryId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: |
          ID of a schema. Restricts results to those of the specified schema.
        explode: true
        in: query
        name: schemaId
        required: false
        schema:
          type: string
        style: form
      - description: |
          Schema field value. For Integer, Float, and Date type fields, supports the >= and <= operators. If present, the schemaId param must also be present. Restricts results to those with a field of whose value matches the filter.
        explode: true
        in: query
        name: schemaFields
        required: false
        schema:
          $ref: '#/components/schemas/SchemaFieldsQueryParam'
        style: form
      - description: |
          Archive reason. Restricts items to those with the specified archive reason. Use "NOT_ARCHIVED" to filter for unarchived RNA Oligos. Use "ANY_ARCHIVED" to filter for archived RNA Oligos regardless of reason. Use "ANY_ARCHIVED_OR_NOT_ARCHIVED" to return items for both archived and unarchived.
        examples:
          "1_not_archived":
            summary: Only include unarchived items (default).
            value: NOT_ARCHIVED
          "2_archived_reason":
            summary: Includes items archived for a specific reason.
            value: RETIRED
          "3_any_archived":
            summary: Includes items archived for any reason.
            value: ANY_ARCHIVED
          "4_any_archived_or_not_archived":
            summary: Includes both archived and unarchived items.
            value: ANY_ARCHIVED_OR_NOT_ARCHIVED
        explode: true
        in: query
        name: archiveReason
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of item IDs. Restricts results to those that mention the given items in the description.
        explode: true
        in: query
        name: mentions
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of ids. Matches all of the provided IDs, or returns a 400 error that includes a list of which IDs are invalid.
        explode: true
        in: query
        name: ids
        required: false
        schema:
          example: "seq_yWs5X7lv,seq_RhYGVnHF"
          type: string
        style: form
      - description: |
          Comma-separated list of entity registry IDs. Restricts results to those that match any of the specified registry IDs.
        explode: true
        in: query
        name: entityRegistryIds.anyOf
        required: false
        schema:
          example: "TP001,TP002"
          type: string
        style: form
      - description: |
          Comma-separated list of names. Restricts results to those that match any of the specified names, aliases, or entity registry IDs, case insensitive.  Warning - this filter can be non-performant due to case insensitivity.
        explode: true
        in: query
        name: names.anyOf
        required: false
        schema:
          example: "MyName1,MyName2"
          type: string
        style: form
      - description: |
          Comma-separated list of names. Restricts results to those that match any of the specified names, aliases, or entity registry IDs, case sensitive.
        explode: true
        in: query
        name: names.anyOf.caseSensitive
        required: false
        schema:
          example: "MyName1,MyName2"
          type: string
        style: form
      - description: Comma separated list of users IDs
        explode: true
        in: query
        name: creatorIds
        required: false
        schema:
          example: ent_a0SApq3z
          type: string
        style: form
      - description: Comma separated list of user or app IDs
        explode: true
        in: query
        name: authorIds.anyOf
        required: false
        schema:
          example: "ent_a0SApq3z,ent_b4AApz9b"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RnaOligosPaginatedList'
          description: OK
          headers:
            Result-Count:
              description: The total number of items that match the given query
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-limit:
              description: The number of allowed requests in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-remaining:
              description: The number of requests remaining in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-reset:
              description: The number of seconds remaining in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: List RNA Oligos
      tags:
      - RNA Oligos
    post:
      description: Create an RNA Oligo
      operationId: createRNAOligo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RnaOligoCreate'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RnaOligo'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
        "503":
          description: Service Unavailable (Lock Contention)
      summary: Create an RNA Oligo
      tags:
      - RNA Oligos
  /rna-oligos/{oligo_id}:
    get:
      description: Get an RNA Oligo
      operationId: getRNAOligo
      parameters:
      - explode: false
        in: path
        name: oligo_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RnaOligo'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Get an RNA Oligo
      tags:
      - RNA Oligos
    patch:
      description: Update an RNA Oligo
      operationId: updateRNAOligo
      parameters:
      - explode: false
        in: path
        name: oligo_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RnaOligoUpdate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RnaOligo'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Update an RNA Oligo
      tags:
      - RNA Oligos
  /rna-oligos:archive:
    post:
      description: Archive RNA Oligos
      operationId: archiveRNAOligos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RnaOligosArchive'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RnaOligosArchivalChange'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Archive RNA Oligos
      tags:
      - RNA Oligos
  /rna-oligos:bulk-create:
    post:
      description: Bulk Create RNA Oligos. Limit of 1000 RNA Oligos per request.
      operationId: bulkCreateRNAOligos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RnaOligosBulkCreateRequest'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskLink'
          description: |
            This endpoint launches a [long-running task](#/Tasks/getTask) and returns the Task ID of the launched task.
            The task response contains the full list of RNA Oligos that were created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Bulk Create RNA Oligos
      tags:
      - RNA Oligos
  /rna-oligos:bulk-update:
    post:
      description: Bulk Update RNA Oligos
      operationId: bulkUpdateRNAOligos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RnaOligosBulkUpdateRequest'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskLink'
          description: |
            This endpoint launches a [long-running task](#/Tasks/getTask) and returns the Task ID of the launched task.
            When successful, the task returns a full list of [RNA Oligo](#/RNA%20Oligos/getRNAOligo) resources that were updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Bulk Update RNA Oligos
      tags:
      - RNA Oligos
  /rna-oligos:unarchive:
    post:
      description: Unarchive RNA Oligos
      operationId: unarchiveRNAOligos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RnaOligosUnarchive'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RnaOligosArchivalChange'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Unarchive RNA Oligos
      tags:
      - RNA Oligos
  /rna-sequences:
    get:
      description: List RNA sequences
      operationId: listRNASequences
      parameters:
      - description: |
          Number of results to return. Defaults to 50, maximum of 100.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 50
          maximum: 100
          minimum: 0
          nullable: false
          type: integer
        style: form
      - description: Token for pagination
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          default: modifiedAt:desc
          description: |
            Method by which to order search results. Valid sorts are modifiedAt (modified time, most recent first) and name (entity name, alphabetical). Optionally add :asc or :desc to specify ascending or descending order.
          enum:
          - modifiedAt
          - modifiedAt:asc
          - modifiedAt:desc
          - name
          - name:asc
          - name:desc
          nullable: false
          type: string
        style: form
      - description: |
          Datetime, in RFC 3339 format. Supports the > and < operators. Time zone defaults to UTC. Restricts results to those modified in the specified range. e.g. > 2017-04-30.
        explode: true
        in: query
        name: modifiedAt
        required: false
        schema:
          type: string
        style: form
      - description: "Name of an RNA Sequence. Restricts results to those with the\
          \ specified name, alias, or entity registry ID."
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: "Name substring of an RNA Sequence. Restricts results to those\
          \ with names, aliases, or entity registry IDs that include the provided\
          \ substring."
        explode: true
        in: query
        name: nameIncludes
        required: false
        schema:
          type: string
        style: form
      - description: "Full bases of the RNA sequence. Restricts results to those with\
          \ the specified bases, case-insensitive, allowing for circular or reverse\
          \ complement matches. Does not allow partial matching or loose matching\
          \ via degenerate bases."
        explode: true
        in: query
        name: bases
        required: false
        schema:
          type: string
        style: form
      - description: ID of a folder. Restricts results to those in the folder.
        explode: true
        in: query
        name: folderId
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of entry IDs. Restricts results to RNA sequences mentioned in those entries.
        explode: true
        in: query
        name: mentionedIn
        required: false
        schema:
          type: string
        style: form
      - description: ID of a project. Restricts results to those in the project.
        explode: true
        in: query
        name: projectId
        required: false
        schema:
          type: string
        style: form
      - description: |
          ID of a registry. Restricts results to those registered in this registry. Specifying "null" returns unregistered items.
        explode: true
        in: query
        name: registryId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: |
          ID of a schema. Restricts results to those of the specified schema.
        explode: true
        in: query
        name: schemaId
        required: false
        schema:
          type: string
        style: form
      - description: |
          Schema field value. For Integer, Float, and Date type fields, supports the >= and <= operators. If present, the schemaId param must also be present. Restricts results to those with a field of whose value matches the filter.
        explode: true
        in: query
        name: schemaFields
        required: false
        schema:
          $ref: '#/components/schemas/SchemaFieldsQueryParam'
        style: form
      - description: |
          Archive reason. Restricts items to those with the specified archive reason. Use "NOT_ARCHIVED" to filter for unarchived RNA sequences. Use "ANY_ARCHIVED" to filter for archived RNA sequences regardless of reason. Use "ANY_ARCHIVED_OR_NOT_ARCHIVED" to return items for both archived and unarchived.
        examples:
          "1_not_archived":
            summary: Only include unarchived items (default).
            value: NOT_ARCHIVED
          "2_archived_reason":
            summary: Includes items archived for a specific reason.
            value: RETIRED
          "3_any_archived":
            summary: Includes items archived for any reason.
            value: ANY_ARCHIVED
          "4_any_archived_or_not_archived":
            summary: Includes both archived and unarchived items.
            value: ANY_ARCHIVED_OR_NOT_ARCHIVED
        explode: true
        in: query
        name: archiveReason
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of item IDs. Restricts results to those that mention the given items in the description.
        explode: true
        in: query
        name: mentions
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of ids. Matches all of the provided IDs, or returns a 400 error that includes a list of which IDs are invalid.
        explode: true
        in: query
        name: ids
        required: false
        schema:
          example: "seq_VzVOART1,seq_RahDGaaC"
          type: string
        style: form
      - description: |
          Comma-separated list of entity registry IDs. Restricts results to those that match any of the specified registry IDs.
        explode: true
        in: query
        name: entityRegistryIds.anyOf
        required: false
        schema:
          example: "TP001,TP002"
          type: string
        style: form
      - description: |
          Comma-separated list of names. Restricts results to those that match any of the specified names, aliases, or entity registry IDs, case insensitive.  Warning - this filter can be non-performant due to case insensitivity.
        explode: true
        in: query
        name: names.anyOf
        required: false
        schema:
          example: "MyName1,MyName2"
          type: string
        style: form
      - description: |
          Comma-separated list of names. Restricts results to those that match any of the specified names, aliases, or entity registry IDs, case sensitive.
        explode: true
        in: query
        name: names.anyOf.caseSensitive
        required: false
        schema:
          example: "MyName1,MyName2"
          type: string
        style: form
      - description: Comma separated list of users IDs
        explode: true
        in: query
        name: creatorIds
        required: false
        schema:
          example: ent_a0SApq3z
          type: string
        style: form
      - description: Comma separated list of user or app IDs
        explode: true
        in: query
        name: authorIds.anyOf
        required: false
        schema:
          example: "ent_a0SApq3z,ent_b4AApz9b"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RnaSequencesPaginatedList'
          description: OK
          headers:
            Result-Count:
              description: The total number of items that match the given query
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-limit:
              description: The number of allowed requests in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-remaining:
              description: The number of requests remaining in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
            x-rate-limit-reset:
              description: The number of seconds remaining in the current rate-limit
                period
              explode: false
              schema:
                type: integer
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: List RNA sequences
      tags:
      - RNA Sequences
    post:
      description: Create an RNA sequence
      operationId: createRNASequence
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RnaSequenceCreate'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RnaSequence'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
        "503":
          description: Service Unavailable (Lock Contention)
      summary: Create an RNA sequence
      tags:
      - RNA Sequences
  /rna-sequences/{rna_sequence_id}:
    get:
      description: Get an RNA sequence
      operationId: getRNASequence
      parameters:
      - explode: false
        in: path
        name: rna_sequence_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RnaSequence'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Get an RNA sequence
      tags:
      - RNA Sequences
    patch:
      description: Update an RNA sequence
      operationId: updateRNASequence
      parameters:
      - explode: false
        in: path
        name: rna_sequence_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RnaSequenceUpdate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RnaSequence'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Update an RNA sequence
      tags:
      - RNA Sequences
  /rna-sequences:archive:
    post:
      description: Archive RNA Sequences. RNA sequences that are already registered
        will not be removed from the registry.
      operationId: archiveRNASequences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RnaSequencesArchive'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RnaSequencesArchivalChange'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Archive RNA Sequences
      tags:
      - RNA Sequences
  /rna-sequences:auto-annotate:
    post:
      description: Auto-annotate RNA sequences with matching features from specified
        Feature Libraries. U/T bases are treated as interchangeable in both features
        and sequences.
      operationId: autoAnnotateRnaSequences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutoAnnotateRnaSequences'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskLink'
          description: |
            This endpoint launches a [long-running task](#/Tasks/getTask) and returns the Task ID of the launched task.
            When successful, the task has an empty response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Auto-annotate RNA sequences with matching features from specified Feature
        Libraries
      tags:
      - RNA Sequences
  /rna-sequences:autofill-parts:
    post:
      description: Autofill parts from matching RNA Sequences with linked schemas.
      operationId: autofillRNASequenceParts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutofillRnaSequences'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskLink'
          description: |
            This endpoint launches a [long-running task](#/Tasks/getTask) and returns the Task ID of the launched task.
            When successful, the task has an empty response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Autofill RNA sequence parts
      tags:
      - RNA Sequences
  /rna-sequences:autofill-translations:
    post:
      description: Autofill RNA sequence translations
      operationId: autofillRNASequenceTranslations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutofillRnaSequences'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskLink'
          description: |
            This endpoint launches a [long-running task](#/Tasks/getTask) and returns the Task ID of the launched task.
            When successful, the task has an empty response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Autofill RNA sequence translations from Amino Acid sequences with matching
        schemas
      tags:
      - RNA Sequences
  /rna-sequences:bulk-create:
    post:
      description: Bulk Create RNA sequences. Limit of 1000 RNA Sequences per request.
      operationId: bulkCreateRNASequences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RnaSequencesBulkCreateRequest'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskLink'
          description: |
            This endpoint launches a [long-running task](#/Tasks/getTask) and returns the Task ID of the launched task.
            When successful, the task returns a full list of [RNA Sequence](#/RNA%20Sequences/bulkGetRNASequences) resources that were created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Bulk Create RNA sequences
      tags:
      - RNA Sequences
  /rna-sequences:bulk-get:
    get:
      description: Bulk get RNA sequences by ID
      operationId: bulkGetRNASequences
      parameters:
      - description: |
          Comma-separated list of IDs of RNA sequences to get.
        explode: true
        in: query
        name: rnaSequenceIds
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RnaSequencesBulkGet'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Bulk get RNA sequences by ID
      tags:
      - RNA Sequences
  /rna-sequences:bulk-update:
    post:
      description: Bulk Update RNA sequences
      operationId: bulkUpdateRNASequences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RnaSequencesBulkUpdateRequest'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskLink'
          description: |
            This endpoint launches a [long-running task](#/Tasks/getTask) and returns the Task ID of the launched task.
            When successful, the task returns a full list of [RNA Sequences](#/RNA%20Sequences/bulkGetRNASequences) resources that were updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Bulk Update RNA sequences
      tags:
      - RNA Sequences
  /rna-sequences:unarchive:
    post:
      description: Unarchive RNA sequences
      operationId: unarchiveRNASequences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RnaSequencesUnarchive'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RnaSequencesArchivalChange'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Unarchive RNA sequences
      tags:
      - RNA Sequences
  /tasks/{task_id}:
    get:
      description: Get a task by id
      operationId: getTask
      parameters:
      - description: UUID of the task
        example: f438d656-c2c3-40a4-b3fd-d7e58db78242
        explode: false
        in: path
        name: task_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                AA Sequences - Bulk Create:
                  $ref: '#/components/examples/BulkOperateAaSequencesTaskResponse'
                AA Sequences - Bulk Update:
                  $ref: '#/components/examples/BulkOperateAaSequencesTaskResponse'
                AA Sequences - Find Matching Region:
                  $ref: '#/components/examples/AaSequencesFindMatchingRegionTaskResponse'
                Containers - Bulk Create:
                  $ref: '#/components/examples/BulkOperateContainersTaskResponse'
                Containers - Bulk Update:
                  $ref: '#/components/examples/BulkOperateContainersTaskResponse'
                Containers - Transfers:
                  $ref: '#/components/examples/TransfersTaskResponse'
                Custom Entities - Bulk Create:
                  $ref: '#/components/examples/BulkOperateCustomEntitiesTaskResponse'
                Custom Entities - Bulk Update:
                  $ref: '#/components/examples/BulkOperateCustomEntitiesTaskResponse'
                DNA Alignments - Create Consensus Alignment:
                  $ref: '#/components/examples/CreateAlignmentTaskResponse'
                DNA Alignments - Create Template Alignment:
                  $ref: '#/components/examples/CreateAlignmentTaskResponse'
                DNA Oligos - Bulk Create:
                  $ref: '#/components/examples/BulkOperateDnaOligosTaskResponse'
                DNA Oligos - Bulk Update:
                  $ref: '#/components/examples/BulkOperateDnaOligosTaskResponse'
                DNA Sequences - Auto Annotate:
                  $ref: '#/components/examples/EmptySuccessTaskResponse'
                DNA Sequences - Autofill Parts:
                  $ref: '#/components/examples/EmptySuccessTaskResponse'
                DNA Sequences - Autofill Translations:
                  $ref: '#/components/examples/EmptySuccessTaskResponse'
                DNA Sequences - Bulk Create:
                  $ref: '#/components/examples/BulkOperateDnaSequencesTaskResponse'
                DNA Sequences - Bulk Update:
                  $ref: '#/components/examples/BulkOperateDnaSequencesTaskResponse'
                Exports - Export Item:
                  $ref: '#/components/examples/ExportsTaskResponse'
                Features - Bulk Create:
                  $ref: '#/components/examples/BulkOperateFeaturesTaskResponse'
                Lab Automation - Generate Input:
                  $ref: '#/components/examples/AIGGenerateInputTaskResponse'
                Lab Automation - Process Output:
                  $ref: '#/components/examples/AOPProcessOutputTaskResponse'
                RNA Oligos - Bulk Create:
                  $ref: '#/components/examples/BulkOperateRnaOligosTaskResponse'
                RNA Oligos - Bulk Update:
                  $ref: '#/components/examples/BulkOperateRnaOligosTaskResponse'
                RNA Sequences - Auto Annotate:
                  $ref: '#/components/examples/EmptySuccessTaskResponse'
                RNA Sequences - Autofill Parts:
                  $ref: '#/components/examples/EmptySuccessTaskResponse'
                RNA Sequences - Autofill Translations:
                  $ref: '#/components/examples/EmptySuccessTaskResponse'
                RNA Sequences - Bulk Create:
                  $ref: '#/components/examples/BulkOperateRnaSequencesTaskResponse'
                RNA Sequences - Bulk Update:
                  $ref: '#/components/examples/BulkOperateRnaSequencesTaskResponse'
                Registry - Bulk Register Entities:
                  $ref: '#/components/examples/EmptySuccessTaskResponse'
                Task Failed:
                  $ref: '#/components/examples/TaskFailed'
                Task Failed (Bulk):
                  $ref: '#/components/examples/BulkTaskFailed'
                Task Running:
                  $ref: '#/components/examples/TaskRunning'
              schema:
                $ref: '#/components/schemas/getTask_200_response'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: Get a task by id
      tags:
      - Tasks
  /teams:
    get:
      description: |
        Returns all teams that the caller has permission to view. The following roles have view permission:
          - tenant admins
          - members of the team's organization
      operationId: listTeams
      parameters:
      - description: |
          Comma-separated list of ids. Matches all of the provided IDs, or returns a 400 error that includes a list of which IDs are invalid.
        explode: true
        in: query
        name: ids
        required: false
        schema:
          example: "team_ZJy8RTbo,team_8GVbVkPj,team_qREJ33rn"
          type: string
        style: form
      - description: Name of a team. Restricts results to those with the specified
          name.
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Name substring of a team. Restricts results to those with names
          that include the provided substring.
        explode: true
        in: query
        name: nameIncludes
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of names. Restricts results to those that match any of the specified names, case insensitive.  Warning - this filter can be non-performant due to case insensitivity.
        explode: true
        in: query
        name: names.anyOf
        required: false
        schema:
          example: "MyName1,MyName2"
          type: string
        style: form
      - description: |
          Comma-separated list of names. Restricts results to those that match any of the specified names, case sensitive.
        explode: true
        in: query
        name: names.anyOf.caseSensitive
        required: false
        schema:
          example: "MyName1,MyName2"
          type: string
        style: form
      - description: |
          Datetime, in RFC 3339 format. Supports the > and < operators. Time zone defaults to UTC. Restricts results to those modified in the specified range. e.g. > 2017-04-30.
        explode: true
        in: query
        name: modifiedAt
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of entry IDs. Restricts results to teams mentioned in those entries.
        explode: true
        in: query
        name: mentionedIn
        required: false
        schema:
          example: "etr_1X1AlQPD, etr_tv7m7B78"
          type: string
        style: form
      - description: Restricts results to those in the organization.
        explode: true
        in: query
        name: organizationId
        required: false
        schema:
          type: string
        style: form
      - description: Comma-separated list of user or Benchling app IDs. Restricts
          results to teams that include all the given users/apps as members.
        explode: true
        in: query
        name: hasMembers
        required: false
        schema:
          type: string
        style: form
      - description: Comma-separated list of user or Benchling app IDs. Restricts
          results to teams that include all the given users/apps as admins.
        explode: true
        in: query
        name: hasAdmins
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 50
          maximum: 100
          minimum: 0
          nullable: false
          type: integer
        style: form
      - description: Token for pagination
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          default: modifiedAt:desc
          description: |
            Sets the sort-order of the response. Valid sorts are modifiedAt (modified time, most recent first) and name (team name, alphabetical). Optionally add :asc or :desc to specify ascending or descending order.
          enum:
          - modifiedAt
          - modifiedAt:asc
          - modifiedAt:desc
          - name
          - name:asc
          - name:desc
          nullable: false
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamsPaginatedList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: List teams
      tags:
      - Teams
  /teams/{team_id}:
    get:
      description: |
        Returns a team by ID if the caller has permission to view. The following roles have view permission:
          - tenant admins
          - members of the team's organization
      operationId: getTeam
      parameters:
      - description: ID of team to get
        explode: false
        in: path
        name: team_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: Get a team by ID
      tags:
      - Teams
  /token:
    post:
      description: Generate a token
      operationId: generateToken
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenCreate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
          description: Generated token
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthBadRequestError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthUnauthorizedError'
          description: Unauthorized
      security:
      - basicClientIdSecretAuth: []
      summary: Generate a token for usage with authenticating via OAuth2 in subsequent
        API calls.
      tags:
      - Authentication
  /transfers:
    post:
      description: |
        Transfers a volume of an entity, batch, or container into a destination container. Limit of 5000 transfers per request. Concentration of all contents in the destination container will be automatically updated based on the previous volume & concentrations of the contents in that container, the concentration of the contents being transferred in, the volume of the contents being transferred in, and the final volume of the container. If no concentration is specified, the concentration will not be tracked.
      operationId: transferIntoContainers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleContainersTransfersList'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskLink'
          description: |
            This endpoint launches a [long-running task](#/Tasks/getTask) and returns the Task ID of the launched task.
            The task response contains the full list of destination [containers](#/Containers/getContainer).
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Transfers into containers
      tags:
      - Containers
  /users:
    get:
      description: |
        Returns all users that the caller has permission to view. The following roles have view permission:
          - tenant admins
          - members of the user's organizations
      operationId: listUsers
      parameters:
      - description: |
          Comma-separated list of ids. Matches all of the provided IDs, or returns a 400 error that includes a list of which IDs are invalid.
        explode: true
        in: query
        name: ids
        required: false
        schema:
          example: "ent_ZJy8RTbo,ent_8GVbVkPj,ent_qREJ33rn"
          type: string
        style: form
      - description: Name of a user. Restricts results to those with the specified
          name.
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Name substring of a user. Restricts results to those with names
          that include the provided substring.
        explode: true
        in: query
        name: nameIncludes
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of names. Restricts results to those that match any of the specified names, case insensitive.  Warning - this filter can be non-performant due to case insensitivity.
        explode: true
        in: query
        name: names.anyOf
        required: false
        schema:
          example: "MyName1,MyName2"
          type: string
        style: form
      - description: |
          Comma-separated list of names. Restricts results to those that match any of the specified names, case sensitive.
        explode: true
        in: query
        name: names.anyOf.caseSensitive
        required: false
        schema:
          example: "MyName1,MyName2"
          type: string
        style: form
      - description: |
          Datetime, in RFC 3339 format. Supports the > and < operators. Time zone defaults to UTC. Restricts results to those modified in the specified range. e.g. > 2017-04-30.
        explode: true
        in: query
        name: modifiedAt
        required: false
        schema:
          type: string
        style: form
      - description: Comma-separated list of organization and/or team API IDs. Restricts
          results to users that are members of all given groups.
        explode: true
        in: query
        name: memberOf
        required: false
        schema:
          type: string
        style: form
      - description: Comma-separated list of organization and/or team API IDs. Restricts
          results to users that are admins of all given groups.
        explode: true
        in: query
        name: adminOf
        required: false
        schema:
          type: string
        style: form
      - description: Comma-separated list of handles. Restricts results to the users
          with the specified handles.
        explode: true
        in: query
        name: handles
        required: false
        schema:
          type: string
        style: form
      - description: |
          Datetime, in RFC 3339 format. Supports the >, >=, <, <=, operators. Time zone defaults to UTC. Restricts results to users who have last changed their password in the specified range. e.g. > 2017-04-30. If "null" is provided returns users that have no password set (SAML).
        explode: true
        in: query
        name: passwordLastChangedAt
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 50
          maximum: 100
          minimum: 0
          nullable: false
          type: integer
        style: form
      - description: Token for pagination
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          default: modifiedAt:desc
          description: |
            Sets the sort-order of the response. Valid sorts are modifiedAt (modified time, most recent first) and name (user name, alphabetical). Optionally add :asc or :desc to specify ascending or descending order.
          enum:
          - modifiedAt
          - modifiedAt:asc
          - modifiedAt:desc
          - name
          - name:asc
          - name:desc
          nullable: false
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersPaginatedList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: List users
      tags:
      - Users
  /users/{user_id}:
    get:
      description: |
        Returns a user by ID if the caller has permission to view. The following roles have view permission:
          - tenant admins
          - members of any of the user's organizations
      operationId: getUser
      parameters:
      - description: ID of user to get
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: Get a user by ID
      tags:
      - Users
  /warehouse-credentials:
    post:
      description: |
        Allows for programmatically generating credentials to connect to the Benchling warehouse. You must have a warehouse configured to access this endpoint.
        The credentials will authenticate as the same user calling the API.
        Note that expiresIn is required - only temporary credentials are currently allowed.
      operationId: createWarehouseCredentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WarehouseCredentialsCreate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WarehouseCredentials'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Create Benchling Warehouse credentials
      tags:
      - Warehouse
  /workflow-outputs:
    get:
      description: List workflow outputs
      operationId: listWorkflowOutputs
      parameters:
      - description: Comma separated list of workflow output IDs
        explode: true
        in: query
        name: ids
        required: false
        schema:
          example: "wfout_5cJLQKVF,wfout_9jENXd3t"
          type: string
        style: form
      - description: Comma separated list of workflow IDs
        explode: true
        in: query
        name: workflowTaskGroupIds
        required: false
        schema:
          example: "prs_giVNQcTL,prst6m99v1"
          type: string
        style: form
      - description: Comma separated list of workflow task IDs
        explode: true
        in: query
        name: workflowTaskIds
        required: false
        schema:
          example: "wftask_OnnsW08k,wftask_4ejSW7en"
          type: string
        style: form
      - description: The ID of the workflow task schema of the workflow output
        explode: true
        in: query
        name: schemaId
        required: false
        schema:
          example: prstsch_KnR9iVum
          type: string
        style: form
      - description: Comma separated list of user IDs or "null"
        explode: true
        in: query
        name: watcherIds
        required: false
        schema:
          example: "ent_a0SApq3z,ent_asdf72354,null"
          type: string
        style: form
      - description: Comma separated list of team IDs or "null"
        explode: true
        in: query
        name: responsibleTeamIds
        required: false
        schema:
          example: "team_Thepp2c7,team_QqHMbfqK,null"
          type: string
        style: form
      - description: Comma separated list of entry IDs
        explode: true
        in: query
        name: creationOriginIds
        required: false
        schema:
          example: "etr_d00c97,etr_30ad79"
          type: string
        style: form
      - description: |
          Comma separated list of bioentity or storable IDs. Returns workflow outputs where the output's schema fields reference at least one of the provided items.
        explode: true
        in: query
        name: linkedItemIds.anyOf
        required: false
        schema:
          example: "bfi_ed1ef7,con_1c76c9"
          type: string
        style: form
      - description: |
          Comma separated list of bioentity or storable IDs. Returns workflow outputs where the output's schema fields reference all of the provided items.
        explode: true
        in: query
        name: linkedItemIds.allOf
        required: false
        schema:
          example: "bfi_ed1ef7,con_1c76c9"
          type: string
        style: form
      - description: |
          Comma separated list of bioentity or storable IDs. Returns workflow outputs where the output's schema fields do not reference any of the provided items.
        explode: true
        in: query
        name: linkedItemIds.noneOf
        required: false
        schema:
          example: "bfi_ed1ef7,con_1c76c9"
          type: string
        style: form
      - description: |
          Schema field value. For Integer, Float, and Date type fields, supports the >= and <= operators. If present, the schemaId param must also be present. Restricts results to those with a field of whose value matches the filter.
        explode: true
        in: query
        name: schemaFields
        required: false
        schema:
          $ref: '#/components/schemas/SchemaFieldsQueryParam'
        style: form
      - description: The name of the workflow task
        explode: true
        in: query
        name: name
        required: false
        schema:
          example: PR-1
          type: string
        style: form
      - description: Part of the name of the workflow task
        explode: true
        in: query
        name: nameIncludes
        required: false
        schema:
          example: PR
          type: string
        style: form
      - description: Comma separated list of user IDs.
        explode: true
        in: query
        name: creatorIds
        required: false
        schema:
          example: ent_a0SApq3z
          type: string
        style: form
      - description: |
          Datetime, in RFC 3339 format. Supports the > and < operators. Time zone defaults to UTC. Restricts results to those modified in the specified range. e.g. > 2017-04-30.
        explode: true
        in: query
        name: modifiedAt
        required: false
        schema:
          example: '> 2021-02-04T18:53:36Z'
          type: string
        style: form
      - example: Im5ldyB0ZXN0Ig==
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 50
          maximum: 100
          minimum: 0
          nullable: false
          type: integer
        style: form
      - description: Comma-separated list of Workflow Output Display IDs.
        explode: true
        in: query
        name: displayIds
        required: false
        schema:
          example: "ANG1-O1,ANG1-O2"
          type: string
        style: form
      - description: |
          Archive reason. Restricts items to those with the specified archive reason. Use "NOT_ARCHIVED" to filter for unarchived workflow outputs. Use "ANY_ARCHIVED" to filter for archived workflow outputs regardless of reason. Use "ANY_ARCHIVED_OR_NOT_ARCHIVED" to return items for both archived and unarchived.
        examples:
          "1_not_archived":
            summary: Only include unarchived items (default).
            value: NOT_ARCHIVED
          "2_archived_reason":
            summary: Includes items archived for a specific reason.
            value: RETIRED
          "3_any_archived":
            summary: Includes items archived for any reason.
            value: ANY_ARCHIVED
          "4_any_archived_or_not_archived":
            summary: Includes both archived and unarchived items.
            value: ANY_ARCHIVED_OR_NOT_ARCHIVED
        explode: true
        in: query
        name: archiveReason
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowOutputsPaginatedList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad request
      summary: List workflow outputs
      tags:
      - Workflow Outputs
    post:
      description: Create a new workflow output
      operationId: createWorkflowOutput
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowOutputCreate'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowOutput'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad request
      summary: Create a new workflow output
      tags:
      - Workflow Outputs
  /workflow-outputs/{workflow_output_id}:
    get:
      description: Get a workflow output
      operationId: getWorkflowOutput
      parameters:
      - description: The ID of the workflow task output
        explode: false
        in: path
        name: workflow_output_id
        required: true
        schema:
          example: wfout_5cJLQKVF
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowOutput'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not found
      summary: Get a workflow output
      tags:
      - Workflow Outputs
    patch:
      description: Update a workflow output
      operationId: updateWorkflowOutput
      parameters:
      - description: The ID of the workflow output
        explode: false
        in: path
        name: workflow_output_id
        required: true
        schema:
          example: wfout_5cJLQKVF
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowOutputUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowOutput'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not found
      summary: Update a workflow output
      tags:
      - Workflow Outputs
  /workflow-outputs:archive:
    post:
      description: Archive one or more workflow outputs
      operationId: archiveWorkflowOutputs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowOutputsArchive'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowOutputsArchivalChange'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad request
      summary: Archive one or more workflow outputs
      tags:
      - Workflow Outputs
  /workflow-outputs:bulk-create:
    post:
      description: Bulk create new workflow outputs
      operationId: bulkCreateWorkflowOutputs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowOutputsBulkCreateRequest'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskLink'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad request
      summary: Bulk create new workflow outputs
      tags:
      - Workflow Outputs
  /workflow-outputs:bulk-update:
    post:
      description: Bulk update workflow outputs
      operationId: bulkUpdateWorkflowOutputs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowOutputsBulkUpdateRequest'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskLink'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad request
      summary: Bulk update workflow outputs
      tags:
      - Workflow Outputs
  /workflow-outputs:unarchive:
    post:
      description: Unarchive one or more workflow outputs
      operationId: unarchiveWorkflowOutputs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowOutputsUnarchive'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowOutputsArchivalChange'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad request
      summary: Unarchive one or more workflow outputs
      tags:
      - Workflow Outputs
  /workflow-stage-runs/{stage_run_id}/input-samples:
    get:
      deprecated: true
      description: List stage run input samples
      operationId: listStageRunInputSamples
      parameters:
      - description: ID of the stage run to list input samples for
        explode: false
        in: path
        name: stage_run_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowSampleList'
          description: OK
      summary: List stage run input samples
      tags:
      - Legacy Workflows (deprecated)
  /workflow-stage-runs/{stage_run_id}/output-samples:
    get:
      deprecated: true
      description: List stage run output samples
      operationId: listStageRunOutputSamples
      parameters:
      - description: ID of the stage run to list output samples for
        explode: false
        in: path
        name: stage_run_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowSampleList'
          description: OK
      summary: List stage run output samples
      tags:
      - Legacy Workflows (deprecated)
  /workflow-stage-runs/{stage_run_id}/registered-samples:
    get:
      deprecated: true
      description: List stage run registered samples
      operationId: listStageRunRegisteredSamples
      parameters:
      - description: ID of the stage run to list registered samples for
        explode: false
        in: path
        name: stage_run_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowSampleList'
          description: OK
      summary: List stage run registered samples
      tags:
      - Legacy Workflows (deprecated)
  /workflow-stages/{stage_id}/workflow-stage-runs:
    get:
      deprecated: true
      description: List workflow stage runs
      operationId: listWorkflowStageRuns
      parameters:
      - description: ID of the workflow stage to list runs for
        explode: false
        in: path
        name: stage_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowStageRunList'
          description: OK
      summary: List workflow stage runs
      tags:
      - Legacy Workflows (deprecated)
  /workflow-task-groups:
    get:
      description: List workflow task groups
      operationId: listWorkflowTaskGroups
      parameters:
      - description: Comma separated list of workflow task group IDs
        explode: true
        in: query
        name: ids
        required: false
        schema:
          example: "prs_giVNQcTL,prs_t6m99v1"
          type: string
        style: form
      - description: The workflow task schema ID of tasks in this task group
        explode: true
        in: query
        name: schemaId
        required: false
        schema:
          example: "prstsch_KnR9iVum,prstsch_nJ34lw9y"
          type: string
        style: form
      - description: A folder ID
        explode: true
        in: query
        name: folderId
        required: false
        schema:
          example: lib_bf0636
          type: string
        style: form
      - description: A project ID
        explode: true
        in: query
        name: projectId
        required: false
        schema:
          example: src_NetYd96a
          type: string
        style: form
      - description: A comma separated list entry IDs
        explode: true
        in: query
        name: mentionedIn
        required: false
        schema:
          example: "etr_30ad79,etr_d00c97"
          type: string
        style: form
      - description: Comma separated list of user IDs or "null"
        explode: true
        in: query
        name: watcherIds
        required: false
        schema:
          example: "ent_a0SApq3z,ent_asdf72354,null"
          type: string
        style: form
      - description: |
          Comma separated list of workflow execution types. Acceptable execution types are "DIRECT" and "ENTRY"
        explode: true
        in: query
        name: executionTypes
        required: false
        schema:
          example: "ENTRY,DIRECT"
          type: string
        style: form
      - description: Comma separated list of team IDs or "null"
        explode: true
        in: query
        name: responsibleTeamIds
        required: false
        schema:
          example: "team_Thepp2c7,team_QqHMbfqK,null"
          type: string
        style: form
      - description: Commas separated list of Status ids. Returns workflows where
          at least one task is of one of the provided statuses.
        explode: true
        in: query
        name: statusIds.anyOf
        required: false
        schema:
          example: "wfts_VFvwv7JV,wfts_wQzUCsW0"
          type: string
        style: form
      - description: Commas separated list of Status ids. Returns workflows where
          none of the tasks are of any of the provided statuses.
        explode: true
        in: query
        name: statusIds.noneOf
        required: false
        schema:
          example: "wfts_VFvwv7JV,wfts_wQzUCsW0"
          type: string
        style: form
      - description: Commas separated list of Status ids. Returns workflows where
          all of the tasks are of one of the provided statuses.
        explode: true
        in: query
        name: statusIds.only
        required: false
        schema:
          example: "wfts_VFvwv7JV,wfts_wQzUCsW0"
          type: string
        style: form
      - description: The name of the workflow task group
        explode: true
        in: query
        name: name
        required: false
        schema:
          example: Plasmid Transformation
          type: string
        style: form
      - description: Part of the name of the workflow task group
        explode: true
        in: query
        name: nameIncludes
        required: false
        schema:
          example: Plasmid
          type: string
        style: form
      - description: Comma separated list of user IDs.
        explode: true
        in: query
        name: creatorIds
        required: false
        schema:
          example: ent_a0SApq3z
          type: string
        style: form
      - description: |
          Datetime, in RFC 3339 format. Supports the > and < operators. Time zone defaults to UTC. Restricts results to those modified in the specified range. e.g. > 2017-04-30.
        explode: true
        in: query
        name: modifiedAt
        required: false
        schema:
          example: '> 2021-02-04T18:53:36Z'
          type: string
        style: form
      - example: Im5ldyB0ZXN0Ig==
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 50
          maximum: 100
          minimum: 0
          nullable: false
          type: integer
        style: form
      - description: Comma-separated list of Workflow Display IDs.
        explode: true
        in: query
        name: displayIds
        required: false
        schema:
          example: "VPR001,VPR002"
          type: string
        style: form
      - description: |
          Archive reason. Restricts items to those with the specified archive reason. Use "NOT_ARCHIVED" to filter for unarchived workflow task groups. Use "ANY_ARCHIVED" to filter for archived workflow task groups regardless of reason. Use "ANY_ARCHIVED_OR_NOT_ARCHIVED" to return items for both archived and unarchived.
        examples:
          "1_not_archived":
            summary: Only include unarchived items (default).
            value: NOT_ARCHIVED
          "2_archived_reason":
            summary: Includes items archived for a specific reason.
            value: RETIRED
          "3_any_archived":
            summary: Includes items archived for any reason.
            value: ANY_ARCHIVED
          "4_any_archived_or_not_archived":
            summary: Includes both archived and unarchived items.
            value: ANY_ARCHIVED_OR_NOT_ARCHIVED
        explode: true
        in: query
        name: archiveReason
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowTaskGroupsPaginatedList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad request
      summary: List workflow task groups
      tags:
      - Workflow Task Groups
    post:
      description: "Create a new workflow task group. If no name is specified, uses\
        \ the workflow schema name and a unique incrementor separated by a single\
        \ whitespace."
      operationId: createWorkflowTaskGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowTaskGroupCreate'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowTaskGroup'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad request
      summary: Create a new workflow task group
      tags:
      - Workflow Task Groups
  /workflow-task-groups/{workflow_task_group_id}:
    get:
      description: Get a workflow task group
      operationId: getWorkflowTaskGroup
      parameters:
      - description: The ID of the workflow task group
        explode: false
        in: path
        name: workflow_task_group_id
        required: true
        schema:
          example: prs_giVNQcTL
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowTaskGroup'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not found
      summary: Get a workflow task group
      tags:
      - Workflow Task Groups
    patch:
      description: Update a workflow task group
      operationId: updateWorkflowTaskGroup
      parameters:
      - description: The ID of the workflow task group
        explode: false
        in: path
        name: workflow_task_group_id
        required: true
        schema:
          example: prs_giVNQcTL
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowTaskGroupUpdate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowTaskGroup'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not found
      summary: Update a workflow task group
      tags:
      - Workflow Task Groups
  /workflow-task-groups:archive:
    post:
      description: Archive one or more workflows
      operationId: archiveWorkflowTaskGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowTaskGroupsArchive'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowTaskGroupsArchivalChange'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad request
      summary: Archive one or more workflows
      tags:
      - Workflow Task Groups
  /workflow-task-groups:unarchive:
    post:
      description: Unarchive one or more workflows
      operationId: unarchiveWorkflowTaskGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowTaskGroupsUnarchive'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowTaskGroupsArchivalChange'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad request
      summary: Unarchive one or more workflows
      tags:
      - Workflow Task Groups
  /workflow-task-schemas:
    get:
      description: List workflow task schemas
      operationId: listWorkflowTaskSchemas
      parameters:
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 50
          maximum: 100
          minimum: 0
          nullable: false
          type: integer
        style: form
      - description: |
          Datetime, in RFC 3339 format. Supports the > and < operators. Time zone defaults to UTC. Restricts results to those modified in the specified range. e.g. > 2017-04-30.
        explode: true
        in: query
        name: modifiedAt
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowTaskSchemasPaginatedList'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not found
      summary: List workflow task schemas
      tags:
      - Schemas
  /workflow-task-schemas/{schema_id}:
    get:
      description: Get a workflow task schema
      operationId: getWorkflowTaskSchema
      parameters:
      - description: The workflow task schema ID
        explode: false
        in: path
        name: schema_id
        required: true
        schema:
          example: prstsch_KnR9iVum
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowTaskSchema'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not found
      summary: Get a workflow task schema
      tags:
      - Schemas
  /workflow-tasks:
    get:
      description: List workflow tasks
      operationId: listWorkflowTasks
      parameters:
      - description: Comma separated list of workflow task IDs
        explode: true
        in: query
        name: ids
        required: false
        schema:
          example: "wftask_OnnsW08k,wftask_4ejSW7en"
          type: string
        style: form
      - description: Comma separated list of workflow IDs
        explode: true
        in: query
        name: workflowTaskGroupIds
        required: false
        schema:
          example: "prs_giVNQcTL,prs_t6m99v1"
          type: string
        style: form
      - description: The ID of the workflow task schema of the workflow task
        explode: true
        in: query
        name: schemaId
        required: false
        schema:
          example: prstsch_KnR9iVum
          type: string
        style: form
      - description: Comma separated list of workflow task status ids
        explode: true
        in: query
        name: statusIds
        required: false
        schema:
          example: "wfts_wQzUCsW0,wfts_VFvwv7JV"
          type: string
        style: form
      - description: Comma separated list of user ids or "null"
        explode: true
        in: query
        name: assigneeIds
        required: false
        schema:
          example: "ent_a0SApq3z,null"
          type: string
        style: form
      - description: Comma separated list of user IDs or "null"
        explode: true
        in: query
        name: watcherIds
        required: false
        schema:
          example: "ent_a0SApq3z,ent_asdf72354,null"
          type: string
        style: form
      - description: Comma separated list of team IDs or "null"
        explode: true
        in: query
        name: responsibleTeamIds
        required: false
        schema:
          example: "team_Thepp2c7,team_QqHMbfqK,null"
          type: string
        style: form
      - description: Comma separated list of entry IDs
        explode: true
        in: query
        name: executionOriginIds
        required: false
        schema:
          example: "etr_d00c97,etr_30ad79"
          type: string
        style: form
      - description: |
          Comma separated list of workflow execution types. Acceptable execution types are "DIRECT" and "ENTRY"
        explode: true
        in: query
        name: executionTypes
        required: false
        schema:
          example: "ENTRY,DIRECT"
          type: string
        style: form
      - description: |
          Comma separated list of bioentity or storable IDs. Returns workflow tasks where the task's schema fields reference at least one of the provided items.
        explode: true
        in: query
        name: linkedItemIds.anyOf
        required: false
        schema:
          example: "bfi_ed1ef7,con_1c76c9"
          type: string
        style: form
      - description: |
          Comma separated list of bioentity or storable IDs. Returns workflow tasks where the task's schema fields reference all of the provided items.
        explode: true
        in: query
        name: linkedItemIds.allOf
        required: false
        schema:
          example: "bfi_ed1ef7,con_1c76c9"
          type: string
        style: form
      - description: |
          Comma separated list of bioentity or storable IDs. Returns workflow tasks where the task's schema fields do not reference any of the provided items.
        explode: true
        in: query
        name: linkedItemIds.noneOf
        required: false
        schema:
          example: "bfi_ed1ef7,con_1c76c9"
          type: string
        style: form
      - description: |
          Schema field value. For Integer, Float, and Date type fields, supports the >= and <= operators. If present, the schemaId param must also be present. Restricts results to those with a field of whose value matches the filter.
        explode: true
        in: query
        name: schemaFields
        required: false
        schema:
          $ref: '#/components/schemas/SchemaFieldsQueryParam'
        style: form
      - description: The name of the workflow task
        explode: true
        in: query
        name: name
        required: false
        schema:
          example: PR-1
          type: string
        style: form
      - description: Part of the name of the workflow task
        explode: true
        in: query
        name: nameIncludes
        required: false
        schema:
          example: PR
          type: string
        style: form
      - description: Comma separated list of user IDs.
        explode: true
        in: query
        name: creatorIds
        required: false
        schema:
          example: ent_a0SApq3z
          type: string
        style: form
      - description: |
          The date on which the task was scheduled to be executed. Returns tasks which are scheduled on the provided date. If "null" is provided returns tasks which are unshceduled.
        explode: true
        in: query
        name: scheduledOn
        required: false
        schema:
          $ref: '#/components/schemas/listWorkflowTasks_scheduledOn_parameter'
        style: form
      - description: |
          The date on which the task was scheduled to be executed. Returns tasks which are scheduled before the provided date.
        explode: true
        in: query
        name: scheduledOn.lt
        required: false
        schema:
          example: 2020-01-01
          format: date
          type: string
        style: form
      - description: |
          The date on which the task was scheduled to be executed. Returns tasks which are scheduled before or on the provided date.
        explode: true
        in: query
        name: scheduledOn.lte
        required: false
        schema:
          example: 2020-01-01
          format: date
          type: string
        style: form
      - description: |
          The date on which the task was scheduled to be executed. Returns tasks which are scheduled on or after the provided date.
        explode: true
        in: query
        name: scheduledOn.gte
        required: false
        schema:
          example: 2020-01-01
          format: date
          type: string
        style: form
      - description: |
          The date on which the task was scheduled to be executed. Returns tasks which are scheduled after the provided date.
        explode: true
        in: query
        name: scheduledOn.gt
        required: false
        schema:
          example: 2020-01-01
          format: date
          type: string
        style: form
      - description: |
          Datetime, in RFC 3339 format. Supports the > and < operators. Time zone defaults to UTC. Restricts results to those modified in the specified range. e.g. > 2017-04-30.
        explode: true
        in: query
        name: modifiedAt
        required: false
        schema:
          example: '> 2021-02-04T18:53:36Z'
          type: string
        style: form
      - example: Im5ldyB0ZXN0Ig==
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 50
          maximum: 100
          minimum: 0
          nullable: false
          type: integer
        style: form
      - description: Comma-separated list of Workflow Task Display IDs.
        explode: true
        in: query
        name: displayIds
        required: false
        schema:
          example: "ANG1-T1,ANG1-T2"
          type: string
        style: form
      - description: |
          Archive reason. Restricts items to those with the specified archive reason. Use "NOT_ARCHIVED" to filter for unarchived workflow tasks. Use "ANY_ARCHIVED" to filter for archived workflow tasks regardless of reason. Use "ANY_ARCHIVED_OR_NOT_ARCHIVED" to return items for both archived and unarchived.
        examples:
          "1_not_archived":
            summary: Only include unarchived items (default).
            value: NOT_ARCHIVED
          "2_archived_reason":
            summary: Includes items archived for a specific reason.
            value: RETIRED
          "3_any_archived":
            summary: Includes items archived for any reason.
            value: ANY_ARCHIVED
          "4_any_archived_or_not_archived":
            summary: Includes both archived and unarchived items.
            value: ANY_ARCHIVED_OR_NOT_ARCHIVED
        explode: true
        in: query
        name: archiveReason
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowTasksPaginatedList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad request
      summary: List workflow tasks
      tags:
      - Workflow Tasks
    post:
      description: Create a new workflow task
      operationId: createWorkflowTask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowTaskCreate'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowTask'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad request
      summary: Create a new workflow task
      tags:
      - Workflow Tasks
  /workflow-tasks/{workflow_task_id}:
    get:
      description: Get a workflow task
      operationId: getWorkflowTask
      parameters:
      - description: The ID of the workflow task
        explode: false
        in: path
        name: workflow_task_id
        required: true
        schema:
          example: wftask_OnnsW08k
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowTask'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not found
      summary: Get a workflow task
      tags:
      - Workflow Tasks
    patch:
      description: Update a workflow task
      operationId: updateWorkflowTask
      parameters:
      - description: The ID of the workflow task
        explode: false
        in: path
        name: workflow_task_id
        required: true
        schema:
          example: wftask_OnnsW08k
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowTaskUpdate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowTask'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not found
      summary: Update a workflow task
      tags:
      - Workflow Tasks
  /workflow-tasks/{workflow_task_id}:copy:
    post:
      description: Creates a new workflow task based on the provided task
      operationId: copyWorkflowTask
      parameters:
      - description: The ID of the workflow task
        explode: false
        in: path
        name: workflow_task_id
        required: true
        schema:
          example: wftask_OnnsW08k
          type: string
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowTask'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not found
      summary: |
        Creates a new workflow task with the same fields and assignee as the provided task and creates a relationship between the two tasks
      tags:
      - Workflow Tasks
  /workflow-tasks:archive:
    post:
      description: Archive one or more workflow tasks
      operationId: archiveWorkflowTasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowTasksArchive'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowTasksArchivalChange'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad request
      summary: Archive one or more workflow tasks
      tags:
      - Workflow Tasks
  /workflow-tasks:bulk-copy:
    post:
      description: Bulk creates new workflow tasks based on the provided tasks
      operationId: bulkCopyWorkflowTasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowTasksBulkCopyRequest'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskLink'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad request
      summary: |
        Bulk creates new workflow tasks where each new task has the same fields and assignee as one of the provided tasks and creates a relationship between the provided task and its copy
      tags:
      - Workflow Tasks
  /workflow-tasks:bulk-create:
    post:
      description: Create one or more workflow tasks
      operationId: bulkCreateWorkflowTasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowTasksBulkCreateRequest'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskLink'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad request
      summary: Create one or more workflow tasks
      tags:
      - Workflow Tasks
  /workflow-tasks:bulk-update:
    post:
      description: Update one or more workflow tasks
      operationId: bulkUpdateWorkflowTasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowTasksBulkUpdateRequest'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskLink'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad request
      summary: Update one or more workflow task
      tags:
      - Workflow Tasks
  /workflow-tasks:unarchive:
    post:
      description: Unarchive one or more workflow tasks
      operationId: unarchiveWorkflowTasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowTasksUnarchive'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowTasksArchivalChange'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad request
      summary: Unarchive one or more workflow tasks
      tags:
      - Workflow Tasks
  /workflows:
    get:
      deprecated: true
      description: List workflows
      operationId: listWorkflows
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowList'
          description: OK
      summary: List workflows
      tags:
      - Legacy Workflows (deprecated)
  /workflows/{workflow_id}:
    patch:
      deprecated: true
      description: Update workflow metadata
      operationId: UpdateWorkflowMetadata
      parameters:
      - description: ID of the workflow to update
        explode: false
        in: path
        name: workflow_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowPatch'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegacyWorkflow'
          description: OK
      summary: Update workflow
      tags:
      - Legacy Workflows (deprecated)
  /workflows/{workflow_id}/workflow-stages:
    get:
      deprecated: true
      description: List workflow stages
      operationId: listWorkflowStages
      parameters:
      - description: ID of the workflow to list stages for
        explode: false
        in: path
        name: workflow_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowStageList'
          description: OK
      summary: List workflow stages
      tags:
      - Legacy Workflows (deprecated)
components:
  examples:
    AIGGenerateInputTaskResponse:
      value:
        response:
          apiURL: https://benchling.com/api/v2/automation-input-generators/aif_C3wGA9HF
          assayRunId: 588aca02-1a20-4b94-a40f-b3f3a0081749
          automationFileConfig:
            name: MyInstrumentName
          file:
            id: c33fe52d-fe6a-4c98-adcd-211bdf6778f7
            mimeType: text/csv
            name: MyInstrumentInputFile.csv
            type: RAW_FILE
            uploadStatus: IN_PROGRESS
          id: aif_C3wGA9HF
          status: SUCCEEDED
        status: SUCCEEDED
    AOPProcessOutputTaskResponse:
      value:
        response:
          apiURL: https://benchling.com/api/v2/automation-output-processors/aop_C3wGA9HF
          archiveRecord:
            reason: Made in error
          assayRunId: 588aca02-1a20-4b94-a40f-b3f3a0081749
          automationFileConfig:
            name: MyInstrumentName
          file:
            id: c33fe52d-fe6a-4c98-adcd-211bdf6778f7
            mimeType: text/csv
            name: MyInstrumentInputFile.csv
            type: RAW_FILE
            uploadStatus: IN_PROGRESS
          id: aop_C3wGA9HF
          status: SUCCEEDED
        status: SUCCEEDED
    AaSequencesFindMatchingRegionTaskResponse:
      value:
        response:
          aaSequenceMatches:
          - matchingAASequenceIds:
            - prtn_TIIi7lto
            - prtn_0qTaIIDE
            targetAASequenceId: prtn_W1Qh8teE
        status: SUCCEEDED
    BulkOperateAaSequencesTaskResponse:
      value:
        response:
          aaSequences:
          - aliases:
            - Example alias
            aminoAcids: IKTATARRELAETSWTGDRLWGFSDNWAPALRRPSPSALGK
            annotations:
            - color: '#85DAE9'
              end: 10
              id: prtnann_o7zMPG0P
              name: Example annotation
              start: 0
            apiURL: https://benchling.com/api/v2/aa-sequences/prtn_7nMBOMm0
            archiveRecord:
              reason: Made in error
            createdAt: 2021-07-14T07:34:25.156Z
            creator:
              handle: lpasteur
              id: ent_a0SApq3z
              name: Louis Pasteur
            customFields:
              Legacy ID:
                value: STR100
            entityRegistryId: sBN000
            fields:
              additionalProp1:
                displayValue: Amp
                isMulti: true
                textValue: Amp
                type: dna_sequence_link
                value:
                - seq_jdf8BV24
            folderId: lib_mrZWMrft
            id: prtn_ObbdtGhC
            length: 0
            modifiedAt: 2021-07-14T07:34:25.157Z
            name: Example AA Sequence
            registrationOrigin:
              originEntryId: etr_3wievUIJ
              registeredAt: 2021-07-14T07:34:25.157Z
            registryId: src_NetYd96a
            schema:
              id: ts_DaiFhsNA
              name: Example Schema
            webURL: https://benchling.com/benchling/f/lib_55UxcIps-registry/prtn_7nMBOMm0-kedchain11/edit"
        status: SUCCEEDED
    BulkOperateContainersTaskResponse:
      value:
        response:
          containers:
          - archiveRecord:
              reason: Made in error
            barcode: 201006-005
            checkoutRecord:
              assignee:
                handle: lpasteur
                id: ent_a0SApq3z
                name: Louis Pasteur
              comment: Example comment
              modifiedAt: 2021-07-14T12:27:27.917Z
              status: AVAILABLE
            contents:
            - batch:
                archiveRecord:
                  reason: Made in error
                createdAt: 2021-07-14T12:27:27.917Z
                creator:
                  handle: lpasteur
                  id: ent_a0SApq3z
                  name: Louis Pasteur
                entity:
                  aliases:
                  - Example alias
                  annotations: []
                  apiURL: https://benchling.com/api/v2/dna-sequences/seq_asQya4lk
                  archiveRecord:
                    reason: Made in error
                  bases: GTAGCAAAGANTAGTAGCCAGCTGTGATAAATGTCAGCTAAAAGGGGAAGCCATG
                  createdAt: 2021-07-14T12:27:27.917Z
                  creator:
                    handle: lpasteur
                    id: ent_a0SApq3z
                    name: Louis Pasteur
                  customFields:
                    Legacy ID:
                      value: STR100
                  entityRegistryId: sBN000
                  fields:
                    additionalProp1:
                      displayValue: Amp
                      isMulti: true
                      textValue: Amp
                      type: dna_sequence_link
                      value:
                      - seq_jdf8BV24
                  folderId: lib_hBHqKbzE
                  id: seq_bhuDUw9D
                  isCircular: true
                  length: 0
                  modifiedAt: 2021-07-14T12:27:27.917Z
                  name: Example entity
                  primers: []
                  registrationOrigin:
                    originEntryId: etr_3wievUIJ
                    registeredAt: 2021-07-14T07:34:25.157Z
                  registryId: src_NetYd96a
                  schema:
                    id: ts_DaiFhsNA
                    name: Example Schema
                  translations: []
                  webURL: https://benchling.com/benchling/f/lib_hBHqKbzE-seqs/seq_bhuDUw9D-example-entity/edit
                fields:
                  additionalProp1:
                    displayValue: Amp
                    isMulti: true
                    textValue: Amp
                    type: dna_sequence_link
                    value:
                    - seq_jdf8BV24
                id: bat_UOIr8IjL
                modifiedAt: 2021-07-14T12:27:27.917Z
                name: Example Batch
                schema:
                  id: ts_DaiFhsNA
                  name: Example Schema
                webURL: https://benchling.com/benchling/f/lib_55UxcIps-registry/bfi_YtegMKkT-batch-test/edit
              concentration:
                units: uM
                value: 5
              entity:
                aliases:
                - Example alias
                annotations: []
                apiURL: https://benchling.com/api/v2/dna-sequences/seq_asQya4lk
                archiveRecord:
                  reason: Made in error
                bases: GTAGCAAAGANTAGTAGCCAGCTGTGATAAATGTCAGCTAAAAGGGGAAGCCATG
                createdAt: 2021-07-14T12:27:27.917Z
                creator:
                  handle: lpasteur
                  id: ent_a0SApq3z
                  name: Louis Pasteur
                customFields:
                  Legacy ID:
                    value: STR100
                entityRegistryId: sBN000
                fields:
                  additionalProp1:
                    displayValue: Amp
                    isMulti: true
                    textValue: Amp
                    type: dna_sequence_link
                    value:
                    - seq_jdf8BV24
                folderId: lib_mrZWMrft
                id: seq_bhuDUw9D
                isCircular: true
                length: 0
                modifiedAt: 2021-07-14T12:27:27.917Z
                name: Example entity
                primers: []
                registrationOrigin:
                  originEntryId: etr_3wievUIJ
                  registeredAt: 2021-07-14T07:34:25.157Z
                registryId: src_NetYd96a
                schema:
                  id: ts_DaiFhsNA
                  name: Example Schema
                translations: []
                webURL: https://benchling.com/benchling/f/lib_hBHqKbzE-seqs/seq_bhuDUw9D-example-entity/edit
            createdAt": 2021-07-14T12:27:27.917Z
            creator:
              handle: lpasteur
              id: ent_a0SApq3z
              name: Louis Pasteur
            fields:
              additionalProp1:
                displayValue: Amp
                isMulti: true
                textValue: Amp
                type: dna_sequence_link
                value:
                - seq_jdf8BV24
            id: con_ZBL9QQWD
            modifiedAt: 2021-07-14T12:27:27.917Z
            name: Example container
            parentStorageId: loc_MmtNUQIA
            parentStorageSchema:
              id: locsch_ToRk7Elm
              name: Building
            projectId: src_1m4443Ek
            quantity:
              units: mL
              value: 10
            schema:
              id: ts_DaiFhsNA
              name: Example Schema
            volume:
              units: mL
              value: 10
            webURL: https://benchling.com/samples/containers/con_FzQ1stz9
        status: SUCCEEDED
    BulkOperateCustomEntitiesTaskResponse:
      value:
        response:
          customEntities:
          - aliases:
            - sBN000
            apiURL: https://benchling.com/api/v2/custom-entities/bfi_xCUXNVyG
            archiveRecord:
              reason: Made in error
            authors:
            - handle: lpasteur
              id: ent_a0SApq3z
              name: Louis Pasteur
            createdAt: 2021-07-14T07:34:25.156Z
            creator:
              handle: lpasteur
              id: ent_a0SApq3z
              name: Louis Pasteur
            customFields:
              Legacy ID:
                value: STR100
            entityRegistryId: sBN000
            fields:
              additionalProp1:
                displayValue: Amp
                isMulti: true
                textValue: Amp
                type: dna_sequence_link
                value:
                - seq_jdf8BV24
            folderId: lib_mrZWMrft
            id: prtn_ObbdtGhC
            modifiedAt: 2021-07-14T07:34:25.157Z
            name: sBN000
            registrationOrigin:
              originEntryId: etr_3wievUIJ
              registeredAt: 2021-07-14T07:34:25.157Z
            registryId: src_NetYd96a
            schema:
              id: ts_DaiFhsNA
              name: Example Schema
            webURL: https://benchling.com/benchling/f/R8KcsjhW-academic-registry/bfi-xCUXNVyG-sbn000/edit
        status: SUCCEEDED
    BulkOperateDnaOligosTaskResponse:
      value:
        response:
          dnaOligos:
          - aliases:
            - Example alias
            apiURL: https://benchling.com/api/v2/dna-oligos/seq_bhuDUw9D
            archiveRecord:
              reason: Made in error
            bases: ACTTTTT
            createdAt: 2021-07-13T21:00:49.245Z
            creator:
              handle: lpasteur
              id: ent_a0SApq3z
              name: Louis Pasteur
            customFields:
              Legacy ID:
                value: STR100
            entityRegistryId: sBN000
            fields:
              additionalProp1:
                displayValue: Amp
                isMulti: true
                textValue: Amp
                type: dna_sequence_link
                value:
                - seq_jdf8BV24
            folderId: lib_mrZWMrft
            id: seq_bhuDUw9D
            length: 0
            modifiedAt: 2021-07-13T21:00:49.245Z
            name: Example DNA Oligo
            nucleotideType: DNA
            registrationOrigin:
              originEntryId: etr_3wievUIJ
              registeredAt: 2021-07-13T21:00:49.245Z
            registryId: src_NetYd96a
            schema:
              id: ts_DaiFhsNA
              name: Example Schema
            webURL: https://benchling.com/benchling/f/lib_hBHqKbzE-oligos/seq_bhuDUw9D-test-oligo-abc/edit
        status: SUCCEEDED
    BulkOperateDnaSequencesTaskResponse:
      value:
        response:
          dnaSequences:
          - aliases:
            - Example alias
            annotations:
            - color: '#85DAE9'
              end: 10
              name: Example annotation
              start: 0
              strand: 0
              type: Example annotation type
            apiURL: https://benchling.com/api/v2/dna-sequences/seq_asQya4lk
            archiveRecord:
              reason: Made in error
            bases: GTAGCAAAGANTAGTAGCCAGCTGTGATAAATGTCAGCTAAAAGGGGAAGCCATG
            createdAt: 2021-07-13T13:16:44.315Z
            creator:
              handle: lpasteur
              id: ent_a0SApq3z
              name: Louis Pasteur
            customFields:
              Legacy ID:
                value: STR100
            entityRegistryId: sBN000
            fields:
            - additionalProp1:
                displayValue: Amp
                isMulti: true
                textValue: Amp
                type: dna_sequence_link
                value:
                - seq_jdf8BV24
            folderId: lib_mrZWMrft
            id: seq_asQya4lk
            isCircular: true
            length: 0
            modifiedAt: 2021-07-13T13:16:44.315Z
            name: Example sequence
            primers:
            - bases: CATCG
              bindPosition: 0
              color: '#F58A5E'
              end: 5
              name: Example primer
              oligoId: seq_HJyE332n
              overhangLength: 0
              start: 0
              strand: -1
            registrationOrigin:
              originEntryId: ent_a0SApq3z
              registeredAt: 2021-07-13T13:16:44.315Z
            registryId: src_ae40j3TZ
            schema:
              id: ts_n4l12nf0
              name: Example schema
            translations:
            - aminoAcids: KK
              end: 0
              regions:
              - end: 0
                start: 0
              start: 0
              strand: 1
            webURL: https://benchling.com/benchling/f/lib_zky83cLg-computed-fields/seq_mnY8u4bs-chain-1/edit
        status: SUCCEEDED
    BulkOperateFeaturesTaskResponse:
      value:
        response:
          features:
          - color: '#75C6A9'
            featureLibraryId: featlib_cWYhFmxq
            featureType: promoter
            id: feat_XhYjGBpFoZ4wVary
            matchType: nucleotide
            name: lacZalpha promoter
            pattern: ggagtactgtcctccgagcggagtactgtcctccgagcggagtactgtcctccgagcggagtactgtcctccgagcggagttctgtcctccga
        status: SUCCEEDED
    BulkOperateRnaOligosTaskResponse:
      value:
        response:
          rnaOligos:
          - aliases:
            - Example alias
            apiURL: https://benchling.com/api/v2/rna-oligos/seq_bhuDUw9
            archiveRecord:
              reason: Made in error
            bases: ACUUUUU
            createdAt: 2021-07-13T21:00:49.245Z
            creator:
              handle: lpasteur
              id: ent_a0SApq3z
              name: Louis Pasteur
            customFields:
              Legacy ID:
                value: STR100
            entityRegistryId: sBN000
            fields:
              additionalProp1:
                displayValue: Amp
                isMulti: true
                textValue: Amp
                type: dna_sequence_link
                value:
                - seq_jdf8BV24
            folderId: lib_mrZWMrft
            id: seq_bhuDUw9D
            length: 0
            modifiedAt: 2021-07-13T21:00:49.245Z
            name: Example RNA Oligo
            nucleotideType: DNA
            registrationOrigin:
              originEntryId: etr_3wievUIJ
              registeredAt: 2021-07-13T21:00:49.245Z
            registryId: src_NetYd96a
            schema:
              id: ts_DaiFhsNA
              name: Example Schema
            webURL: https://benchling.com/benchling/f/lib_hBHqKbzE-oligos/seq_bhuDUw9D-test-oligo-abc/edit
        status: SUCCEEDED
    BulkOperateRnaSequencesTaskResponse:
      value:
        response:
          rnaSequences:
          - aliases:
            - Example alias
            annotations:
            - color: '#85DAE9'
              end: 10
              name: Example annotation
              start: 0
              strand: 0
              type: Example annotation type
            apiURL: https://benchling.com/api/v2/rna-sequences/seq_asQya4lk
            archiveRecord:
              reason: Made in error
            bases: GUAGCAAAGANUAGUAGCCAGCUGUGAUAAAUGUCAGCUAAAAGGGGAAGCCAUG
            createdAt: 2021-07-13T13:16:44.315Z
            creator:
              handle: lpasteur
              id: ent_a0SApq3z
              name: Louis Pasteur
            customFields:
              Legacy ID:
                value: STR100
            entityRegistryId: sBN000
            fields:
            - additionalProp1:
                displayValue: Amp
                isMulti: true
                textValue: Amp
                type: rna_sequence_link
                value: seq_jdf8BV24
            folderId: lib_mrZWMrft
            id: seq_asQya4lk
            isCircular: false
            length: 55
            modifiedAt: 2021-07-13T13:16:44.315Z
            name: Example rna sequence
            primers:
            - bases: CAUCG
              bindPosition: 0
              color: '#F58A5E'
              end: 5
              name: Example primer
              oligoId: seq_HJyE332n
              overhangLength: 0
              start: 0
              strand: 1
            registrationOrigin:
              originEntryId: ent_a0SApq3z
              registeredAt: 2021-07-13T13:16:44.315Z
            registryId: src_ae40j3TZ
            schema:
              id: ts_n4l12nf0
              name: Example schema
            translations:
            - aminoAcids: KK
              end: 0
              regions:
              - end: 0
                start: 0
              start: 0
              strand: 1
            webURL: https://benchling.com/benchling/f/lib_zky83cLg-example/seq_mnY8u4bs-chain-1/edit
        status: SUCCEEDED
    BulkTaskFailed:
      value:
        errors:
          index: 0
          message: Invalid field value
        message: Your request was invalid.
        status: FAILED
    CreateAlignmentTaskResponse:
      value:
        response:
          alignedSequences:
          - bases: GTAGCAAAGANTAGTAGCCAGCTGTGATAAATGTCAGCTAAAAGGGGAAGCCATG
            dnaSequenceId: seq_MYmsnS1u
            name: Gene001
            trimEnd: 60
            trimStart: 0
          apiURL: https://benchling.com/api/v2/dna-alignments/seqanl_6ZVdX98t
          createdAt: 2021-07-13T12:59:51.903Z
          id: seqanl_6ZVdX98t
          modifiedAt: 2021-07-13T12:59:51.903Z
          name: Example alignment
          webURL: https://benchling.com/benchling/f/lib_Fy2C0HOl-example/seq_UpzwvUug-consensus/edit?alignment=seqanl_6ZVdX98t
        status: SUCCEEDED
    EmptySuccessTaskResponse:
      value:
        response: {}
        status: SUCCEEDED
    ExportsTaskResponse:
      value:
        response:
          downloadURL: https://benchling-temp.s3.amazonaws.com/benchling-temp/RShkPPS0dj1jsn1LKnbpl7mz421kne52Ndp8UJnB/capillary/export_items/etr_HzOyiNj8.zip?response-content-disposition=attachment&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAVNBDYFYCFXORLN46%2F20210714%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20210714T144850Z&X-Amz-Expires=86400&X-Amz-SignedHeaders=host&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEB4aCXVzLWVhc3QtMSJSDNU1IHZ81FpESNaiQLue6l%2Bjz04FWk7fNUhMxiEbLYCt5LDNAiEAhNbTM9EdeAuxlj4svhS01NmwRJZTyF3Bjzr%2BhK22ACcq%2BQMIFxAAGrebNzE1ODk2NTYwNjgiDHKa3fq33iZwsM1KdCrWA8dnOWQ1%2FXsYrrbzk7cCID6qPA%2F3MQH%2F7FaQoMCUvXj06aeH6RhMD5WZyqoaISBr%2FP4FUua%2B%2FFSdAW8UoFpur0IvkSFTi472CA7hfGmgcjspBdsTCrOA8R1ofgscYwOvGcFreenw5l1VhXZDSeXLC9yLJXPBWFzeup8uRyNXQFIHFcmNHvsLiLMUTY0S5eEBc5Zn9SAaWOcm4OGjAurpUJqpTTPOAu5VZOT2d1K2XMy%2FoH7x01Xf0MRIEd0yfyOLK60dhngbaey39vw1wMfPOm3JBvOyVdhGg1WR2sRF1RG10t7dI7iIO2Y4Z3Yb9w%2FdQhlafF8Ss45YtRRv2RRtzfpwoWE846At1pWvhP0tA0I1bhtehd6Upk%2F0iLehO5JWUiYqz1oMfefdZa30JAS9UNdKNqqsX8%2FjhAR9Ff09xKzOD%2FXzqeZwTT0EWtG6hqerKX9%2B%2BULfjB%2F44t3FjL5pRXrxRDIy0uZVI3qhjoRot5Nf7Lm9edccJJ%2BaujnHOMd96mxEcB584VO6eb63I99geVmNO%2FGpuuBvMxf2oV4AN83BEKipJEM3K4OYFI5VASfcTx2V3nMILj8FMKATYEWPYns0KxMuEpQ0Nf7dSSEiFKIfQ1px5iEvMKfPu4cGOqUBUaO0C2gNEeOUs8Fy4ci2hsLw4MW7jVnT5jLEQd2BB44hZzqkMvmeOYeiTxQB%2FgBpqAC%2FfZRF2Am3nCyLaADQYGpRhpg0QFRkBH8ukSxqOx%2BwLvLAV537t5AfFLcqjar4C9a0DXO9hgWfF3yY6HISlZ4NE9VGXei1wqy7i5ZDcbP1%2FlfWqH6LspK2rMJGgAlJthf7De%2BlQ5yJmYW%2FH7KG5eC%2Fu2MV&X-Amz-Signature=b08cad199962bcdc6d0b4b5d2409e90b67a4484ae554ce843f537d1d471ea70d
        status: SUCCEEDED
    TaskFailed:
      value:
        message: Alignment not found.
        status: FAILED
    TaskRunning:
      value:
        status: RUNNING
    TransfersTaskResponse:
      value:
        response:
          destinationContainers:
          - archiveRecord:
              reason: Made in error
            barcode: 201006-005
            checkoutRecord:
              assignee:
                handle: lpasteur
                id: ent_a0SApq3z
                name: Louis Pasteur
              comment: Example comment
              modifiedAt: 2021-07-14T12:27:27.917Z
              status: AVAILABLE
            contents:
            - batch:
                archiveRecord:
                  reason: Made in error
                createdAt: 2021-07-14T12:27:27.917Z
                creator:
                  handle: lpasteur
                  id: ent_a0SApq3z
                  name: Louis Pasteur
                entity:
                  aliases:
                  - Example alias
                  annotations: []
                  apiURL: https://benchling.com/api/v2/dna-sequences/seq_asQya4lk
                  archiveRecord:
                    reason: Made in error
                  bases: GTAGCAAAGANTAGTAGCCAGCTGTGATAAATGTCAGCTAAAAGGGGAAGCCATG
                  createdAt: 2021-07-14T12:27:27.917Z
                  creator:
                    handle: lpasteur
                    id: ent_a0SApq3z
                    name: Louis Pasteur
                  customFields:
                    Legacy ID:
                      value: STR100
                  entityRegistryId: sBN000
                  fields:
                    additionalProp1:
                      displayValue: Amp
                      isMulti: true
                      textValue: Amp
                      type: dna_sequence_link
                      value:
                      - seq_jdf8BV24
                  folderId: lib_hBHqKbzE
                  id: seq_bhuDUw9D
                  isCircular: true
                  length: 0
                  modifiedAt: 2021-07-14T12:27:27.917Z
                  name: Example entity
                  primers: []
                  registrationOrigin:
                    originEntryId: etr_3wievUIJ
                    registeredAt: 2021-07-14T07:34:25.157Z
                  registryId: src_NetYd96a
                  schema:
                    id: ts_DaiFhsNA
                    name: Example Schema
                  translations: []
                  webURL: https://benchling.com/benchling/f/lib_hBHqKbzE-seqs/seq_bhuDUw9D-example-entity/edit
                fields:
                  additionalProp1:
                    displayValue: Amp
                    isMulti: true
                    textValue: Amp
                    type: dna_sequence_link
                    value:
                    - seq_jdf8BV24
                id: bat_UOIr8IjL
                modifiedAt: 2021-07-14T12:27:27.917Z
                name: Example Batch
                schema:
                  id: ts_DaiFhsNA
                  name: Example Schema
                webURL: https://benchling.com/benchling/f/lib_55UxcIps-registry/bfi_YtegMKkT-batch-test/edit
              concentration:
                units: uM
                value: 5
              entity:
                aliases:
                - Example alias
                annotations: []
                apiURL: https://benchling.com/api/v2/dna-sequences/seq_asQya4lk
                archiveRecord:
                  reason: Made in error
                bases: GTAGCAAAGANTAGTAGCCAGCTGTGATAAATGTCAGCTAAAAGGGGAAGCCATG
                createdAt: 2021-07-14T12:27:27.917Z
                creator:
                  handle: lpasteur
                  id: ent_a0SApq3z
                  name: Louis Pasteur
                customFields:
                  Legacy ID:
                    value: STR100
                entityRegistryId: sBN000
                fields:
                  additionalProp1:
                    displayValue: Amp
                    isMulti: true
                    textValue: Amp
                    type: dna_sequence_link
                    value:
                    - seq_jdf8BV24
                folderId: lib_mrZWMrft
                id: seq_bhuDUw9D
                isCircular: true
                length: 0
                modifiedAt: 2021-07-14T12:27:27.917Z
                name: Example entity
                primers: []
                registrationOrigin:
                  originEntryId: etr_3wievUIJ
                  registeredAt: 2021-07-14T07:34:25.157Z
                registryId: src_NetYd96a
                schema:
                  id: ts_DaiFhsNA
                  name: Example Schema
                translations: []
                webURL: https://benchling.com/benchling/f/lib_hBHqKbzE-seqs/seq_bhuDUw9D-example-entity/edit
            createdAt": 2021-07-14T12:27:27.917Z
            creator:
              handle: lpasteur
              id: ent_a0SApq3z
              name: Louis Pasteur
            fields:
              additionalProp1:
                displayValue: Amp
                isMulti: true
                textValue: Amp
                type: dna_sequence_link
                value:
                - seq_jdf8BV24
            id: con_ZBL9QQWD
            modifiedAt: 2021-07-14T12:27:27.917Z
            name: Example container
            parentStorageId: loc_MmtNUQIA
            parentStorageSchema:
              id: locsch_ToRk7Elm
              name: Building
            projectId: src_1m4443Ek
            quantity:
              units: mL
              value: 10
            schema:
              id: ts_DaiFhsNA
              name: Example Schema
            volume:
              units: mL
              value: 10
            webURL: https://benchling.com/samples/containers/con_FzQ1stz9
        status: SUCCEEDED
  schemas:
    AIGGenerateInputAsyncTask:
      allOf:
      - $ref: '#/components/schemas/AsyncTask'
      - $ref: '#/components/schemas/AIGGenerateInputAsyncTask_allOf'
      type: object
    AOPProcessOutputAsyncTask:
      allOf:
      - $ref: '#/components/schemas/AsyncTask'
      - $ref: '#/components/schemas/AOPProcessOutputAsyncTask_allOf'
      type: object
    AaAnnotation:
      example:
        color: color
        name: name
        start: 6
        end: 0
        id: prtnann_o7zMPG0P
        type: Site
      properties:
        color:
          type: string
        end:
          type: integer
        id:
          example: prtnann_o7zMPG0P
          type: string
        name:
          maxLength: 255
          type: string
        start:
          type: integer
        type:
          example: Site
          maxLength: 255
          type: string
      type: object
    AaSequence:
      example:
        schema: null
        creator: null
        registrationOrigin: null
        aliases:
        - aliases
        - aliases
        customFields: ""
        modifiedAt: 2000-01-23T04:56:07.000+00:00
        length: 1
        annotations:
        - color: color
          name: name
          start: 6
          end: 0
          id: prtnann_o7zMPG0P
          type: Site
        - color: color
          name: name
          start: 6
          end: 0
          id: prtnann_o7zMPG0P
          type: Site
        registryId: registryId
        folderId: folderId
        entityRegistryId: entityRegistryId
        createdAt: 2000-01-23T04:56:07.000+00:00
        aminoAcids: IKTATARRELAETSWTGDRLWGFSDNWAPALRRPSPSALGK
        apiURL: https://benchling.com/api/v2/aa-sequences/prtn_7nMBOMm0
        archiveRecord: null
        webURL: https://benchling.com/benchling/f/lib_55UxcIps-registry/prtn_7nMBOMm0-kedchain11/edit"
        name: name
        id: prtn_ObbdtGhC
        fields:
          key:
            displayValue: displayValue
            isMulti: true
            textValue: Amp
            type: ""
            value: null
      properties:
        aliases:
          description: Array of aliases
          items:
            type: string
          type: array
        aminoAcids:
          description: Amino acids of the AA sequence.
          example: IKTATARRELAETSWTGDRLWGFSDNWAPALRRPSPSALGK
          type: string
        annotations:
          description: Array of annotation objects on the AA sequence.
          items:
            $ref: '#/components/schemas/AaAnnotation'
          type: array
        apiURL:
          description: The canonical url of the AA Sequence in the API.
          example: https://benchling.com/api/v2/aa-sequences/prtn_7nMBOMm0
          format: uri
          readOnly: true
          type: string
        archiveRecord:
          $ref: '#/components/schemas/AaSequence_archiveRecord'
        createdAt:
          description: DateTime the AA sequence was created.
          format: date-time
          readOnly: true
          type: string
        creator:
          $ref: '#/components/schemas/UserSummary'
        customFields:
          allOf:
          - $ref: '#/components/schemas/CustomFields'
          description: Custom fields set on the AA sequence.
        entityRegistryId:
          description: Registry ID of the AA sequence if registered.
          nullable: true
          type: string
        fields:
          additionalProperties:
            $ref: '#/components/schemas/Field'
          type: object
        folderId:
          description: ID of the folder that contains the AA sequence.
          nullable: true
          type: string
        id:
          description: ID of the AA sequence.
          example: prtn_ObbdtGhC
          type: string
        length:
          description: Number of amino acids in the AA sequence.
          type: integer
        modifiedAt:
          description: DateTime the AA sequence was last modified.
          format: date-time
          readOnly: true
          type: string
        name:
          description: Name of the AA sequence.
          type: string
        registrationOrigin:
          $ref: '#/components/schemas/AaSequence_registrationOrigin'
        registryId:
          description: Registry the AA sequence is registered in.
          nullable: true
          type: string
        schema:
          $ref: '#/components/schemas/AaSequence_schema'
        webURL:
          description: URL of the protein.
          example: https://benchling.com/benchling/f/lib_55UxcIps-registry/prtn_7nMBOMm0-kedchain11/edit"
          format: uri
          readOnly: true
          type: string
      type: object
    AaSequenceBaseRequest:
      properties:
        aliases:
          description: Aliases to add to the AA sequence
          items:
            type: string
          type: array
        aminoAcids:
          description: |
            Amino acids for the AA sequence.
          type: string
        annotations:
          description: |
            Annotations to create on the AA sequence.
          items:
            $ref: '#/components/schemas/AaAnnotation'
          type: array
        authorIds:
          description: IDs of users to set as the AA sequence's authors.
          items:
            type: string
          type: array
        customFields:
          allOf:
          - $ref: '#/components/schemas/CustomFields'
          description: |
            Custom fields to add to the AA sequence. Every field should have its name as a key, mapping to an object with information about the value of the field.
        fields:
          allOf:
          - $ref: '#/components/schemas/Fields'
          description: |
            Fields to set on the AA sequence. Must correspond with the schema's field definitions. Every field should have its name as a key, mapping to an object with information about the value of the field.
        folderId:
          description: |
            ID of the folder containing the AA sequence.
          type: string
        name:
          description: |
            Name of the AA sequence.
          type: string
        schemaId:
          description: |
            ID of the AA sequence's schema.
          type: string
      type: object
    AaSequenceBaseRequestForCreate:
      allOf:
      - $ref: '#/components/schemas/AaSequenceBaseRequest'
      - required:
        - aminoAcids
        - name
    AaSequenceBulkCreate:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/AaSequenceCreate'
    AaSequenceBulkUpdate:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/AaSequenceBulkUpdate_allOf'
      - $ref: '#/components/schemas/AaSequenceBaseRequest'
    AaSequenceCreate:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/AaSequenceBaseRequestForCreate'
      - $ref: '#/components/schemas/CreateEntityIntoRegistry'
    AaSequenceRequestRegistryFields:
      properties:
        entityRegistryId:
          type: string
      type: object
    AaSequenceSummary:
      properties:
        entityType:
          enum:
          - aa_sequence
          type: string
        id:
          example: prtn_ObbdtGhC
          type: string
        type:
          deprecated: true
          type: string
      type: object
    AaSequenceUpdate:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/AaSequenceBaseRequest'
      - $ref: '#/components/schemas/AaSequenceRequestRegistryFields'
    AaSequenceWithEntityType:
      allOf:
      - $ref: '#/components/schemas/AaSequence'
      - $ref: '#/components/schemas/AaSequenceWithEntityType_allOf'
      type: object
    AaSequencesArchivalChange:
      description: |
        IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of AA sequences along with any IDs of batches that were archived / unarchived.
      example:
        aaSequenceIds:
        - aaSequenceIds
        - aaSequenceIds
        batchIds:
        - batchIds
        - batchIds
      properties:
        aaSequenceIds:
          items:
            type: string
          type: array
        batchIds:
          items:
            type: string
          type: array
      type: object
    AaSequencesArchive:
      additionalProperties: false
      description: |
        The request body for archiving AA sequences.
      example:
        reason: null
        aaSequenceIds:
        - aaSequenceIds
        - aaSequenceIds
      properties:
        aaSequenceIds:
          items:
            type: string
          type: array
        reason:
          $ref: '#/components/schemas/EntityArchiveReason'
      required:
      - aaSequenceIds
      - reason
      type: object
    AaSequencesBulkCreateRequest:
      additionalProperties: false
      example:
        aaSequences:
        - null
        - null
        - null
        - null
        - null
      properties:
        aaSequences:
          items:
            $ref: '#/components/schemas/AaSequenceBulkCreate'
          maxItems: 1000
          type: array
      type: object
    AaSequencesBulkGet:
      example:
        aaSequences:
        - schema: null
          creator: null
          registrationOrigin: null
          aliases:
          - aliases
          - aliases
          customFields: ""
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          length: 1
          annotations:
          - color: color
            name: name
            start: 6
            end: 0
            id: prtnann_o7zMPG0P
            type: Site
          - color: color
            name: name
            start: 6
            end: 0
            id: prtnann_o7zMPG0P
            type: Site
          registryId: registryId
          folderId: folderId
          entityRegistryId: entityRegistryId
          createdAt: 2000-01-23T04:56:07.000+00:00
          aminoAcids: IKTATARRELAETSWTGDRLWGFSDNWAPALRRPSPSALGK
          apiURL: https://benchling.com/api/v2/aa-sequences/prtn_7nMBOMm0
          archiveRecord: null
          webURL: https://benchling.com/benchling/f/lib_55UxcIps-registry/prtn_7nMBOMm0-kedchain11/edit"
          name: name
          id: prtn_ObbdtGhC
          fields:
            key:
              displayValue: displayValue
              isMulti: true
              textValue: Amp
              type: ""
              value: null
        - schema: null
          creator: null
          registrationOrigin: null
          aliases:
          - aliases
          - aliases
          customFields: ""
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          length: 1
          annotations:
          - color: color
            name: name
            start: 6
            end: 0
            id: prtnann_o7zMPG0P
            type: Site
          - color: color
            name: name
            start: 6
            end: 0
            id: prtnann_o7zMPG0P
            type: Site
          registryId: registryId
          folderId: folderId
          entityRegistryId: entityRegistryId
          createdAt: 2000-01-23T04:56:07.000+00:00
          aminoAcids: IKTATARRELAETSWTGDRLWGFSDNWAPALRRPSPSALGK
          apiURL: https://benchling.com/api/v2/aa-sequences/prtn_7nMBOMm0
          archiveRecord: null
          webURL: https://benchling.com/benchling/f/lib_55UxcIps-registry/prtn_7nMBOMm0-kedchain11/edit"
          name: name
          id: prtn_ObbdtGhC
          fields:
            key:
              displayValue: displayValue
              isMulti: true
              textValue: Amp
              type: ""
              value: null
      properties:
        aaSequences:
          items:
            $ref: '#/components/schemas/AaSequence'
          type: array
      type: object
    AaSequencesBulkUpdateRequest:
      additionalProperties: false
      example:
        aaSequences:
        - null
        - null
      properties:
        aaSequences:
          items:
            $ref: '#/components/schemas/AaSequenceBulkUpdate'
          type: array
      type: object
    AaSequencesPaginatedList:
      example:
        nextToken: nextToken
        aaSequences:
        - schema: null
          creator: null
          registrationOrigin: null
          aliases:
          - aliases
          - aliases
          customFields: ""
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          length: 1
          annotations:
          - color: color
            name: name
            start: 6
            end: 0
            id: prtnann_o7zMPG0P
            type: Site
          - color: color
            name: name
            start: 6
            end: 0
            id: prtnann_o7zMPG0P
            type: Site
          registryId: registryId
          folderId: folderId
          entityRegistryId: entityRegistryId
          createdAt: 2000-01-23T04:56:07.000+00:00
          aminoAcids: IKTATARRELAETSWTGDRLWGFSDNWAPALRRPSPSALGK
          apiURL: https://benchling.com/api/v2/aa-sequences/prtn_7nMBOMm0
          archiveRecord: null
          webURL: https://benchling.com/benchling/f/lib_55UxcIps-registry/prtn_7nMBOMm0-kedchain11/edit"
          name: name
          id: prtn_ObbdtGhC
          fields:
            key:
              displayValue: displayValue
              isMulti: true
              textValue: Amp
              type: ""
              value: null
        - schema: null
          creator: null
          registrationOrigin: null
          aliases:
          - aliases
          - aliases
          customFields: ""
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          length: 1
          annotations:
          - color: color
            name: name
            start: 6
            end: 0
            id: prtnann_o7zMPG0P
            type: Site
          - color: color
            name: name
            start: 6
            end: 0
            id: prtnann_o7zMPG0P
            type: Site
          registryId: registryId
          folderId: folderId
          entityRegistryId: entityRegistryId
          createdAt: 2000-01-23T04:56:07.000+00:00
          aminoAcids: IKTATARRELAETSWTGDRLWGFSDNWAPALRRPSPSALGK
          apiURL: https://benchling.com/api/v2/aa-sequences/prtn_7nMBOMm0
          archiveRecord: null
          webURL: https://benchling.com/benchling/f/lib_55UxcIps-registry/prtn_7nMBOMm0-kedchain11/edit"
          name: name
          id: prtn_ObbdtGhC
          fields:
            key:
              displayValue: displayValue
              isMulti: true
              textValue: Amp
              type: ""
              value: null
      properties:
        aaSequences:
          items:
            $ref: '#/components/schemas/AaSequence'
          type: array
        nextToken:
          type: string
      type: object
    AaSequencesUnarchive:
      additionalProperties: false
      description: |
        The request body for unarchiving AA sequences.
      example:
        aaSequenceIds:
        - aaSequenceIds
        - aaSequenceIds
      properties:
        aaSequenceIds:
          items:
            type: string
          type: array
      required:
      - aaSequenceIds
      type: object
    AlignedNucleotideSequence:
      properties:
        bases:
          example: GTAGCAAAGANTAGTAGCCAGCTGTGATAAATGTCAGCTAAAAGGGGAAGCCATG
          type: string
        name:
          example: Gene001
          type: string
        pairwiseIdentity:
          description: |
            Fraction of bases between trimStart and trimEnd that match the template bases. Only present for Template Alignments; Will be empty for Consensus Alignments.
          example: 0.505
          format: float
          type: number
        sequenceId:
          example: seq_MYmsnS1u
          nullable: true
          type: string
        trimEnd:
          example: 60
          type: integer
        trimStart:
          example: 0
          type: integer
      type: object
    AlignedSequence:
      properties:
        bases:
          example: GTAGCAAAGANTAGTAGCCAGCTGTGATAAATGTCAGCTAAAAGGGGAAGCCATG
          type: string
        dnaSequenceId:
          example: seq_MYmsnS1u
          nullable: true
          type: string
        name:
          example: Gene001
          type: string
        pairwiseIdentity:
          description: |
            Fraction of bases between trimStart and trimEnd that match the template bases. Only present for Template Alignments; Will be empty for Consensus Alignments.
          example: 0.505
          format: float
          type: number
        trimEnd:
          example: 60
          type: integer
        trimStart:
          example: 0
          type: integer
      type: object
    AppConfigItem:
      discriminator:
        mapping:
          aa_sequence: '#/components/schemas/GenericApiIdentifiedAppConfigItem'
          boolean: '#/components/schemas/BooleanAppConfigItem'
          box: '#/components/schemas/GenericApiIdentifiedAppConfigItem'
          box_schema: '#/components/schemas/GenericApiIdentifiedAppConfigItem'
          container: '#/components/schemas/GenericApiIdentifiedAppConfigItem'
          container_schema: '#/components/schemas/GenericApiIdentifiedAppConfigItem'
          custom_entity: '#/components/schemas/GenericApiIdentifiedAppConfigItem'
          date: '#/components/schemas/DateAppConfigItem'
          datetime: '#/components/schemas/DatetimeAppConfigItem'
          dna_oligo: '#/components/schemas/GenericApiIdentifiedAppConfigItem'
          dna_sequence: '#/components/schemas/GenericApiIdentifiedAppConfigItem'
          dropdown: '#/components/schemas/GenericApiIdentifiedAppConfigItem'
          dropdown_option: '#/components/schemas/GenericApiIdentifiedAppConfigItem'
          entity_schema: '#/components/schemas/EntitySchemaAppConfigItem'
          entry: '#/components/schemas/GenericApiIdentifiedAppConfigItem'
          entry_schema: '#/components/schemas/GenericApiIdentifiedAppConfigItem'
          field: '#/components/schemas/FieldAppConfigItem'
          float: '#/components/schemas/FloatAppConfigItem'
          folder: '#/components/schemas/GenericApiIdentifiedAppConfigItem'
          integer: '#/components/schemas/IntegerAppConfigItem'
          json: '#/components/schemas/JsonAppConfigItem'
          location: '#/components/schemas/GenericApiIdentifiedAppConfigItem'
          location_schema: '#/components/schemas/GenericApiIdentifiedAppConfigItem'
          mixture: '#/components/schemas/GenericApiIdentifiedAppConfigItem'
          molecule: '#/components/schemas/GenericApiIdentifiedAppConfigItem'
          plate: '#/components/schemas/GenericApiIdentifiedAppConfigItem'
          plate_schema: '#/components/schemas/GenericApiIdentifiedAppConfigItem'
          project: '#/components/schemas/GenericApiIdentifiedAppConfigItem'
          registry: '#/components/schemas/GenericApiIdentifiedAppConfigItem'
          request_schema: '#/components/schemas/GenericApiIdentifiedAppConfigItem'
          result_schema: '#/components/schemas/GenericApiIdentifiedAppConfigItem'
          rna_oligo: '#/components/schemas/GenericApiIdentifiedAppConfigItem'
          rna_sequence: '#/components/schemas/GenericApiIdentifiedAppConfigItem'
          run_schema: '#/components/schemas/GenericApiIdentifiedAppConfigItem'
          secure_text: '#/components/schemas/SecureTextAppConfigItem'
          text: '#/components/schemas/TextAppConfigItem'
          workflow_task_schema: '#/components/schemas/GenericApiIdentifiedAppConfigItem'
          workflow_task_status: '#/components/schemas/GenericApiIdentifiedAppConfigItem'
          worklist: '#/components/schemas/GenericApiIdentifiedAppConfigItem'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/DateAppConfigItem'
      - $ref: '#/components/schemas/DatetimeAppConfigItem'
      - $ref: '#/components/schemas/JsonAppConfigItem'
      - $ref: '#/components/schemas/EntitySchemaAppConfigItem'
      - $ref: '#/components/schemas/FieldAppConfigItem'
      - $ref: '#/components/schemas/BooleanAppConfigItem'
      - $ref: '#/components/schemas/IntegerAppConfigItem'
      - $ref: '#/components/schemas/FloatAppConfigItem'
      - $ref: '#/components/schemas/TextAppConfigItem'
      - $ref: '#/components/schemas/GenericApiIdentifiedAppConfigItem'
      - $ref: '#/components/schemas/SecureTextAppConfigItem'
      type: object
    AppConfigItemApiMixin:
      properties:
        apiURL:
          format: uri
          readOnly: true
          type: string
        app:
          $ref: '#/components/schemas/AppConfigItemApiMixin_app'
        id:
          readOnly: true
          type: string
        modifiedAt:
          description: DateTime the app config item was last modified
          format: date-time
          readOnly: true
          type: string
        path:
          description: Array-based representation of config item's location in the
            tree in order from top to bottom.
          example:
          - My Schema 1
          - My Field 1
          items:
            type: string
          type: array
        type:
          description: Type of the app config item
          type: string
      type: object
    AppConfigItemBooleanBulkUpdate:
      allOf:
      - $ref: '#/components/schemas/AppConfigItemBooleanUpdate'
      - $ref: '#/components/schemas/AppConfigItemBulkUpdateMixin'
      type: object
    AppConfigItemBooleanCreate:
      allOf:
      - $ref: '#/components/schemas/AppConfigItemCreateMixin'
      - $ref: '#/components/schemas/AppConfigItemBooleanCreate_allOf'
      - required:
        - type
        - value
      type: object
    AppConfigItemBooleanUpdate:
      properties:
        type:
          enum:
          - boolean
          example: boolean
          type: string
        value:
          type: boolean
      required:
      - type
      - value
      type: object
    AppConfigItemBulkUpdate:
      discriminator:
        mapping:
          aa_sequence: '#/components/schemas/AppConfigItemGenericBulkUpdate'
          boolean: '#/components/schemas/AppConfigItemBooleanBulkUpdate'
          box: '#/components/schemas/AppConfigItemGenericBulkUpdate'
          box_schema: '#/components/schemas/AppConfigItemGenericBulkUpdate'
          container: '#/components/schemas/AppConfigItemGenericBulkUpdate'
          container_schema: '#/components/schemas/AppConfigItemGenericBulkUpdate'
          custom_entity: '#/components/schemas/AppConfigItemGenericBulkUpdate'
          date: '#/components/schemas/AppConfigItemDateBulkUpdate'
          datetime: '#/components/schemas/AppConfigItemDatetimeBulkUpdate'
          dna_oligo: '#/components/schemas/AppConfigItemGenericBulkUpdate'
          dna_sequence: '#/components/schemas/AppConfigItemGenericBulkUpdate'
          dropdown: '#/components/schemas/AppConfigItemGenericBulkUpdate'
          dropdown_option: '#/components/schemas/AppConfigItemGenericBulkUpdate'
          entity_schema: '#/components/schemas/AppConfigItemGenericBulkUpdate'
          entry: '#/components/schemas/AppConfigItemGenericBulkUpdate'
          entry_schema: '#/components/schemas/AppConfigItemGenericBulkUpdate'
          field: '#/components/schemas/AppConfigItemGenericBulkUpdate'
          float: '#/components/schemas/AppConfigItemFloatBulkUpdate'
          folder: '#/components/schemas/AppConfigItemGenericBulkUpdate'
          integer: '#/components/schemas/AppConfigItemIntegerBulkUpdate'
          json: '#/components/schemas/AppConfigItemJsonBulkUpdate'
          location: '#/components/schemas/AppConfigItemGenericBulkUpdate'
          location_schema: '#/components/schemas/AppConfigItemGenericBulkUpdate'
          mixture: '#/components/schemas/AppConfigItemGenericBulkUpdate'
          molecule: '#/components/schemas/AppConfigItemGenericBulkUpdate'
          plate: '#/components/schemas/AppConfigItemGenericBulkUpdate'
          plate_schema: '#/components/schemas/AppConfigItemGenericBulkUpdate'
          project: '#/components/schemas/AppConfigItemGenericBulkUpdate'
          registry: '#/components/schemas/AppConfigItemGenericBulkUpdate'
          request_schema: '#/components/schemas/AppConfigItemGenericBulkUpdate'
          result_schema: '#/components/schemas/AppConfigItemGenericBulkUpdate'
          rna_oligo: '#/components/schemas/AppConfigItemGenericBulkUpdate'
          rna_sequence: '#/components/schemas/AppConfigItemGenericBulkUpdate'
          run_schema: '#/components/schemas/AppConfigItemGenericBulkUpdate'
          secure_text: '#/components/schemas/AppConfigItemGenericBulkUpdate'
          text: '#/components/schemas/AppConfigItemGenericBulkUpdate'
          workflow_task_schema: '#/components/schemas/AppConfigItemGenericBulkUpdate'
          workflow_task_status: '#/components/schemas/AppConfigItemGenericBulkUpdate'
          worklist: '#/components/schemas/AppConfigItemGenericBulkUpdate'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/AppConfigItemGenericBulkUpdate'
      - $ref: '#/components/schemas/AppConfigItemBooleanBulkUpdate'
      - $ref: '#/components/schemas/AppConfigItemIntegerBulkUpdate'
      - $ref: '#/components/schemas/AppConfigItemFloatBulkUpdate'
      - $ref: '#/components/schemas/AppConfigItemDateBulkUpdate'
      - $ref: '#/components/schemas/AppConfigItemDatetimeBulkUpdate'
      - $ref: '#/components/schemas/AppConfigItemJsonBulkUpdate'
      type: object
    AppConfigItemBulkUpdateMixin:
      properties:
        id:
          example: aci_ae92kBv9aNSl593z
          type: string
      required:
      - id
      type: object
    AppConfigItemCreate:
      discriminator:
        mapping:
          aa_sequence: '#/components/schemas/AppConfigItemGenericCreate'
          boolean: '#/components/schemas/AppConfigItemBooleanCreate'
          box: '#/components/schemas/AppConfigItemGenericCreate'
          box_schema: '#/components/schemas/AppConfigItemGenericCreate'
          container: '#/components/schemas/AppConfigItemGenericCreate'
          container_schema: '#/components/schemas/AppConfigItemGenericCreate'
          custom_entity: '#/components/schemas/AppConfigItemGenericCreate'
          date: '#/components/schemas/AppConfigItemDateCreate'
          datetime: '#/components/schemas/AppConfigItemDatetimeCreate'
          dna_oligo: '#/components/schemas/AppConfigItemGenericCreate'
          dna_sequence: '#/components/schemas/AppConfigItemGenericCreate'
          dropdown: '#/components/schemas/AppConfigItemGenericCreate'
          dropdown_option: '#/components/schemas/AppConfigItemGenericCreate'
          entity_schema: '#/components/schemas/AppConfigItemGenericCreate'
          entry: '#/components/schemas/AppConfigItemGenericCreate'
          entry_schema: '#/components/schemas/AppConfigItemGenericCreate'
          field: '#/components/schemas/AppConfigItemGenericCreate'
          float: '#/components/schemas/AppConfigItemFloatCreate'
          folder: '#/components/schemas/AppConfigItemGenericCreate'
          integer: '#/components/schemas/AppConfigItemIntegerCreate'
          json: '#/components/schemas/AppConfigItemJsonCreate'
          location: '#/components/schemas/AppConfigItemGenericCreate'
          location_schema: '#/components/schemas/AppConfigItemGenericCreate'
          mixture: '#/components/schemas/AppConfigItemGenericCreate'
          molecule: '#/components/schemas/AppConfigItemGenericCreate'
          plate: '#/components/schemas/AppConfigItemGenericCreate'
          plate_schema: '#/components/schemas/AppConfigItemGenericCreate'
          project: '#/components/schemas/AppConfigItemGenericCreate'
          registry: '#/components/schemas/AppConfigItemGenericCreate'
          request_schema: '#/components/schemas/AppConfigItemGenericCreate'
          result_schema: '#/components/schemas/AppConfigItemGenericCreate'
          rna_oligo: '#/components/schemas/AppConfigItemGenericCreate'
          rna_sequence: '#/components/schemas/AppConfigItemGenericCreate'
          run_schema: '#/components/schemas/AppConfigItemGenericCreate'
          secure_text: '#/components/schemas/AppConfigItemGenericCreate'
          text: '#/components/schemas/AppConfigItemGenericCreate'
          workflow_task_schema: '#/components/schemas/AppConfigItemGenericCreate'
          workflow_task_status: '#/components/schemas/AppConfigItemGenericCreate'
          worklist: '#/components/schemas/AppConfigItemGenericCreate'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/AppConfigItemGenericCreate'
      - $ref: '#/components/schemas/AppConfigItemBooleanCreate'
      - $ref: '#/components/schemas/AppConfigItemIntegerCreate'
      - $ref: '#/components/schemas/AppConfigItemFloatCreate'
      - $ref: '#/components/schemas/AppConfigItemDateCreate'
      - $ref: '#/components/schemas/AppConfigItemDatetimeCreate'
      - $ref: '#/components/schemas/AppConfigItemJsonCreate'
      type: object
    AppConfigItemCreateMixin:
      properties:
        appId:
          description: App id to which this config item belongs.
          example: app_J39na03L1nsLS34o
          type: string
        path:
          description: Array-based representation of config item's location in the
            tree in order from top to bottom.
          example:
          - My Schema 1
          - My Field 1
          items:
            type: string
          type: array
      required:
      - appId
      - path
      type: object
    AppConfigItemDateBulkUpdate:
      allOf:
      - $ref: '#/components/schemas/AppConfigItemDateUpdate'
      - $ref: '#/components/schemas/AppConfigItemBulkUpdateMixin'
      type: object
    AppConfigItemDateCreate:
      allOf:
      - $ref: '#/components/schemas/AppConfigItemCreateMixin'
      - $ref: '#/components/schemas/AppConfigItemDateCreate_allOf'
      - required:
        - type
        - value
      type: object
    AppConfigItemDateUpdate:
      properties:
        type:
          format: date
          type: string
        value:
          type: string
      required:
      - type
      - value
      type: object
    AppConfigItemDatetimeBulkUpdate:
      allOf:
      - $ref: '#/components/schemas/AppConfigItemDatetimeUpdate'
      - $ref: '#/components/schemas/AppConfigItemBulkUpdateMixin'
      type: object
    AppConfigItemDatetimeCreate:
      allOf:
      - $ref: '#/components/schemas/AppConfigItemCreateMixin'
      - $ref: '#/components/schemas/AppConfigItemDatetimeCreate_allOf'
      - required:
        - type
        - value
      type: object
    AppConfigItemDatetimeUpdate:
      properties:
        type:
          example: datetime
          format: datetime
          type: string
        value:
          type: string
      required:
      - type
      - value
      type: object
    AppConfigItemFloatBulkUpdate:
      allOf:
      - $ref: '#/components/schemas/AppConfigItemFloatUpdate'
      - $ref: '#/components/schemas/AppConfigItemBulkUpdateMixin'
      type: object
    AppConfigItemFloatCreate:
      allOf:
      - $ref: '#/components/schemas/AppConfigItemCreateMixin'
      - $ref: '#/components/schemas/AppConfigItemFloatCreate_allOf'
      - required:
        - type
        - value
      type: object
    AppConfigItemFloatUpdate:
      properties:
        type:
          enum:
          - float
          example: float
          type: string
        value:
          format: float
          type: number
      required:
      - type
      - value
      type: object
    AppConfigItemGenericBulkUpdate:
      allOf:
      - $ref: '#/components/schemas/AppConfigItemGenericUpdate'
      - $ref: '#/components/schemas/AppConfigItemBulkUpdateMixin'
      type: object
    AppConfigItemGenericCreate:
      allOf:
      - $ref: '#/components/schemas/AppConfigItemCreateMixin'
      - $ref: '#/components/schemas/AppConfigItemGenericCreate_allOf'
      - required:
        - type
        - value
      type: object
    AppConfigItemGenericUpdate:
      properties:
        type:
          enum:
          - container_schema
          - entity_schema
          - plate_schema
          - location_schema
          - box_schema
          - run_schema
          - result_schema
          - request_schema
          - entry_schema
          - workflow_task_schema
          - dropdown
          - dropdown_option
          - field
          - text
          - date
          - datetime
          - secure_text
          - json
          - registry
          - folder
          - entry
          - worklist
          - project
          - workflow_task_status
          - dna_sequence
          - dna_oligo
          - aa_sequence
          - custom_entity
          - mixture
          - molecule
          - rna_oligo
          - rna_sequence
          - box
          - container
          - location
          - plate
          type: string
        value:
          type: string
      required:
      - type
      - value
      type: object
    AppConfigItemIntegerBulkUpdate:
      allOf:
      - $ref: '#/components/schemas/AppConfigItemIntegerUpdate'
      - $ref: '#/components/schemas/AppConfigItemBulkUpdateMixin'
      type: object
    AppConfigItemIntegerCreate:
      allOf:
      - $ref: '#/components/schemas/AppConfigItemCreateMixin'
      - $ref: '#/components/schemas/AppConfigItemIntegerCreate_allOf'
      - required:
        - type
        - value
      type: object
    AppConfigItemIntegerUpdate:
      properties:
        type:
          enum:
          - integer
          example: integer
          type: string
        value:
          type: integer
      required:
      - type
      - value
      type: object
    AppConfigItemJsonBulkUpdate:
      allOf:
      - $ref: '#/components/schemas/AppConfigItemJsonUpdate'
      - $ref: '#/components/schemas/AppConfigItemBulkUpdateMixin'
      type: object
    AppConfigItemJsonCreate:
      allOf:
      - $ref: '#/components/schemas/AppConfigItemCreateMixin'
      - $ref: '#/components/schemas/AppConfigItemJsonCreate_allOf'
      - required:
        - type
        - value
      type: object
    AppConfigItemJsonUpdate:
      properties:
        type:
          enum:
          - json
          example: json
          type: string
        value:
          type: string
      required:
      - type
      - value
      type: object
    AppConfigItemUpdate:
      discriminator:
        mapping:
          aa_sequence: '#/components/schemas/AppConfigItemGenericUpdate'
          boolean: '#/components/schemas/AppConfigItemBooleanUpdate'
          box: '#/components/schemas/AppConfigItemGenericUpdate'
          box_schema: '#/components/schemas/AppConfigItemGenericUpdate'
          container: '#/components/schemas/AppConfigItemGenericUpdate'
          container_schema: '#/components/schemas/AppConfigItemGenericUpdate'
          custom_entity: '#/components/schemas/AppConfigItemGenericUpdate'
          date: '#/components/schemas/AppConfigItemDateUpdate'
          datetime: '#/components/schemas/AppConfigItemDatetimeUpdate'
          dna_oligo: '#/components/schemas/AppConfigItemGenericUpdate'
          dna_sequence: '#/components/schemas/AppConfigItemGenericUpdate'
          dropdown: '#/components/schemas/AppConfigItemGenericUpdate'
          dropdown_option: '#/components/schemas/AppConfigItemGenericUpdate'
          entity_schema: '#/components/schemas/AppConfigItemGenericUpdate'
          entry: '#/components/schemas/AppConfigItemGenericUpdate'
          entry_schema: '#/components/schemas/AppConfigItemGenericUpdate'
          field: '#/components/schemas/AppConfigItemGenericUpdate'
          float: '#/components/schemas/AppConfigItemFloatUpdate'
          folder: '#/components/schemas/AppConfigItemGenericUpdate'
          integer: '#/components/schemas/AppConfigItemIntegerUpdate'
          json: '#/components/schemas/AppConfigItemJsonUpdate'
          location: '#/components/schemas/AppConfigItemGenericUpdate'
          location_schema: '#/components/schemas/AppConfigItemGenericUpdate'
          mixture: '#/components/schemas/AppConfigItemGenericUpdate'
          molecule: '#/components/schemas/AppConfigItemGenericUpdate'
          plate: '#/components/schemas/AppConfigItemGenericUpdate'
          plate_schema: '#/components/schemas/AppConfigItemGenericUpdate'
          project: '#/components/schemas/AppConfigItemGenericUpdate'
          registry: '#/components/schemas/AppConfigItemGenericUpdate'
          request_schema: '#/components/schemas/AppConfigItemGenericUpdate'
          result_schema: '#/components/schemas/AppConfigItemGenericUpdate'
          rna_oligo: '#/components/schemas/AppConfigItemGenericUpdate'
          rna_sequence: '#/components/schemas/AppConfigItemGenericUpdate'
          run_schema: '#/components/schemas/AppConfigItemGenericUpdate'
          secure_text: '#/components/schemas/AppConfigItemGenericUpdate'
          text: '#/components/schemas/AppConfigItemGenericUpdate'
          workflow_task_schema: '#/components/schemas/AppConfigItemGenericUpdate'
          workflow_task_status: '#/components/schemas/AppConfigItemGenericUpdate'
          worklist: '#/components/schemas/AppConfigItemGenericUpdate'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/AppConfigItemGenericUpdate'
      - $ref: '#/components/schemas/AppConfigItemBooleanUpdate'
      - $ref: '#/components/schemas/AppConfigItemIntegerUpdate'
      - $ref: '#/components/schemas/AppConfigItemFloatUpdate'
      - $ref: '#/components/schemas/AppConfigItemDateUpdate'
      - $ref: '#/components/schemas/AppConfigItemDatetimeUpdate'
      - $ref: '#/components/schemas/AppConfigItemJsonUpdate'
      type: object
    AppConfigItemsBulkCreateRequest:
      example:
        appConfigurationItems:
        - null
        - null
        - null
        - null
        - null
      properties:
        appConfigurationItems:
          items:
            $ref: '#/components/schemas/AppConfigItemCreate'
          maxItems: 1000
          type: array
      required:
      - appConfigurationItems
      type: object
    AppConfigItemsBulkUpdateRequest:
      example:
        appConfigurationItems:
        - null
        - null
        - null
        - null
        - null
      properties:
        appConfigurationItems:
          items:
            $ref: '#/components/schemas/AppConfigItemBulkUpdate'
          maxItems: 1000
          type: array
      required:
      - appConfigurationItems
      type: object
    AppConfigurationPaginatedList:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/Pagination'
      - $ref: '#/components/schemas/AppConfigurationPaginatedList_allOf'
      type: object
    ArchiveRecord:
      properties:
        reason:
          example: Made in error
          type: string
      type: object
    AssayFieldsCreate:
      additionalProperties: true
      type: object
    AssayResult:
      example:
        schema: null
        createdAt: 2000-01-23T04:56:07.000+00:00
        creator: null
        validationComment: validationComment
        fieldValidation:
          key:
            validationComment: validationComment
            validationStatus: VALID
        archiveRecord: null
        isReviewed: true
        id: id
        fields:
          key:
            displayValue: displayValue
            isMulti: true
            textValue: Amp
            type: ""
            value: null
        projectId: projectId
        validationStatus: validationStatus
        entryId: entryId
      properties:
        archiveRecord:
          $ref: '#/components/schemas/AssayResult_archiveRecord'
        createdAt:
          description: DateTime at which the the result was created
          format: date-time
          readOnly: true
          type: string
        creator:
          $ref: '#/components/schemas/AssayResult_creator'
        entryId:
          description: ID of the entry that this result is attached to
          nullable: true
          type: string
        fieldValidation:
          additionalProperties:
            $ref: '#/components/schemas/UserValidation'
          description: |
            Object mapping field names to a UserValidation Resource object for that field. To **set** validation for a result, you *must* use this object.
          type: object
        fields:
          additionalProperties:
            $ref: '#/components/schemas/Field'
          type: object
        id:
          description: ID of the result
          type: string
        isReviewed:
          description: Whether or not this result is attached to an accepted entry
          type: boolean
        projectId:
          description: ID of the project to insert the result into
          nullable: true
          type: string
        schema:
          $ref: '#/components/schemas/SchemaProperty'
        validationComment:
          readOnly: true
          type: string
        validationStatus:
          readOnly: true
          type: string
      type: object
    AssayResultCreate:
      example:
        fieldValidation:
          key:
            validationComment: validationComment
            validationStatus: VALID
        schemaId: schemaId
        id: id
        fields: null
        projectId: projectId
      properties:
        fieldValidation:
          additionalProperties:
            $ref: '#/components/schemas/UserValidation'
          description: |
            Dictionary mapping field names to UserValidation Resources.
          type: object
        fields:
          $ref: '#/components/schemas/AssayResultCreate_fields'
        id:
          description: UUID
          type: string
        projectId:
          description: |
            The project that the assay result should be uploaded to. Only users with read access to the project will be able to read the assay result. Leaving this empty will result in only the creator having read access.
          nullable: true
          type: string
        schemaId:
          description: ID of result schema under which to upload this result
          type: string
      required:
      - fields
      - schemaId
      type: object
    AssayResultIdsRequest:
      additionalProperties: false
      example:
        assayResultIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        assayResultIds:
          items:
            format: uuid
            type: string
          type: array
      required:
      - assayResultIds
      type: object
    AssayResultIdsResponse:
      example:
        assayResultIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        assayResultIds:
          items:
            format: uuid
            type: string
          type: array
      type: object
    AssayResultSchema:
      allOf:
      - $ref: '#/components/schemas/BaseAssaySchema'
      - $ref: '#/components/schemas/AssayResultSchema_allOf'
    AssayResultSchemasPaginatedList:
      example:
        nextToken: nextToken
        assayResultSchemas:
        - null
        - null
      properties:
        assayResultSchemas:
          items:
            $ref: '#/components/schemas/AssayResultSchema'
          readOnly: true
          type: array
        nextToken:
          type: string
      type: object
    AssayResultTransactionCreateResponse:
      example:
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
      type: object
    AssayResultsArchive:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/AssayResultIdsRequest'
      - $ref: '#/components/schemas/AssayResultsArchive_allOf'
    AssayResultsBulkCreateRequest:
      additionalProperties: false
      example:
        assayResults:
        - fieldValidation:
            key:
              validationComment: validationComment
              validationStatus: VALID
          schemaId: schemaId
          id: id
          fields: null
          projectId: projectId
        - fieldValidation:
            key:
              validationComment: validationComment
              validationStatus: VALID
          schemaId: schemaId
          id: id
          fields: null
          projectId: projectId
      properties:
        assayResults:
          items:
            $ref: '#/components/schemas/AssayResultCreate'
          type: array
      required:
      - assayResults
      type: object
    AssayResultsBulkGet:
      example:
        assayResults:
        - schema: null
          createdAt: 2000-01-23T04:56:07.000+00:00
          creator: null
          validationComment: validationComment
          fieldValidation:
            key:
              validationComment: validationComment
              validationStatus: VALID
          archiveRecord: null
          isReviewed: true
          id: id
          fields:
            key:
              displayValue: displayValue
              isMulti: true
              textValue: Amp
              type: ""
              value: null
          projectId: projectId
          validationStatus: validationStatus
          entryId: entryId
        - schema: null
          createdAt: 2000-01-23T04:56:07.000+00:00
          creator: null
          validationComment: validationComment
          fieldValidation:
            key:
              validationComment: validationComment
              validationStatus: VALID
          archiveRecord: null
          isReviewed: true
          id: id
          fields:
            key:
              displayValue: displayValue
              isMulti: true
              textValue: Amp
              type: ""
              value: null
          projectId: projectId
          validationStatus: validationStatus
          entryId: entryId
      properties:
        assayResults:
          items:
            $ref: '#/components/schemas/AssayResult'
          type: array
      type: object
    AssayResultsCreateResponse:
      example:
        assayResults:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        assayResults:
          items:
            format: uuid
            type: string
          type: array
      type: object
    AssayResultsPaginatedList:
      example:
        assayResults:
        - schema: null
          createdAt: 2000-01-23T04:56:07.000+00:00
          creator: null
          validationComment: validationComment
          fieldValidation:
            key:
              validationComment: validationComment
              validationStatus: VALID
          archiveRecord: null
          isReviewed: true
          id: id
          fields:
            key:
              displayValue: displayValue
              isMulti: true
              textValue: Amp
              type: ""
              value: null
          projectId: projectId
          validationStatus: validationStatus
          entryId: entryId
        - schema: null
          createdAt: 2000-01-23T04:56:07.000+00:00
          creator: null
          validationComment: validationComment
          fieldValidation:
            key:
              validationComment: validationComment
              validationStatus: VALID
          archiveRecord: null
          isReviewed: true
          id: id
          fields:
            key:
              displayValue: displayValue
              isMulti: true
              textValue: Amp
              type: ""
              value: null
          projectId: projectId
          validationStatus: validationStatus
          entryId: entryId
        nextToken: nextToken
      properties:
        assayResults:
          items:
            $ref: '#/components/schemas/AssayResult'
          type: array
        nextToken:
          type: string
      type: object
    AssayRun:
      example:
        schema:
          id: assaysch_fFLKmdmG
          name: Assay Run
        createdAt: 2021-05-06T13:43:25.752597+00:00
        creator: null
        validationComment: Reported valid with no caveats
        apiURL: https://benchling.com/api/v2/assay-runs/21f50003-0389-4b2a-9293-a17967b85961
        archiveRecord: null
        isReviewed: true
        id: 77af3205-65af-457f-87f5-75462b85075a
        fields:
          key:
            displayValue: displayValue
            isMulti: true
            textValue: Amp
            type: ""
            value: null
        projectId: src_YzU5p4dR
        validationStatus: null
        entryId: etr_Hds1XAaq
      properties:
        apiURL:
          description: The canonical url of the Run in the API.
          example: https://benchling.com/api/v2/assay-runs/21f50003-0389-4b2a-9293-a17967b85961
          format: uri
          readOnly: true
          type: string
        archiveRecord:
          $ref: '#/components/schemas/AaSequence_archiveRecord'
        createdAt:
          example: 2021-05-06T13:43:25.752597+00:00
          type: string
        creator:
          $ref: '#/components/schemas/UserSummary'
        entryId:
          example: etr_Hds1XAaq
          nullable: true
          type: string
        fields:
          additionalProperties:
            $ref: '#/components/schemas/Field'
          type: object
        id:
          example: 77af3205-65af-457f-87f5-75462b85075a
          type: string
        isReviewed:
          type: boolean
        projectId:
          example: src_YzU5p4dR
          nullable: true
          type: string
        schema:
          $ref: '#/components/schemas/SchemaProperty_1'
        validationComment:
          example: Reported valid with no caveats
          nullable: true
          type: string
        validationStatus:
          $ref: '#/components/schemas/AssayRunValidationStatus'
      type: object
    AssayRunCreate:
      example:
        validationComment: validationComment
        schemaId: schemaId
        id: id
        fields: null
        projectId: projectId
        validationStatus: null
      properties:
        fields:
          $ref: '#/components/schemas/AssayRunCreate_fields'
        id:
          description: ID of assay run
          type: string
        projectId:
          description: |
            The project that the assay run should be uploaded to. Only users with read access to the project will be able to read the assay run. Leaving this empty will result in only the creator having read access.
          type: string
        schemaId:
          description: ID of assay schema that assay run conforms to
          type: string
        validationComment:
          description: Additional information about the validation status
          type: string
        validationStatus:
          $ref: '#/components/schemas/AssayRunValidationStatus'
      required:
      - fields
      - schemaId
      type: object
    AssayRunCreatedEvent:
      allOf:
      - $ref: '#/components/schemas/EventBase'
      - $ref: '#/components/schemas/AssayRunCreatedEvent_allOf'
    AssayRunNotePart:
      allOf:
      - $ref: '#/components/schemas/BaseNotePart'
      - $ref: '#/components/schemas/AssayRunNotePart_allOf'
    AssayRunSchema:
      allOf:
      - $ref: '#/components/schemas/BaseAssaySchema'
      - $ref: '#/components/schemas/AssayRunSchema_allOf'
    AssayRunSchemasPaginatedList:
      example:
        assayRunSchemas:
        - null
        - null
        nextToken: nextToken
      properties:
        assayRunSchemas:
          items:
            $ref: '#/components/schemas/AssayRunSchema'
          readOnly: true
          type: array
        nextToken:
          type: string
      type: object
    AssayRunUpdate:
      additionalProperties: false
      example:
        fields:
          key:
            displayValue: displayValue
            isMulti: true
            textValue: Amp
            type: ""
            value: null
      properties:
        fields:
          additionalProperties:
            $ref: '#/components/schemas/Field'
          type: object
      type: object
    AssayRunUpdatedFieldsEvent:
      allOf:
      - $ref: '#/components/schemas/EventBase'
      - $ref: '#/components/schemas/UpdateEventMixin'
      - $ref: '#/components/schemas/AssayRunUpdatedFieldsEvent_allOf'
    AssayRunValidationStatus:
      description: Must be either VALID or INVALID
      enum:
      - VALID
      - INVALID
      type: string
    AssayRunsArchivalChange:
      description: |
        IDs of all Assay Runs that were archived / unarchived.
      example:
        assayRunIds:
        - assayRunIds
        - assayRunIds
      properties:
        assayRunIds:
          items:
            type: string
          type: array
      type: object
    AssayRunsArchive:
      additionalProperties: false
      description: |
        The request body for archiving Assay Runs.
      example:
        reason: Archived
        assayRunIds:
        - assayRunIds
        - assayRunIds
      properties:
        assayRunIds:
          items:
            type: string
          type: array
        reason:
          description: |
            The reason for archiving the provided Assay Runs. Accepted reasons may differ based on tenant configuration.
          enum:
          - Archived
          - Made in error
          - Other
          type: string
      required:
      - assayRunIds
      - reason
      type: object
    AssayRunsBulkCreateRequest:
      additionalProperties: false
      example:
        assayRuns:
        - validationComment: validationComment
          schemaId: schemaId
          id: id
          fields: null
          projectId: projectId
          validationStatus: null
        - validationComment: validationComment
          schemaId: schemaId
          id: id
          fields: null
          projectId: projectId
          validationStatus: null
      properties:
        assayRuns:
          items:
            $ref: '#/components/schemas/AssayRunCreate'
          type: array
      required:
      - assayRuns
      type: object
    AssayRunsBulkCreateResponse:
      example:
        assayRuns:
        - assayRuns
        - assayRuns
      properties:
        assayRuns:
          items:
            type: string
          type: array
      type: object
    AssayRunsBulkGet:
      example:
        assayRuns:
        - schema:
            id: assaysch_fFLKmdmG
            name: Assay Run
          createdAt: 2021-05-06T13:43:25.752597+00:00
          creator: null
          validationComment: Reported valid with no caveats
          apiURL: https://benchling.com/api/v2/assay-runs/21f50003-0389-4b2a-9293-a17967b85961
          archiveRecord: null
          isReviewed: true
          id: 77af3205-65af-457f-87f5-75462b85075a
          fields:
            key:
              displayValue: displayValue
              isMulti: true
              textValue: Amp
              type: ""
              value: null
          projectId: src_YzU5p4dR
          validationStatus: null
          entryId: etr_Hds1XAaq
        - schema:
            id: assaysch_fFLKmdmG
            name: Assay Run
          createdAt: 2021-05-06T13:43:25.752597+00:00
          creator: null
          validationComment: Reported valid with no caveats
          apiURL: https://benchling.com/api/v2/assay-runs/21f50003-0389-4b2a-9293-a17967b85961
          archiveRecord: null
          isReviewed: true
          id: 77af3205-65af-457f-87f5-75462b85075a
          fields:
            key:
              displayValue: displayValue
              isMulti: true
              textValue: Amp
              type: ""
              value: null
          projectId: src_YzU5p4dR
          validationStatus: null
          entryId: etr_Hds1XAaq
      properties:
        assayRuns:
          items:
            $ref: '#/components/schemas/AssayRun'
          type: array
      type: object
    AssayRunsPaginatedList:
      example:
        nextToken: nextToken
        assayRuns:
        - schema:
            id: assaysch_fFLKmdmG
            name: Assay Run
          createdAt: 2021-05-06T13:43:25.752597+00:00
          creator: null
          validationComment: Reported valid with no caveats
          apiURL: https://benchling.com/api/v2/assay-runs/21f50003-0389-4b2a-9293-a17967b85961
          archiveRecord: null
          isReviewed: true
          id: 77af3205-65af-457f-87f5-75462b85075a
          fields:
            key:
              displayValue: displayValue
              isMulti: true
              textValue: Amp
              type: ""
              value: null
          projectId: src_YzU5p4dR
          validationStatus: null
          entryId: etr_Hds1XAaq
        - schema:
            id: assaysch_fFLKmdmG
            name: Assay Run
          createdAt: 2021-05-06T13:43:25.752597+00:00
          creator: null
          validationComment: Reported valid with no caveats
          apiURL: https://benchling.com/api/v2/assay-runs/21f50003-0389-4b2a-9293-a17967b85961
          archiveRecord: null
          isReviewed: true
          id: 77af3205-65af-457f-87f5-75462b85075a
          fields:
            key:
              displayValue: displayValue
              isMulti: true
              textValue: Amp
              type: ""
              value: null
          projectId: src_YzU5p4dR
          validationStatus: null
          entryId: etr_Hds1XAaq
      properties:
        assayRuns:
          items:
            $ref: '#/components/schemas/AssayRun'
          type: array
        nextToken:
          type: string
      type: object
    AssayRunsUnarchive:
      additionalProperties: false
      description: |
        The request body for unarchiving Assay Runs.
      example:
        assayRunIds:
        - assayRunIds
        - assayRunIds
      properties:
        assayRunIds:
          items:
            type: string
          type: array
      required:
      - assayRunIds
      type: object
    AsyncTask:
      properties:
        errors:
          description: |
            Present only when status is FAILED for a bulk task. Contains information about the individual errors in the bulk task.
          type: object
        message:
          description: Present only when status is FAILED. Contains information about
            the error.
          type: string
        response:
          description: Present only when status is SUCCEEDED. response can be empty
            if there is no data to be returned.
          type: object
        status:
          description: The current state of the task.
          enum:
          - RUNNING
          - SUCCEEDED
          - FAILED
          type: string
      required:
      - status
      type: object
    AsyncTaskLink:
      example:
        taskId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        taskId:
          format: uuid
          type: string
      type: object
    AutoAnnotateAaSequences:
      additionalProperties: false
      example:
        featureLibraryIds:
        - featureLibraryIds
        - featureLibraryIds
        aaSequenceIds:
        - aaSequenceIds
        - aaSequenceIds
      properties:
        aaSequenceIds:
          description: Array of AA sequence IDs.
          items:
            type: string
          type: array
        featureLibraryIds:
          description: Array of feature library IDs.
          items:
            type: string
          type: array
      required:
      - aaSequenceIds
      - featureLibraryIds
      type: object
    AutoAnnotateDnaSequences:
      additionalProperties: false
      example:
        featureLibraryIds:
        - featureLibraryIds
        - featureLibraryIds
        dnaSequenceIds:
        - dnaSequenceIds
        - dnaSequenceIds
      properties:
        dnaSequenceIds:
          description: Array of DNA sequence IDs.
          items:
            type: string
          type: array
        featureLibraryIds:
          description: Array of feature library IDs.
          items:
            type: string
          type: array
      required:
      - dnaSequenceIds
      - featureLibraryIds
      type: object
    AutoAnnotateRnaSequences:
      additionalProperties: false
      example:
        featureLibraryIds:
        - featureLibraryIds
        - featureLibraryIds
        rnaSequenceIds:
        - rnaSequenceIds
        - rnaSequenceIds
      properties:
        featureLibraryIds:
          description: Array of feature library IDs.
          items:
            type: string
          type: array
        rnaSequenceIds:
          description: Array of RNA sequence IDs.
          items:
            type: string
          type: array
      required:
      - featureLibraryIds
      - rnaSequenceIds
      type: object
    AutofillPartsAsyncTask:
      allOf:
      - $ref: '#/components/schemas/AsyncTask'
      - $ref: '#/components/schemas/AutofillPartsAsyncTask_allOf'
      type: object
    AutofillRnaSequences:
      additionalProperties: false
      example:
        rnaSequenceIds:
        - rnaSequenceIds
        - rnaSequenceIds
      properties:
        rnaSequenceIds:
          description: Array of RNA sequence IDs.
          items:
            type: string
          type: array
      required:
      - rnaSequenceIds
      type: object
    AutofillSequences:
      additionalProperties: false
      example:
        dnaSequenceIds:
        - dnaSequenceIds
        - dnaSequenceIds
      properties:
        dnaSequenceIds:
          description: Array of DNA sequence IDs.
          items:
            type: string
          type: array
      required:
      - dnaSequenceIds
      type: object
    AutofillTranslationsAsyncTask:
      allOf:
      - $ref: '#/components/schemas/AsyncTask'
      - $ref: '#/components/schemas/AutofillPartsAsyncTask_allOf'
      type: object
    AutomationFile:
      properties:
        assayRunId:
          example: 588aca02-1a20-4b94-a40f-b3f3a0081749
          type: string
        automationFileConfig:
          $ref: '#/components/schemas/AutomationFile_automationFileConfig'
        file:
          $ref: '#/components/schemas/AutomationFile_file'
        id:
          type: string
        status:
          enum:
          - SUCCEEDED
          - FAILED
          - NOT_STARTED
          - RUNNING
          type: string
      type: object
    AutomationFileInputsPaginatedList:
      example:
        automationInputGenerators:
        - null
        - null
        nextToken: Im5ldyB0ZXN0Ig==
      properties:
        automationInputGenerators:
          items:
            $ref: '#/components/schemas/AutomationInputGenerator'
          type: array
        nextToken:
          example: Im5ldyB0ZXN0Ig==
          type: string
      type: object
    AutomationInputGenerator:
      allOf:
      - $ref: '#/components/schemas/AutomationFile'
      - $ref: '#/components/schemas/AutomationInputGenerator_allOf'
    AutomationInputGeneratorCompletedV2BetaEvent:
      allOf:
      - $ref: '#/components/schemas/EventBase'
      - $ref: '#/components/schemas/AutomationInputGeneratorCompletedV2BetaEvent_allOf'
    AutomationInputGeneratorUpdate:
      additionalProperties: false
      example:
        fileId: fileId
      properties:
        fileId:
          description: The ID of the file (blob) associated with the input generator.
            Set to `null` to remove an existing file from the generator.
          nullable: true
          type: string
          example: null
      type: object
    AutomationOutputProcessor:
      allOf:
      - $ref: '#/components/schemas/AutomationFile'
      - $ref: '#/components/schemas/AutomationOutputProcessor_allOf'
    AutomationOutputProcessorArchivalChange:
      description: "IDs of all items that were archived or unarchived, grouped by\
        \ resource type. This includes the IDs of any linked Results that were archived\
        \ / unarchived."
      example:
        resultIds:
        - resultIds
        - resultIds
        automationOutputProcessorIds:
        - automationOutputProcessorIds
        - automationOutputProcessorIds
      properties:
        automationOutputProcessorIds:
          items:
            type: string
          type: array
        resultIds:
          items:
            type: string
          type: array
      type: object
    AutomationOutputProcessorCompletedV2BetaEvent:
      allOf:
      - $ref: '#/components/schemas/EventBase'
      - $ref: '#/components/schemas/AutomationOutputProcessorCompletedV2BetaEvent_allOf'
    AutomationOutputProcessorCreate:
      additionalProperties: false
      example:
        completeWithErrors: true
        assayRunId: assayRunId
        automationFileConfigName: automationFileConfigName
        fileId: cd624536-c6ba-41b9-b802-9461689e2ea3
      properties:
        assayRunId:
          type: string
        automationFileConfigName:
          type: string
        completeWithErrors:
          description: "Specifies whether file processing should complete with errors.\
            \ False means any error in output file processing will result in no actions\
            \ being committed. True means that if row-level errors occur, then failing\
            \ rows and their errors will be saved to errorFile, and actions from successful\
            \ rows will be committed."
          type: boolean
        fileId:
          description: The ID of a blob link to process.
          example: cd624536-c6ba-41b9-b802-9461689e2ea3
          type: string
      required:
      - assayRunId
      - automationFileConfigName
      - fileId
      type: object
    AutomationOutputProcessorUpdate:
      additionalProperties: false
      example:
        fileId: cd624536-c6ba-41b9-b802-9461689e2ea3
      properties:
        fileId:
          description: The ID of a blob link to process.
          example: cd624536-c6ba-41b9-b802-9461689e2ea3
          type: string
      required:
      - fileId
      type: object
    AutomationOutputProcessorUploadedV2BetaEvent:
      allOf:
      - $ref: '#/components/schemas/EventBase'
      - $ref: '#/components/schemas/AutomationOutputProcessorUploadedV2BetaEvent_allOf'
    AutomationOutputProcessorsArchive:
      additionalProperties: false
      example:
        reason: Made in error
        automationOutputProcessorIds:
        - automationOutputProcessorIds
        - automationOutputProcessorIds
      properties:
        automationOutputProcessorIds:
          description: Array of automation output processor IDs
          items:
            type: string
          type: array
        reason:
          description: |
            The reason that the output processors are being archived. Accepted reasons may differ based on tenant configuration.
          enum:
          - Made in error
          - Retired
          - Expended
          - Shipped
          - Contaminated
          - Expired
          - Missing
          - Other
          type: string
      required:
      - automationOutputProcessorIds
      type: object
    AutomationOutputProcessorsPaginatedList:
      description: A paginated list of automation output processors which have an
        attached file.
      example:
        nextToken: Im5ldyB0ZXN0Ig==
        automationOutputProcessors:
        - null
        - null
      properties:
        automationOutputProcessors:
          items:
            $ref: '#/components/schemas/AutomationOutputProcessor'
          type: array
        nextToken:
          example: Im5ldyB0ZXN0Ig==
          type: string
      type: object
    AutomationOutputProcessorsUnarchive:
      additionalProperties: false
      example:
        automationOutputProcessorIds:
        - automationOutputProcessorIds
        - automationOutputProcessorIds
      properties:
        automationOutputProcessorIds:
          description: Array of automation output processor IDs
          items:
            type: string
          type: array
      required:
      - automationOutputProcessorIds
      type: object
    AutomationProgressStats:
      description: Processing progress information.
      properties:
        rowsFailed:
          type: integer
        rowsSucceeded:
          type: integer
        rowsUnprocessed:
          type: integer
      type: object
    BadRequestError:
      properties:
        error:
          $ref: '#/components/schemas/BadRequestError_error'
      type: object
    BadRequestErrorBulk:
      allOf:
      - $ref: '#/components/schemas/BadRequestError'
      - $ref: '#/components/schemas/BadRequestErrorBulk_allOf'
    BarcodeValidationResult:
      example:
        isValid: true
        message: message
        barcode: barcode
      properties:
        barcode:
          description: Barcode to validate.
          type: string
        isValid:
          description: Whether the barcode is valid.
          type: boolean
        message:
          description: "If barcode is not valid, a message string explaining the error."
          nullable: true
          type: string
      type: object
    BarcodeValidationResults:
      example:
        validationResults:
        - isValid: true
          message: message
          barcode: barcode
        - isValid: true
          message: message
          barcode: barcode
      properties:
        validationResults:
          items:
            $ref: '#/components/schemas/BarcodeValidationResult'
          type: array
      type: object
    BarcodesList:
      additionalProperties: false
      example:
        barcodes:
        - barcodes
        - barcodes
      properties:
        barcodes:
          description: Array of barcodes to validate.
          items:
            type: string
          type: array
      required:
      - barcodes
      type: object
    BaseAppConfigItem:
      allOf:
      - $ref: '#/components/schemas/AppConfigItemApiMixin'
      - $ref: '#/components/schemas/BaseAppConfigItem_allOf'
      type: object
    BaseAssaySchema:
      allOf:
      - $ref: '#/components/schemas/Schema'
      - $ref: '#/components/schemas/BaseAssaySchema_allOf'
    BaseError:
      properties:
        message:
          type: string
        type:
          type: string
        userMessage:
          type: string
      type: object
    BaseNotePart:
      properties:
        indentation:
          default: 0
          description: "All notes have an indentation level - the default is 0 for\
            \ no indent. For lists, indentation gives notes hierarchy - a bulleted\
            \ list with children is modeled as one note part with indentation 1 followed\
            \ by note parts with indentation 2, for example."
          minimum: 0
          type: integer
        type:
          description: The type of the note.  Type determines what other fields are
            present.
          type: string
      type: object
    Batch:
      additionalProperties: false
      example:
        schema: null
        createdAt: 2000-01-23T04:56:07.000+00:00
        creator: ""
        defaultConcentration:
          units: units
          value: 0.8008281904610115
        archiveRecord: null
        modifiedAt: 2000-01-23T04:56:07.000+00:00
        webURL: webURL
        name: name
        id: bat_UOIr8IjL
        fields:
          key:
            displayValue: displayValue
            isMulti: true
            textValue: Amp
            type: ""
            value: null
        entity: null
      properties:
        archiveRecord:
          $ref: '#/components/schemas/AaSequence_archiveRecord'
        createdAt:
          description: DateTime at which the the result was created
          format: date-time
          readOnly: true
          type: string
        creator:
          allOf:
          - $ref: '#/components/schemas/UserSummary'
          readOnly: true
        defaultConcentration:
          $ref: '#/components/schemas/Measurement'
        entity:
          $ref: '#/components/schemas/Batch_entity'
        fields:
          additionalProperties:
            $ref: '#/components/schemas/Field'
          type: object
        id:
          example: bat_UOIr8IjL
          readOnly: true
          type: string
        modifiedAt:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        schema:
          $ref: '#/components/schemas/SchemaProperty_2'
        webURL:
          readOnly: true
          type: string
      type: object
    BatchCreate:
      additionalProperties: false
      example:
        defaultConcentration:
          units: units
          value: 0.8008281904610115
        entityId: entityId
        fields:
          key:
            displayValue: displayValue
            isMulti: true
            textValue: Amp
            type: ""
            value: null
      properties:
        defaultConcentration:
          $ref: '#/components/schemas/DefaultConcentrationSummary'
        entityId:
          description: API identifier for the entity that the batch will be added
            to.
          type: string
        fields:
          additionalProperties:
            $ref: '#/components/schemas/Field'
          type: object
      type: object
    BatchOrInaccessibleResource:
      oneOf:
      - $ref: '#/components/schemas/Batch'
      - $ref: '#/components/schemas/InaccessibleResource'
    BatchSchema:
      allOf:
      - $ref: '#/components/schemas/RegistrySchema'
      - $ref: '#/components/schemas/BatchSchema_allOf'
    BatchSchemasList:
      example:
        batchSchemas:
        - null
        - null
      properties:
        batchSchemas:
          items:
            $ref: '#/components/schemas/BatchSchema'
          readOnly: true
          type: array
      type: object
    BatchSchemasPaginatedList:
      allOf:
      - $ref: '#/components/schemas/BatchSchemasList'
      - $ref: '#/components/schemas/BatchSchemasPaginatedList_allOf'
    BatchUpdate:
      additionalProperties: false
      example:
        defaultConcentration:
          units: units
          value: 0.8008281904610115
        fields:
          key:
            displayValue: displayValue
            isMulti: true
            textValue: Amp
            type: ""
            value: null
      properties:
        defaultConcentration:
          $ref: '#/components/schemas/DefaultConcentrationSummary'
        fields:
          additionalProperties:
            $ref: '#/components/schemas/Field'
          type: object
      type: object
    BatchesArchivalChange:
      description: |
        IDs of all batches that were archived / unarchived, grouped by resource type.
      example:
        batchIds:
        - batchIds
        - batchIds
      properties:
        batchIds:
          items:
            type: string
          type: array
      type: object
    BatchesArchive:
      additionalProperties: false
      description: |
        The request body for archiving Batches.
      example:
        reason: Made in error
        batchIds:
        - batchIds
        - batchIds
      properties:
        batchIds:
          items:
            type: string
          type: array
        reason:
          description: |
            The reason for archiving the provided Batches. Accepted reasons may differ based on tenant configuration.
          enum:
          - Made in error
          - Retired
          - Expended
          - Shipped
          - Contaminated
          - Expired
          - Missing
          - Other
          type: string
      required:
      - batchIds
      - reason
      type: object
    BatchesBulkGet:
      example:
        batches:
        - schema: null
          createdAt: 2000-01-23T04:56:07.000+00:00
          creator: ""
          defaultConcentration:
            units: units
            value: 0.8008281904610115
          archiveRecord: null
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          webURL: webURL
          name: name
          id: bat_UOIr8IjL
          fields:
            key:
              displayValue: displayValue
              isMulti: true
              textValue: Amp
              type: ""
              value: null
          entity: null
        - schema: null
          createdAt: 2000-01-23T04:56:07.000+00:00
          creator: ""
          defaultConcentration:
            units: units
            value: 0.8008281904610115
          archiveRecord: null
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          webURL: webURL
          name: name
          id: bat_UOIr8IjL
          fields:
            key:
              displayValue: displayValue
              isMulti: true
              textValue: Amp
              type: ""
              value: null
          entity: null
      properties:
        batches:
          items:
            $ref: '#/components/schemas/Batch'
          type: array
      type: object
    BatchesPaginatedList:
      example:
        batches:
        - schema: null
          createdAt: 2000-01-23T04:56:07.000+00:00
          creator: ""
          defaultConcentration:
            units: units
            value: 0.8008281904610115
          archiveRecord: null
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          webURL: webURL
          name: name
          id: bat_UOIr8IjL
          fields:
            key:
              displayValue: displayValue
              isMulti: true
              textValue: Amp
              type: ""
              value: null
          entity: null
        - schema: null
          createdAt: 2000-01-23T04:56:07.000+00:00
          creator: ""
          defaultConcentration:
            units: units
            value: 0.8008281904610115
          archiveRecord: null
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          webURL: webURL
          name: name
          id: bat_UOIr8IjL
          fields:
            key:
              displayValue: displayValue
              isMulti: true
              textValue: Amp
              type: ""
              value: null
          entity: null
        nextToken: nextToken
      properties:
        batches:
          items:
            $ref: '#/components/schemas/Batch'
          type: array
        nextToken:
          type: string
      type: object
    BatchesUnarchive:
      additionalProperties: false
      description: |
        The request body for unarchiving Batches.
      example:
        batchIds:
        - batchIds
        - batchIds
      properties:
        batchIds:
          items:
            type: string
          type: array
      required:
      - batchIds
      type: object
    BenchlingApp:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/BenchlingAppUpdate'
      - $ref: '#/components/schemas/BenchlingApp_allOf'
    BenchlingAppCreate:
      additionalProperties: false
      example:
        name: My First App
        description: This is my first App!
      properties:
        description:
          example: This is my first App!
          maxLength: 8192
          type: string
        name:
          example: My First App
          maxLength: 255
          minLength: 3
          type: string
      required:
      - name
      type: object
    BenchlingAppUpdate:
      additionalProperties: false
      example:
        name: My First App
        description: This is my first App!
      properties:
        description:
          example: This is my first App!
          maxLength: 8192
          type: string
        name:
          example: My First App
          maxLength: 255
          minLength: 3
          type: string
      type: object
    BenchlingAppsArchivalChange:
      additionalProperties: false
      description: |
        IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of apps that were archived / unarchived.
      example:
        appIds:
        - app_J39na03L1nsLS34o
        - app_ae92kBv9aNSl593z
        - app_e59sjL23Pqn30xHg
      properties:
        appIds:
          example:
          - app_J39na03L1nsLS34o
          - app_ae92kBv9aNSl593z
          - app_e59sjL23Pqn30xHg
          items:
            type: string
          type: array
      type: object
    BenchlingAppsArchive:
      additionalProperties: false
      example:
        reason: Made in error
        appIds:
        - app_J39na03L1nsLS34o
        - app_ae92kBv9aNSl593z
        - app_e59sjL23Pqn30xHg
      properties:
        appIds:
          description: Array of app IDs
          example:
          - app_J39na03L1nsLS34o
          - app_ae92kBv9aNSl593z
          - app_e59sjL23Pqn30xHg
          items:
            type: string
          type: array
        reason:
          description: Reason that apps are being archived. Actual reason enum varies
            by tenant.
          enum:
          - Made in error
          - Retired
          - Other
          type: string
      required:
      - appIds
      - reason
      type: object
    BenchlingAppsPaginatedList:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/Pagination'
      - $ref: '#/components/schemas/BenchlingAppsPaginatedList_allOf'
    BenchlingAppsUnarchive:
      additionalProperties: false
      example:
        appIds:
        - app_J39na03L1nsLS34o
        - app_ae92kBv9aNSl593z
        - app_e59sjL23Pqn30xHg
      properties:
        appIds:
          description: Array of app IDs
          example:
          - app_J39na03L1nsLS34o
          - app_ae92kBv9aNSl593z
          - app_e59sjL23Pqn30xHg
          items:
            type: string
          type: array
      required:
      - appIds
      type: object
    Blob:
      example:
        name: MyInstrumentInputFile.csv
        uploadStatus: IN_PROGRESS
        id: c33fe52d-fe6a-4c98-adcd-211bdf6778f7
        mimeType: text/csv
        type: RAW_FILE
      properties:
        id:
          description: The universally unique identifier (UUID) for the blob.
          example: c33fe52d-fe6a-4c98-adcd-211bdf6778f7
          format: uuid
          type: string
        mimeType:
          description: eg. application/jpeg
          example: text/csv
          maxLength: 100
          type: string
        name:
          description: Name of the blob
          example: MyInstrumentInputFile.csv
          maxLength: 1000
          type: string
        type:
          description: |
            One of RAW_FILE or VISUALIZATION. If VISUALIZATION, the blob may be displayed as an image preview.
          enum:
          - RAW_FILE
          - VISUALIZATION
          type: string
        uploadStatus:
          enum:
          - IN_PROGRESS
          - COMPLETE
          - ABORTED
          type: string
      type: object
    BlobComplete:
      additionalProperties: false
      example:
        parts:
        - eTag: '"6f5902ac237024bdd0c176cb93063dc4"'
          partNumber: 801
        - eTag: '"6f5902ac237024bdd0c176cb93063dc4"'
          partNumber: 801
      properties:
        parts:
          items:
            $ref: '#/components/schemas/BlobPart'
          type: array
      type: object
    BlobCreate:
      additionalProperties: false
      example:
        name: name
        data64: data64
        mimeType: application/octet-stream
        type: RAW_FILE
        md5: md5
      properties:
        data64:
          description: base64 encoded file contents
          format: byte
          type: string
        md5:
          description: |
            The MD5 hash of the blob part. Note: this should be the hash of the raw data of the blob part, not the hash of the base64 encoding.
          type: string
        mimeType:
          default: application/octet-stream
          description: eg. application/jpeg
          maxLength: 100
          type: string
        name:
          description: Name of the blob
          maxLength: 1000
          type: string
        type:
          description: |
            One of RAW_FILE or VISUALIZATION. If VISUALIZATION, the blob may be displayed as an image preview.
          enum:
          - RAW_FILE
          - VISUALIZATION
          type: string
      required:
      - data64
      - md5
      - name
      - type
      type: object
    BlobMultipartCreate:
      additionalProperties: false
      example:
        name: name
        mimeType: application/octet-stream
        type: RAW_FILE
      properties:
        mimeType:
          default: application/octet-stream
          description: eg. application/jpeg
          maxLength: 100
          type: string
        name:
          description: Name of the blob
          maxLength: 1000
          type: string
        type:
          description: |
            One of RAW_FILE or VISUALIZATION. If VISUALIZATION, the blob may be displayed as an image preview.
          enum:
          - RAW_FILE
          - VISUALIZATION
          type: string
      required:
      - name
      - type
      type: object
    BlobPart:
      example:
        eTag: '"6f5902ac237024bdd0c176cb93063dc4"'
        partNumber: 801
      properties:
        eTag:
          example: '"6f5902ac237024bdd0c176cb93063dc4"'
          type: string
        partNumber:
          maximum: 10000
          minimum: 1
          type: integer
      type: object
    BlobPartCreate:
      additionalProperties: false
      example:
        data64: data64
        partNumber: 801
        md5: md5
      properties:
        data64:
          format: bytes
          type: string
        md5:
          type: string
        partNumber:
          description: |
            An integer between 1 to 10,000, inclusive. The part number must be unique per part and indicates the ordering of the part inside the final blob. The part numbers do not need to be consecutive.
          maximum: 10000
          minimum: 1
          type: integer
      required:
      - data64
      - md5
      - partNumber
      type: object
    BlobUrl:
      example:
        downloadURL: https://openapi-generator.tech
        expiresAt: 0
      properties:
        downloadURL:
          description: a pre-signed download url.
          format: uri
          type: string
        expiresAt:
          description: The unix time that the download URL expires at.
          type: integer
      type: object
    BlobsBulkGet:
      example:
        blobs:
        - name: MyInstrumentInputFile.csv
          uploadStatus: IN_PROGRESS
          id: c33fe52d-fe6a-4c98-adcd-211bdf6778f7
          mimeType: text/csv
          type: RAW_FILE
        - name: MyInstrumentInputFile.csv
          uploadStatus: IN_PROGRESS
          id: c33fe52d-fe6a-4c98-adcd-211bdf6778f7
          mimeType: text/csv
          type: RAW_FILE
      properties:
        blobs:
          items:
            $ref: '#/components/schemas/Blob'
          type: array
      type: object
    BooleanAppConfigItem:
      allOf:
      - $ref: '#/components/schemas/BaseAppConfigItem'
      - $ref: '#/components/schemas/BooleanAppConfigItem_allOf'
      type: object
    Box:
      example:
        schema: null
        creator: null
        modifiedAt: 2000-01-23T04:56:07.000+00:00
        createdAt: 2000-01-23T04:56:07.000+00:00
        emptyPositions: 6
        filledPositions: 1
        parentStorageId: parentStorageId
        size: 5
        archiveRecord: null
        webURL: webURL
        name: name
        emptyContainers: 0
        id: id
        fields:
          key:
            displayValue: displayValue
            isMulti: true
            textValue: Amp
            type: ""
            value: null
        barcode: barcode
        projectId: projectId
      properties:
        archiveRecord:
          $ref: '#/components/schemas/AaSequence_archiveRecord'
        barcode:
          nullable: true
          type: string
        createdAt:
          format: date-time
          readOnly: true
          type: string
        creator:
          $ref: '#/components/schemas/UserSummary'
        emptyContainers:
          description: The number of containers in the box that have no contents.
          readOnly: true
          type: integer
        emptyPositions:
          description: The number of empty positions for adding additional containers
            in the box.
          readOnly: true
          type: integer
        fields:
          additionalProperties:
            $ref: '#/components/schemas/Field'
          type: object
        filledPositions:
          description: The number of containers currently in the box.
          readOnly: true
          type: integer
        id:
          type: string
        modifiedAt:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        parentStorageId:
          nullable: true
          type: string
        projectId:
          nullable: true
          type: string
        schema:
          $ref: '#/components/schemas/SchemaProperty_3'
        size:
          description: The size of the box (i.e. how many containers it can store).
          readOnly: true
          type: integer
        webURL:
          readOnly: true
          type: string
      type: object
    BoxContentsPaginatedList:
      example:
        nextToken: nextToken
        containers:
        - null
        - null
      properties:
        containers:
          items:
            $ref: '#/components/schemas/ContainerWithCoordinates'
          type: array
        nextToken:
          type: string
      type: object
    BoxCreate:
      additionalProperties: false
      example:
        parentStorageId: parentStorageId
        schemaId: schemaId
        name: name
        fields:
          key:
            displayValue: displayValue
            isMulti: true
            textValue: Amp
            type: ""
            value: null
        barcode: barcode
        projectId: projectId
      properties:
        barcode:
          type: string
        fields:
          additionalProperties:
            $ref: '#/components/schemas/Field'
          type: object
        name:
          type: string
        parentStorageId:
          type: string
        projectId:
          type: string
        schemaId:
          type: string
      required:
      - schemaId
      type: object
    BoxCreationTableNotePart:
      allOf:
      - $ref: '#/components/schemas/BaseNotePart'
      - $ref: '#/components/schemas/StructuredTableApiIdentifiers'
      - $ref: '#/components/schemas/BoxCreationTableNotePart_allOf'
    BoxSchema:
      allOf:
      - $ref: '#/components/schemas/RegistrySchema'
      - $ref: '#/components/schemas/BoxSchema_allOf'
    BoxSchemasList:
      example:
        boxSchemas:
        - null
        - null
      properties:
        boxSchemas:
          items:
            $ref: '#/components/schemas/BoxSchema'
          readOnly: true
          type: array
      type: object
    BoxSchemasPaginatedList:
      allOf:
      - $ref: '#/components/schemas/BoxSchemasList'
      - $ref: '#/components/schemas/BatchSchemasPaginatedList_allOf'
    BoxUpdate:
      additionalProperties: false
      example:
        parentStorageId: parentStorageId
        name: name
        fields:
          key:
            displayValue: displayValue
            isMulti: true
            textValue: Amp
            type: ""
            value: null
        projectId: projectId
      properties:
        fields:
          additionalProperties:
            $ref: '#/components/schemas/Field'
          type: object
        name:
          type: string
        parentStorageId:
          type: string
        projectId:
          type: string
      type: object
    BoxesArchivalChange:
      description: |
        IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of boxes along with any IDs of containers that were archived / unarchived.
      example:
        containerIds:
        - containerIds
        - containerIds
        boxIds:
        - boxIds
        - boxIds
      properties:
        boxIds:
          items:
            type: string
          type: array
        containerIds:
          items:
            type: string
          type: array
      type: object
    BoxesArchive:
      additionalProperties: false
      example:
        shouldRemoveBarcodes: true
        reason: Made in error
        boxIds:
        - boxIds
        - boxIds
      properties:
        boxIds:
          description: Array of box IDs
          items:
            type: string
          type: array
        reason:
          description: |
            Reason that boxes are being archived.
          enum:
          - Made in error
          - Retired
          - Expended
          - Shipped
          - Contaminated
          - Expired
          - Missing
          - Other
          type: string
        shouldRemoveBarcodes:
          description: |
            Remove barcodes. Removing barcodes from archived storage that contain items will also remove barcodes from the contained items.
          type: boolean
      required:
      - boxIds
      - reason
      type: object
    BoxesBulkGet:
      example:
        boxes:
        - schema: null
          creator: null
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          createdAt: 2000-01-23T04:56:07.000+00:00
          emptyPositions: 6
          filledPositions: 1
          parentStorageId: parentStorageId
          size: 5
          archiveRecord: null
          webURL: webURL
          name: name
          emptyContainers: 0
          id: id
          fields:
            key:
              displayValue: displayValue
              isMulti: true
              textValue: Amp
              type: ""
              value: null
          barcode: barcode
          projectId: projectId
        - schema: null
          creator: null
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          createdAt: 2000-01-23T04:56:07.000+00:00
          emptyPositions: 6
          filledPositions: 1
          parentStorageId: parentStorageId
          size: 5
          archiveRecord: null
          webURL: webURL
          name: name
          emptyContainers: 0
          id: id
          fields:
            key:
              displayValue: displayValue
              isMulti: true
              textValue: Amp
              type: ""
              value: null
          barcode: barcode
          projectId: projectId
      properties:
        boxes:
          items:
            $ref: '#/components/schemas/Box'
          type: array
      type: object
    BoxesPaginatedList:
      example:
        boxes:
        - schema: null
          creator: null
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          createdAt: 2000-01-23T04:56:07.000+00:00
          emptyPositions: 6
          filledPositions: 1
          parentStorageId: parentStorageId
          size: 5
          archiveRecord: null
          webURL: webURL
          name: name
          emptyContainers: 0
          id: id
          fields:
            key:
              displayValue: displayValue
              isMulti: true
              textValue: Amp
              type: ""
              value: null
          barcode: barcode
          projectId: projectId
        - schema: null
          creator: null
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          createdAt: 2000-01-23T04:56:07.000+00:00
          emptyPositions: 6
          filledPositions: 1
          parentStorageId: parentStorageId
          size: 5
          archiveRecord: null
          webURL: webURL
          name: name
          emptyContainers: 0
          id: id
          fields:
            key:
              displayValue: displayValue
              isMulti: true
              textValue: Amp
              type: ""
              value: null
          barcode: barcode
          projectId: projectId
        nextToken: nextToken
      properties:
        boxes:
          items:
            $ref: '#/components/schemas/Box'
          type: array
        nextToken:
          type: string
      type: object
    BoxesUnarchive:
      additionalProperties: false
      example:
        boxIds:
        - boxIds
        - boxIds
      properties:
        boxIds:
          description: Array of box IDs
          items:
            type: string
          type: array
      required:
      - boxIds
      type: object
    BulkCreateAaSequencesAsyncTask:
      allOf:
      - $ref: '#/components/schemas/AsyncTask'
      - $ref: '#/components/schemas/BulkCreateAaSequencesAsyncTask_allOf'
      type: object
    BulkCreateContainersAsyncTask:
      allOf:
      - $ref: '#/components/schemas/AsyncTask'
      - $ref: '#/components/schemas/BulkCreateContainersAsyncTask_allOf'
      type: object
    BulkCreateCustomEntitiesAsyncTask:
      allOf:
      - $ref: '#/components/schemas/AsyncTask'
      - $ref: '#/components/schemas/BulkCreateCustomEntitiesAsyncTask_allOf'
      type: object
    BulkCreateDnaOligosAsyncTask:
      allOf:
      - $ref: '#/components/schemas/AsyncTask'
      - $ref: '#/components/schemas/BulkCreateDnaOligosAsyncTask_allOf'
      type: object
    BulkCreateDnaSequencesAsyncTask:
      allOf:
      - $ref: '#/components/schemas/AsyncTask'
      - $ref: '#/components/schemas/BulkCreateDnaSequencesAsyncTask_allOf'
      type: object
    BulkCreateFeaturesAsyncTask:
      allOf:
      - $ref: '#/components/schemas/AsyncTask'
      - $ref: '#/components/schemas/BulkCreateFeaturesAsyncTask_allOf'
      type: object
    BulkCreateRnaOligosAsyncTask:
      allOf:
      - $ref: '#/components/schemas/AsyncTask'
      - $ref: '#/components/schemas/BulkCreateRnaOligosAsyncTask_allOf'
      type: object
    BulkCreateRnaSequencesAsyncTask:
      allOf:
      - $ref: '#/components/schemas/AsyncTask'
      - $ref: '#/components/schemas/BulkCreateRnaSequencesAsyncTask_allOf'
      type: object
    BulkRegisterEntitiesAsyncTask:
      allOf:
      - $ref: '#/components/schemas/AsyncTask'
      - $ref: '#/components/schemas/AutofillPartsAsyncTask_allOf'
      type: object
    BulkUpdateAaSequencesAsyncTask:
      allOf:
      - $ref: '#/components/schemas/AsyncTask'
      - $ref: '#/components/schemas/BulkUpdateAaSequencesAsyncTask_allOf'
      type: object
    BulkUpdateContainersAsyncTask:
      allOf:
      - $ref: '#/components/schemas/AsyncTask'
      - $ref: '#/components/schemas/BulkCreateContainersAsyncTask_allOf'
      type: object
    BulkUpdateCustomEntitiesAsyncTask:
      allOf:
      - $ref: '#/components/schemas/AsyncTask'
      - $ref: '#/components/schemas/BulkCreateCustomEntitiesAsyncTask_allOf'
      type: object
    BulkUpdateDnaOligosAsyncTask:
      allOf:
      - $ref: '#/components/schemas/AsyncTask'
      - $ref: '#/components/schemas/BulkCreateDnaOligosAsyncTask_allOf'
      type: object
    BulkUpdateDnaSequencesAsyncTask:
      allOf:
      - $ref: '#/components/schemas/AsyncTask'
      - $ref: '#/components/schemas/BulkCreateDnaSequencesAsyncTask_allOf'
      type: object
    BulkUpdateRnaOligosAsyncTask:
      allOf:
      - $ref: '#/components/schemas/AsyncTask'
      - $ref: '#/components/schemas/BulkCreateRnaOligosAsyncTask_allOf'
      type: object
    BulkUpdateRnaSequencesAsyncTask:
      allOf:
      - $ref: '#/components/schemas/AsyncTask'
      - $ref: '#/components/schemas/BulkCreateRnaSequencesAsyncTask_allOf'
      type: object
    CheckboxNotePart:
      allOf:
      - $ref: '#/components/schemas/BaseNotePart'
      - $ref: '#/components/schemas/CheckboxNotePart_allOf'
      description: One "line" of a checklist
    CheckoutRecord:
      description: |2

        *assignee field* is set if status is "RESERVED" or "CHECKED_OUT", or null if status is "AVAILABLE".

        *comment field* is set when container was last reserved, checked out, or checked into.

        *modifiedAt field* is the date and time when container was last checked out, checked in, or reserved
      properties:
        assignee:
          $ref: '#/components/schemas/CheckoutRecord_assignee'
        comment:
          type: string
        modifiedAt:
          format: date-time
          type: string
        status:
          enum:
          - AVAILABLE
          - RESERVED
          - CHECKED_OUT
          type: string
      type: object
    ConflictError:
      properties:
        error:
          $ref: '#/components/schemas/ConflictError_error'
      type: object
    Container:
      example:
        schema: null
        creator: ""
        quantity:
          units: mL
          value: 10
        modifiedAt: 2000-01-23T04:56:07.000+00:00
        volume: null
        createdAt: 2000-01-23T04:56:07.000+00:00
        parentStorageId: parentStorageId
        contents:
        - batch: null
          concentration:
            units: units
            value: 0.8008281904610115
          entity: null
        - batch: null
          concentration:
            units: units
            value: 0.8008281904610115
          entity: null
        archiveRecord: null
        parentStorageSchema: null
        webURL: webURL
        name: name
        checkoutRecord: ""
        id: con_ZBL9QQWD
        fields:
          key:
            displayValue: displayValue
            isMulti: true
            textValue: Amp
            type: ""
            value: null
        barcode: barcode
        projectId: projectId
      properties:
        archiveRecord:
          $ref: '#/components/schemas/Container_archiveRecord'
        barcode:
          nullable: true
          type: string
        checkoutRecord:
          allOf:
          - $ref: '#/components/schemas/CheckoutRecord'
          readOnly: true
        contents:
          items:
            $ref: '#/components/schemas/ContainerContent'
          readOnly: true
          type: array
        createdAt:
          format: date-time
          readOnly: true
          type: string
        creator:
          allOf:
          - $ref: '#/components/schemas/UserSummary'
          readOnly: true
        fields:
          additionalProperties:
            $ref: '#/components/schemas/Field'
          type: object
        id:
          example: con_ZBL9QQWD
          readOnly: true
          type: string
        modifiedAt:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        parentStorageId:
          nullable: true
          type: string
        parentStorageSchema:
          $ref: '#/components/schemas/Container_parentStorageSchema'
        projectId:
          nullable: true
          type: string
        quantity:
          $ref: '#/components/schemas/ContainerQuantity'
        schema:
          $ref: '#/components/schemas/Container_parentStorageSchema'
        volume:
          $ref: '#/components/schemas/DeprecatedContainerVolumeForResponse'
        webURL:
          readOnly: true
          type: string
      type: object
    ContainerBulkUpdateItem:
      allOf:
      - $ref: '#/components/schemas/ContainerWriteBase'
      - $ref: '#/components/schemas/ContainerBulkUpdateItem_allOf'
    ContainerContent:
      example:
        batch: null
        concentration:
          units: units
          value: 0.8008281904610115
        entity: null
      properties:
        batch:
          $ref: '#/components/schemas/ContainerContent_batch'
        concentration:
          $ref: '#/components/schemas/Measurement'
        entity:
          $ref: '#/components/schemas/ContainerContent_entity'
      type: object
    ContainerContentUpdate:
      additionalProperties: false
      example:
        concentration:
          units: units
          value: 0.8008281904610115
      properties:
        concentration:
          $ref: '#/components/schemas/Measurement'
      required:
      - concentration
      type: object
    ContainerContentsList:
      example:
        contents:
        - batch: null
          concentration:
            units: units
            value: 0.8008281904610115
          entity: null
        - batch: null
          concentration:
            units: units
            value: 0.8008281904610115
          entity: null
      properties:
        contents:
          items:
            $ref: '#/components/schemas/ContainerContent'
          readOnly: true
          type: array
      type: object
    ContainerCreate:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/ContainerWriteBase'
      - $ref: '#/components/schemas/ContainerCreate_allOf'
    ContainerLabels:
      properties:
        barcode:
          example: VIAL001
          type: string
        id:
          example: cnt_12345
          type: string
        name:
          example: My Container
          type: string
      type: object
    ContainerQuantity:
      description: "Quantity of a container, well, or transfer. Supports mass, volume,\
        \ and other quantities."
      example:
        units: mL
        value: 10
      properties:
        units:
          enum:
          - L
          - mL
          - uL
          - nL
          - pL
          - gal (US)
          - qt (US)
          - pt (US)
          - kg
          - g
          - mg
          - ug
          - ng
          - pg
          - lb
          - oz
          - mol
          - mmol
          - umol
          - nmol
          - pmol
          - cells
          - (x10^3) cells
          - (x10^4) cells
          - (x10^5) cells
          - (x10^6) cells
          - (x10^7) cells
          - (x10^8) cells
          - (x10^9) cells
          - items
          - units
          - null
          example: mL
          nullable: true
          type: string
        value:
          example: 10
          nullable: true
          type: number
      type: object
    ContainerSchema:
      allOf:
      - $ref: '#/components/schemas/RegistrySchema'
      - $ref: '#/components/schemas/ContainerSchema_allOf'
    ContainerSchemasList:
      example:
        containerSchemas:
        - null
        - null
      properties:
        containerSchemas:
          items:
            $ref: '#/components/schemas/ContainerSchema'
          readOnly: true
          type: array
      type: object
    ContainerSchemasPaginatedList:
      allOf:
      - $ref: '#/components/schemas/ContainerSchemasList'
      - $ref: '#/components/schemas/BatchSchemasPaginatedList_allOf'
    ContainerTransfer:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/ContainerTransferBase'
      - $ref: '#/components/schemas/ContainerTransfer_allOf'
      type: object
    ContainerTransferBase:
      properties:
        sourceBatchId:
          description: |
            ID of the batch that will be transferred in. Must specify one of sourceEntityId, sourceBatchId, or sourceContainerId.
          type: string
        sourceContainerId:
          description: |
            ID of the container that will be transferred in. Must specify one of sourceEntityId, sourceBatchId, or sourceContainerId.
          type: string
        sourceEntityId:
          description: |
            ID of the entity that will be transferred in. Must specify one of sourceEntityId, sourceBatchId, or sourceContainerId.
          type: string
        transferQuantity:
          $ref: '#/components/schemas/ContainerTransferBase_transferQuantity'
        transferVolume:
          $ref: '#/components/schemas/ContainerTransferBase_transferVolume'
      type: object
    ContainerTransferDestinationContentsItem:
      properties:
        concentration:
          $ref: '#/components/schemas/Measurement'
        entityId:
          type: string
      required:
      - entityId
      type: object
    ContainerUpdate:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/ContainerWriteBase'
      - $ref: '#/components/schemas/ContainerUpdate_allOf'
    ContainerWithCoordinates:
      allOf:
      - $ref: '#/components/schemas/Container'
      - $ref: '#/components/schemas/ContainerWithCoordinates_allOf'
    ContainerWriteBase:
      properties:
        fields:
          additionalProperties:
            $ref: '#/components/schemas/Field'
          type: object
        name:
          type: string
        parentStorageId:
          description: "ID of containing parent storage, can also specify a coordinate\
            \ for plates and boxes (e.g. plt_2bAks9dx:a2)."
          type: string
    ContainersArchivalChange:
      description: |
        IDs of all items that were unarchived, grouped by resource type. This includes the IDs of containers that were unarchived.
      example:
        containerIds:
        - containerIds
        - containerIds
      properties:
        containerIds:
          items:
            type: string
          type: array
      type: object
    ContainersArchive:
      additionalProperties: false
      example:
        shouldRemoveBarcodes: true
        containerIds:
        - containerIds
        - containerIds
        reason: Made in error
      properties:
        containerIds:
          description: Array of container IDs
          items:
            type: string
          type: array
        reason:
          description: |
            Reason that containers are being archived.
          enum:
          - Made in error
          - Retired
          - Expended
          - Shipped
          - Contaminated
          - Expired
          - Missing
          - Other
          type: string
        shouldRemoveBarcodes:
          description: |
            Remove barcodes. Removing barcodes from archived storage that contain items will also remove barcodes from the contained items.
          type: boolean
      required:
      - containerIds
      - reason
      type: object
    ContainersBulkCreateRequest:
      additionalProperties: false
      example:
        containers:
        - null
        - null
        - null
        - null
        - null
      properties:
        containers:
          items:
            $ref: '#/components/schemas/ContainerCreate'
          maxItems: 1000
          type: array
      required:
      - containers
      type: object
    ContainersBulkUpdateRequest:
      additionalProperties: false
      example:
        containers:
        - null
        - null
      properties:
        containers:
          items:
            $ref: '#/components/schemas/ContainerBulkUpdateItem'
          type: array
      required:
      - containers
      type: object
    ContainersCheckin:
      additionalProperties: false
      example:
        containerIds:
        - containerIds
        - containerIds
        comments: comments
      properties:
        comments:
          type: string
        containerIds:
          description: Array of container IDs.
          items:
            type: string
          type: array
      required:
      - containerIds
      type: object
    ContainersCheckout:
      additionalProperties: false
      example:
        containerIds:
        - containerIds
        - containerIds
        comment: comment
        assigneeId: assigneeId
      properties:
        assigneeId:
          description: User or Team API ID.
          type: string
        comment:
          type: string
        containerIds:
          description: Array of container IDs.
          items:
            type: string
          type: array
      required:
      - assigneeId
      - containerIds
      type: object
    ContainersList:
      example:
        containers:
        - schema: null
          creator: ""
          quantity:
            units: mL
            value: 10
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          volume: null
          createdAt: 2000-01-23T04:56:07.000+00:00
          parentStorageId: parentStorageId
          contents:
          - batch: null
            concentration:
              units: units
              value: 0.8008281904610115
            entity: null
          - batch: null
            concentration:
              units: units
              value: 0.8008281904610115
            entity: null
          archiveRecord: null
          parentStorageSchema: null
          webURL: webURL
          name: name
          checkoutRecord: ""
          id: con_ZBL9QQWD
          fields:
            key:
              displayValue: displayValue
              isMulti: true
              textValue: Amp
              type: ""
              value: null
          barcode: barcode
          projectId: projectId
        - schema: null
          creator: ""
          quantity:
            units: mL
            value: 10
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          volume: null
          createdAt: 2000-01-23T04:56:07.000+00:00
          parentStorageId: parentStorageId
          contents:
          - batch: null
            concentration:
              units: units
              value: 0.8008281904610115
            entity: null
          - batch: null
            concentration:
              units: units
              value: 0.8008281904610115
            entity: null
          archiveRecord: null
          parentStorageSchema: null
          webURL: webURL
          name: name
          checkoutRecord: ""
          id: con_ZBL9QQWD
          fields:
            key:
              displayValue: displayValue
              isMulti: true
              textValue: Amp
              type: ""
              value: null
          barcode: barcode
          projectId: projectId
      properties:
        containers:
          items:
            $ref: '#/components/schemas/Container'
          type: array
      type: object
    ContainersPaginatedList:
      allOf:
      - $ref: '#/components/schemas/ContainersList'
      - $ref: '#/components/schemas/Pagination'
    ContainersUnarchive:
      additionalProperties: false
      example:
        containerIds:
        - containerIds
        - containerIds
      properties:
        containerIds:
          description: Array of container IDs
          items:
            type: string
          type: array
      required:
      - containerIds
      type: object
    CreateConsensusAlignmentAsyncTask:
      allOf:
      - $ref: '#/components/schemas/AsyncTask'
      - $ref: '#/components/schemas/CreateConsensusAlignmentAsyncTask_allOf'
      type: object
    CreateEntityIntoRegistry:
      properties:
        entityRegistryId:
          description: |
            Entity registry ID to set for the registered entity. Cannot specify both entityRegistryId and namingStrategy at the same time.
          type: string
        folderId:
          description: ID of the folder containing the entity. Can be left empty when
            registryId is present.
          type: string
        namingStrategy:
          $ref: '#/components/schemas/NamingStrategy'
        registryId:
          description: |
            Registry ID into which entity should be registered. this is the ID of the registry which was configured for a particular organization
            To get available registryIds, use the [/registries endpoint](#/Registry/listRegistries)

            Required in order for entities to be created directly in the registry.
          type: string
      type: object
    CreateNucleotideConsensusAlignmentAsyncTask:
      allOf:
      - $ref: '#/components/schemas/AsyncTask'
      - $ref: '#/components/schemas/CreateNucleotideConsensusAlignmentAsyncTask_allOf'
      type: object
    CreateNucleotideTemplateAlignmentAsyncTask:
      allOf:
      - $ref: '#/components/schemas/AsyncTask'
      - $ref: '#/components/schemas/CreateNucleotideConsensusAlignmentAsyncTask_allOf'
      type: object
    CreateTemplateAlignmentAsyncTask:
      allOf:
      - $ref: '#/components/schemas/AsyncTask'
      - $ref: '#/components/schemas/CreateConsensusAlignmentAsyncTask_allOf'
      type: object
    CreationOrigin:
      properties:
        application:
          nullable: true
          readOnly: true
          type: string
        originId:
          nullable: true
          readOnly: true
          type: string
        originModalUuid:
          format: uuid
          nullable: true
          readOnly: true
          type: string
        originType:
          nullable: true
          readOnly: true
          type: string
      type: object
    CustomEntitiesArchivalChange:
      description: |
        IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of custom entities along with any IDs of batches that were archived (or unarchived).
      example:
        customEntityIds:
        - customEntityIds
        - customEntityIds
        batchIds:
        - batchIds
        - batchIds
      properties:
        batchIds:
          items:
            type: string
          type: array
        customEntityIds:
          items:
            type: string
          type: array
      type: object
    CustomEntitiesArchive:
      additionalProperties: false
      description: |
        The request body for archiving custom entities.
      example:
        reason: null
        customEntityIds:
        - customEntityIds
        - customEntityIds
      properties:
        customEntityIds:
          items:
            type: string
          type: array
        reason:
          $ref: '#/components/schemas/EntityArchiveReason'
      required:
      - customEntityIds
      - reason
      type: object
    CustomEntitiesBulkCreateRequest:
      additionalProperties: false
      example:
        customEntities:
        - null
        - null
        - null
        - null
        - null
      properties:
        customEntities:
          items:
            $ref: '#/components/schemas/CustomEntityBulkCreate'
          maxItems: 2500
          type: array
      required:
      - customEntities
      type: object
    CustomEntitiesBulkUpdateRequest:
      additionalProperties: false
      example:
        customEntities:
        - id: id
        - id: id
      properties:
        customEntities:
          items:
            $ref: '#/components/schemas/CustomEntityBulkUpdate'
          type: array
      required:
      - customEntities
      type: object
    CustomEntitiesList:
      example:
        customEntities:
        - schema:
            id: ts_EM122lfJ
            name: Strain
          creator: null
          registrationOrigin: null
          aliases:
          - sBN000
          - sBN000
          customFields:
            Legacy ID:
              value: STR100
          modifiedAt: 2017-04-18T05:55:48.685345Z
          registryId: src_NetYd96a
          folderId: lib_R8KcsjhW
          entityRegistryId: sBN000
          createdAt: 2017-04-18T05:54:56.247545Z
          apiURL: https://benchling.com/api/v2/custom-entities/bfi_xCUXNVyG
          archiveRecord: null
          webURL: https://benchling.com/benchling/f/R8KcsjhW-academic-registry/bfi-xCUXNVyG-sbn000/edit
          name: sBN000
          id: bfi_xCUXNVyG
          fields:
            key:
              displayValue: displayValue
              isMulti: true
              textValue: Amp
              type: ""
              value: null
          authors:
          - null
          - null
        - schema:
            id: ts_EM122lfJ
            name: Strain
          creator: null
          registrationOrigin: null
          aliases:
          - sBN000
          - sBN000
          customFields:
            Legacy ID:
              value: STR100
          modifiedAt: 2017-04-18T05:55:48.685345Z
          registryId: src_NetYd96a
          folderId: lib_R8KcsjhW
          entityRegistryId: sBN000
          createdAt: 2017-04-18T05:54:56.247545Z
          apiURL: https://benchling.com/api/v2/custom-entities/bfi_xCUXNVyG
          archiveRecord: null
          webURL: https://benchling.com/benchling/f/R8KcsjhW-academic-registry/bfi-xCUXNVyG-sbn000/edit
          name: sBN000
          id: bfi_xCUXNVyG
          fields:
            key:
              displayValue: displayValue
              isMulti: true
              textValue: Amp
              type: ""
              value: null
          authors:
          - null
          - null
      properties:
        customEntities:
          items:
            $ref: '#/components/schemas/CustomEntity'
          type: array
      type: object
    CustomEntitiesPaginatedList:
      example:
        nextToken: nextToken
        customEntities:
        - schema:
            id: ts_EM122lfJ
            name: Strain
          creator: null
          registrationOrigin: null
          aliases:
          - sBN000
          - sBN000
          customFields:
            Legacy ID:
              value: STR100
          modifiedAt: 2017-04-18T05:55:48.685345Z
          registryId: src_NetYd96a
          folderId: lib_R8KcsjhW
          entityRegistryId: sBN000
          createdAt: 2017-04-18T05:54:56.247545Z
          apiURL: https://benchling.com/api/v2/custom-entities/bfi_xCUXNVyG
          archiveRecord: null
          webURL: https://benchling.com/benchling/f/R8KcsjhW-academic-registry/bfi-xCUXNVyG-sbn000/edit
          name: sBN000
          id: bfi_xCUXNVyG
          fields:
            key:
              displayValue: displayValue
              isMulti: true
              textValue: Amp
              type: ""
              value: null
          authors:
          - null
          - null
        - schema:
            id: ts_EM122lfJ
            name: Strain
          creator: null
          registrationOrigin: null
          aliases:
          - sBN000
          - sBN000
          customFields:
            Legacy ID:
              value: STR100
          modifiedAt: 2017-04-18T05:55:48.685345Z
          registryId: src_NetYd96a
          folderId: lib_R8KcsjhW
          entityRegistryId: sBN000
          createdAt: 2017-04-18T05:54:56.247545Z
          apiURL: https://benchling.com/api/v2/custom-entities/bfi_xCUXNVyG
          archiveRecord: null
          webURL: https://benchling.com/benchling/f/R8KcsjhW-academic-registry/bfi-xCUXNVyG-sbn000/edit
          name: sBN000
          id: bfi_xCUXNVyG
          fields:
            key:
              displayValue: displayValue
              isMulti: true
              textValue: Amp
              type: ""
              value: null
          authors:
          - null
          - null
      properties:
        customEntities:
          items:
            $ref: '#/components/schemas/CustomEntity'
          type: array
        nextToken:
          type: string
      type: object
    CustomEntitiesUnarchive:
      additionalProperties: false
      description: |
        The request body for unarchiving custom entities.
      example:
        customEntityIds:
        - customEntityIds
        - customEntityIds
      properties:
        customEntityIds:
          items:
            type: string
          type: array
      required:
      - customEntityIds
      type: object
    CustomEntity:
      example:
        schema:
          id: ts_EM122lfJ
          name: Strain
        creator: null
        registrationOrigin: null
        aliases:
        - sBN000
        - sBN000
        customFields:
          Legacy ID:
            value: STR100
        modifiedAt: 2017-04-18T05:55:48.685345Z
        registryId: src_NetYd96a
        folderId: lib_R8KcsjhW
        entityRegistryId: sBN000
        createdAt: 2017-04-18T05:54:56.247545Z
        apiURL: https://benchling.com/api/v2/custom-entities/bfi_xCUXNVyG
        archiveRecord: null
        webURL: https://benchling.com/benchling/f/R8KcsjhW-academic-registry/bfi-xCUXNVyG-sbn000/edit
        name: sBN000
        id: bfi_xCUXNVyG
        fields:
          key:
            displayValue: displayValue
            isMulti: true
            textValue: Amp
            type: ""
            value: null
        authors:
        - null
        - null
      properties:
        aliases:
          items:
            example: sBN000
            type: string
          type: array
        apiURL:
          description: The canonical url of the Custom Entity in the API.
          example: https://benchling.com/api/v2/custom-entities/bfi_xCUXNVyG
          format: uri
          readOnly: true
          type: string
        archiveRecord:
          $ref: '#/components/schemas/AaSequence_archiveRecord'
        authors:
          items:
            $ref: '#/components/schemas/UserSummary'
          type: array
        createdAt:
          example: 2017-04-18T05:54:56.247545Z
          format: date-time
          readOnly: true
          type: string
        creator:
          $ref: '#/components/schemas/CustomEntity_creator'
        customFields:
          additionalProperties:
            $ref: '#/components/schemas/CustomField'
          example:
            Legacy ID:
              value: STR100
          type: object
        entityRegistryId:
          example: sBN000
          nullable: true
          type: string
        fields:
          additionalProperties:
            $ref: '#/components/schemas/Field'
          type: object
        folderId:
          example: lib_R8KcsjhW
          nullable: true
          type: string
        id:
          example: bfi_xCUXNVyG
          type: string
        modifiedAt:
          example: 2017-04-18T05:55:48.685345Z
          format: date-time
          readOnly: true
          type: string
        name:
          example: sBN000
          type: string
        registrationOrigin:
          $ref: '#/components/schemas/AaSequence_registrationOrigin'
        registryId:
          example: src_NetYd96a
          nullable: true
          type: string
        schema:
          $ref: '#/components/schemas/CustomEntity_schema'
        webURL:
          example: https://benchling.com/benchling/f/R8KcsjhW-academic-registry/bfi-xCUXNVyG-sbn000/edit
          readOnly: true
          type: string
      type: object
    CustomEntityBaseRequest:
      properties:
        aliases:
          description: Aliases to add to the custom entity
          items:
            type: string
          type: array
        authorIds:
          description: IDs of users to set as the custom entity's authors.
          items:
            type: string
          type: array
        customFields:
          allOf:
          - $ref: '#/components/schemas/CustomFields'
          description: |
            Custom fields to add to the custom entity. Every field should have its name as a key, mapping to an object with information about the value of the field.
        fields:
          allOf:
          - $ref: '#/components/schemas/Fields'
          description: |
            Schema fields to set on the custom entity. Must correspond with the schema's field definitions. Every field should have its name as a key, mapping to an object with information about the value of the field.
        folderId:
          description: ID of the folder that the entity is moved into
          type: string
        name:
          type: string
        schemaId:
          type: string
      type: object
    CustomEntityBaseRequestForCreate:
      allOf:
      - $ref: '#/components/schemas/CustomEntityBaseRequest'
      - required:
        - name
        - schemaId
    CustomEntityBulkCreate:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/CustomEntityCreate'
    CustomEntityBulkUpdate:
      additionalProperties: true
      allOf:
      - $ref: '#/components/schemas/CustomEntityBaseRequest'
      example:
        id: id
      properties:
        id:
          type: string
      required:
      - id
    CustomEntityCreate:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/CustomEntityBaseRequestForCreate'
      - $ref: '#/components/schemas/CreateEntityIntoRegistry'
    CustomEntityRequestRegistryFields:
      properties:
        entityRegistryId:
          type: string
      type: object
    CustomEntitySummary:
      properties:
        entityType:
          enum:
          - custom_entity
          type: string
        id:
          example: bfi_xCUXNVyG
          type: string
        type:
          deprecated: true
          type: string
      type: object
    CustomEntityUpdate:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/CustomEntityBaseRequest'
      - $ref: '#/components/schemas/CustomEntityRequestRegistryFields'
    CustomEntityWithEntityType:
      allOf:
      - $ref: '#/components/schemas/CustomEntity'
      - $ref: '#/components/schemas/CustomEntityWithEntityType_allOf'
      type: object
    CustomField:
      properties:
        value:
          type: string
      type: object
    CustomFields:
      additionalProperties:
        $ref: '#/components/schemas/CustomField'
      example:
        Legacy ID:
          value: STR100
      type: object
    DateAppConfigItem:
      allOf:
      - $ref: '#/components/schemas/BaseAppConfigItem'
      - $ref: '#/components/schemas/DateAppConfigItem_allOf'
    DatetimeAppConfigItem:
      allOf:
      - $ref: '#/components/schemas/BaseAppConfigItem'
      - $ref: '#/components/schemas/DatetimeAppConfigItem_allOf'
    DefaultConcentrationSummary:
      example:
        units: units
        value: 0.8008281904610115
      properties:
        units:
          description: Units of measurement.
          type: string
        value:
          description: Amount of measurement.
          type: number
      type: object
    DeprecatedAutomationOutputProcessorsPaginatedList:
      description: Deprecated - A paginated list of automation output processors
      example:
        nextToken: Im5ldyB0ZXN0Ig==
        automationOutputProcessors:
        - null
        - null
      properties:
        automationOutputProcessors:
          items:
            $ref: '#/components/schemas/AutomationOutputProcessor'
          type: array
        nextToken:
          example: Im5ldyB0ZXN0Ig==
          type: string
      type: object
    DeprecatedContainerVolumeForInput:
      description: |
        Desired volume for a container, well, or transfer. "volume" type keys are deprecated in API requests; use the more permissive "quantity" type key instead.
      properties:
        units:
          enum:
          - pL
          - nL
          - uL
          - mL
          - L
          - null
          example: mL
          nullable: true
          type: string
        value:
          example: 10
          nullable: true
          type: number
      type: object
    DeprecatedContainerVolumeForResponse:
      allOf:
      - $ref: '#/components/schemas/ContainerQuantity'
      - description: |
          The deprecated "volume" type key in API responses can also contain non-volume quantities for back-compatibility purposes. Use the "quantity" type key instead.
    DeprecatedEntitySchema:
      allOf:
      - $ref: '#/components/schemas/EntitySchema'
      - $ref: '#/components/schemas/DeprecatedEntitySchema_allOf'
    DeprecatedEntitySchemasList:
      example:
        entitySchemas:
        - null
        - null
      properties:
        entitySchemas:
          items:
            $ref: '#/components/schemas/DeprecatedEntitySchema'
          readOnly: true
          type: array
      type: object
    DnaAlignment:
      allOf:
      - $ref: '#/components/schemas/DnaAlignmentSummary'
      - $ref: '#/components/schemas/DnaAlignment_allOf'
      type: object
    DnaAlignmentBase:
      properties:
        algorithm:
          enum:
          - mafft
          - clustalo
          type: string
        files:
          items:
            $ref: '#/components/schemas/DnaAlignmentBase_files_inner'
          type: array
        name:
          example: my new alignment
          type: string
      required:
      - algorithm
      - files
      type: object
    DnaAlignmentSummary:
      properties:
        apiURL:
          description: The canonical url of the DNA Alignment in the API.
          example: https://benchling.com/api/v2/dna-alignments/seqanl_6ZVdX98t
          format: uri
          type: string
        createdAt:
          description: DateTime the DNA Alignment was created
          format: date-time
          type: string
        id:
          example: seqanl_6ZVdX98t
          type: string
        modifiedAt:
          description: DateTime the DNA Alignment was last modified
          format: date-time
          type: string
        name:
          type: string
        referenceSequenceId:
          description: The ID of the template or consensus DNA Sequence associated
            with the DNA Alignment
          example: seq_MYmsnS1u
          type: string
        webURL:
          description: The Benchling web UI url to view the DNA Alignment
          format: uri
          type: string
      type: object
    DnaAlignmentsPaginatedList:
      allOf:
      - $ref: '#/components/schemas/Pagination'
      - $ref: '#/components/schemas/DnaAlignmentsPaginatedList_allOf'
      type: object
    DnaAnnotation:
      allOf:
      - $ref: '#/components/schemas/SequenceFeatureBase'
      - $ref: '#/components/schemas/DnaAnnotation_allOf'
    DnaConsensusAlignmentCreate:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/DnaAlignmentBase'
      - $ref: '#/components/schemas/DnaConsensusAlignmentCreate_allOf'
    DnaOligo:
      allOf:
      - $ref: '#/components/schemas/Oligo'
      - $ref: '#/components/schemas/DnaOligo_allOf'
    DnaOligoBulkUpdate:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/AaSequenceBulkUpdate_allOf'
      - $ref: '#/components/schemas/DnaOligoUpdate'
    DnaOligoCreate:
      allOf:
      - $ref: '#/components/schemas/OligoCreate'
    DnaOligoUpdate:
      allOf:
      - $ref: '#/components/schemas/OligoUpdate'
    DnaOligoWithEntityType:
      allOf:
      - $ref: '#/components/schemas/DnaOligo'
      - $ref: '#/components/schemas/DnaOligoWithEntityType_allOf'
      type: object
    DnaOligosArchivalChange:
      description: |
        IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of DNA Oligos along with any IDs of batches that were archived / unarchived.
      example:
        dnaOligoIds:
        - dnaOligoIds
        - dnaOligoIds
        batchIds:
        - batchIds
        - batchIds
      properties:
        batchIds:
          items:
            type: string
          type: array
        dnaOligoIds:
          items:
            type: string
          type: array
      type: object
    DnaOligosArchive:
      additionalProperties: false
      description: |
        The request body for archiving DNA Oligos.
      example:
        reason: null
        dnaOligoIds:
        - dnaOligoIds
        - dnaOligoIds
      properties:
        dnaOligoIds:
          items:
            type: string
          type: array
        reason:
          $ref: '#/components/schemas/EntityArchiveReason'
      required:
      - dnaOligoIds
      - reason
      type: object
    DnaOligosBulkCreateRequest:
      additionalProperties: false
      example:
        dnaOligos:
        - null
        - null
        - null
        - null
        - null
      properties:
        dnaOligos:
          items:
            $ref: '#/components/schemas/DnaOligoCreate'
          maxItems: 1000
          type: array
      type: object
    DnaOligosBulkUpdateRequest:
      additionalProperties: false
      example:
        dnaOligos:
        - null
        - null
      properties:
        dnaOligos:
          items:
            $ref: '#/components/schemas/DnaOligoBulkUpdate'
          type: array
      type: object
    DnaOligosPaginatedList:
      allOf:
      - $ref: '#/components/schemas/Pagination'
      - $ref: '#/components/schemas/DnaOligosPaginatedList_allOf'
    DnaOligosUnarchive:
      additionalProperties: false
      description: |
        The request body for unarchiving DNA Oligos.
      example:
        dnaOligoIds:
        - dnaOligoIds
        - dnaOligoIds
      properties:
        dnaOligoIds:
          items:
            type: string
          type: array
      required:
      - dnaOligoIds
      type: object
    DnaSequence:
      example:
        schema: null
        creator: null
        registrationOrigin: null
        aliases:
        - aliases
        - aliases
        isCircular: true
        customFields:
          Legacy ID:
            value: STR100
        modifiedAt: 2000-01-23T04:56:07.000+00:00
        length: 0
        annotations:
        - null
        - null
        registryId: registryId
        folderId: folderId
        bases: bases
        entityRegistryId: entityRegistryId
        createdAt: 2000-01-23T04:56:07.000+00:00
        apiURL: https://benchling.com/api/v2/dna-sequences/seq_asQya4lk
        archiveRecord: null
        translations:
        - null
        - null
        webURL: webURL
        name: name
        id: id
        fields:
          key:
            displayValue: displayValue
            isMulti: true
            textValue: Amp
            type: ""
            value: null
        primers:
        - bases: bases
          bindPosition: 6
          strand: 1
          color: color
          name: name
          oligoId: oligoId
          start: 5
          end: 1
          overhangLength: 5
        - bases: bases
          bindPosition: 6
          strand: 1
          color: color
          name: name
          oligoId: oligoId
          start: 5
          end: 1
          overhangLength: 5
      properties:
        aliases:
          items:
            type: string
          type: array
        annotations:
          items:
            $ref: '#/components/schemas/DnaAnnotation'
          type: array
        apiURL:
          description: The canonical url of the DNA Sequence in the API.
          example: https://benchling.com/api/v2/dna-sequences/seq_asQya4lk
          format: uri
          readOnly: true
          type: string
        archiveRecord:
          $ref: '#/components/schemas/AaSequence_archiveRecord'
        bases:
          type: string
        createdAt:
          format: date-time
          readOnly: true
          type: string
        creator:
          $ref: '#/components/schemas/UserSummary'
        customFields:
          additionalProperties:
            $ref: '#/components/schemas/CustomField'
          example:
            Legacy ID:
              value: STR100
          type: object
        entityRegistryId:
          nullable: true
          type: string
        fields:
          additionalProperties:
            $ref: '#/components/schemas/Field'
          type: object
        folderId:
          nullable: true
          type: string
        id:
          type: string
        isCircular:
          type: boolean
        length:
          type: integer
        modifiedAt:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        primers:
          items:
            $ref: '#/components/schemas/Primer'
          type: array
        registrationOrigin:
          $ref: '#/components/schemas/AaSequence_registrationOrigin'
        registryId:
          nullable: true
          type: string
        schema:
          $ref: '#/components/schemas/AaSequence_schema'
        translations:
          items:
            $ref: '#/components/schemas/Translation'
          type: array
        webURL:
          readOnly: true
          type: string
      type: object
    DnaSequenceBaseRequest:
      properties:
        aliases:
          description: Aliases to add to the DNA sequence
          items:
            type: string
          type: array
        annotations:
          description: |
            Annotations to create on the DNA sequence.
          items:
            $ref: '#/components/schemas/DnaAnnotation'
          type: array
        authorIds:
          description: IDs of users to set as the DNA sequence's authors.
          items:
            type: string
          type: array
        bases:
          description: |
            Base pairs for the DNA sequence.
          type: string
        customFields:
          allOf:
          - $ref: '#/components/schemas/CustomFields'
          description: |
            Custom fields to add to the DNA sequence. Every field should have its name as a key, mapping to an object with information about the value of the field.
        fields:
          allOf:
          - $ref: '#/components/schemas/Fields'
          description: |
            Fields to set on the DNA sequence. Must correspond with the schema's field definitions. Every field should have its name as a key, mapping to an object with information about the value of the field.
        folderId:
          description: |
            ID of the folder containing the DNA sequence.
          type: string
        isCircular:
          description: |
            Whether the DNA sequence is circular or linear.
          type: boolean
        name:
          description: |
            Name of the DNA sequence.
          type: string
        primers:
          items:
            $ref: '#/components/schemas/Primer'
          type: array
        schemaId:
          description: |
            ID of the DNA sequence's schema.
          type: string
        translations:
          description: |
            Translations to create on the DNA sequence. Translations are specified by either a combination of 'start' and 'end' fields, or a list of regions. Both cannot be provided.
          items:
            $ref: '#/components/schemas/Translation'
          type: array
      type: object
    DnaSequenceBaseRequestForCreate:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/DnaSequenceBaseRequest'
      - required:
        - bases
        - isCircular
        - name
    DnaSequenceBulkCreate:
      allOf:
      - $ref: '#/components/schemas/DnaSequenceCreate'
    DnaSequenceBulkUpdate:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/AaSequenceBulkUpdate_allOf'
      - $ref: '#/components/schemas/DnaSequenceBaseRequest'
    DnaSequenceCreate:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/DnaSequenceBaseRequestForCreate'
      - $ref: '#/components/schemas/CreateEntityIntoRegistry'
    DnaSequenceRequestRegistryFields:
      properties:
        entityRegistryId:
          type: string
      type: object
    DnaSequenceSummary:
      properties:
        entityType:
          enum:
          - dna_sequence
          type: string
        id:
          example: seq_ObbdtGhC
          type: string
        type:
          deprecated: true
          type: string
      type: object
    DnaSequenceUpdate:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/DnaSequenceBaseRequest'
      - $ref: '#/components/schemas/DnaSequenceRequestRegistryFields'
    DnaSequenceWithEntityType:
      allOf:
      - $ref: '#/components/schemas/DnaSequence'
      - $ref: '#/components/schemas/DnaSequenceWithEntityType_allOf'
      type: object
    DnaSequencesArchivalChange:
      description: |
        IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of DNA sequences along with any IDs of batches that were archived / unarchived.
      example:
        dnaSequenceIds:
        - dnaSequenceIds
        - dnaSequenceIds
        batchIds:
        - batchIds
        - batchIds
      properties:
        batchIds:
          items:
            type: string
          type: array
        dnaSequenceIds:
          items:
            type: string
          type: array
      type: object
    DnaSequencesArchive:
      additionalProperties: false
      description: |
        The request body for archiving DNA sequences.
      example:
        reason: null
        dnaSequenceIds:
        - dnaSequenceIds
        - dnaSequenceIds
      properties:
        dnaSequenceIds:
          items:
            type: string
          type: array
        reason:
          $ref: '#/components/schemas/EntityArchiveReason'
      required:
      - dnaSequenceIds
      - reason
      type: object
    DnaSequencesBulkCreateRequest:
      additionalProperties: false
      example:
        dnaSequences:
        - null
        - null
        - null
        - null
        - null
      properties:
        dnaSequences:
          items:
            $ref: '#/components/schemas/DnaSequenceBulkCreate'
          maxItems: 1000
          type: array
      type: object
    DnaSequencesBulkGet:
      example:
        dnaSequences:
        - schema: null
          creator: null
          registrationOrigin: null
          aliases:
          - aliases
          - aliases
          isCircular: true
          customFields:
            Legacy ID:
              value: STR100
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          length: 0
          annotations:
          - null
          - null
          registryId: registryId
          folderId: folderId
          bases: bases
          entityRegistryId: entityRegistryId
          createdAt: 2000-01-23T04:56:07.000+00:00
          apiURL: https://benchling.com/api/v2/dna-sequences/seq_asQya4lk
          archiveRecord: null
          translations:
          - null
          - null
          webURL: webURL
          name: name
          id: id
          fields:
            key:
              displayValue: displayValue
              isMulti: true
              textValue: Amp
              type: ""
              value: null
          primers:
          - bases: bases
            bindPosition: 6
            strand: 1
            color: color
            name: name
            oligoId: oligoId
            start: 5
            end: 1
            overhangLength: 5
          - bases: bases
            bindPosition: 6
            strand: 1
            color: color
            name: name
            oligoId: oligoId
            start: 5
            end: 1
            overhangLength: 5
        - schema: null
          creator: null
          registrationOrigin: null
          aliases:
          - aliases
          - aliases
          isCircular: true
          customFields:
            Legacy ID:
              value: STR100
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          length: 0
          annotations:
          - null
          - null
          registryId: registryId
          folderId: folderId
          bases: bases
          entityRegistryId: entityRegistryId
          createdAt: 2000-01-23T04:56:07.000+00:00
          apiURL: https://benchling.com/api/v2/dna-sequences/seq_asQya4lk
          archiveRecord: null
          translations:
          - null
          - null
          webURL: webURL
          name: name
          id: id
          fields:
            key:
              displayValue: displayValue
              isMulti: true
              textValue: Amp
              type: ""
              value: null
          primers:
          - bases: bases
            bindPosition: 6
            strand: 1
            color: color
            name: name
            oligoId: oligoId
            start: 5
            end: 1
            overhangLength: 5
          - bases: bases
            bindPosition: 6
            strand: 1
            color: color
            name: name
            oligoId: oligoId
            start: 5
            end: 1
            overhangLength: 5
      properties:
        dnaSequences:
          items:
            $ref: '#/components/schemas/DnaSequence'
          type: array
      type: object
    DnaSequencesBulkUpdateRequest:
      additionalProperties: false
      example:
        dnaSequences:
        - null
        - null
      properties:
        dnaSequences:
          items:
            $ref: '#/components/schemas/DnaSequenceBulkUpdate'
          type: array
      type: object
    DnaSequencesPaginatedList:
      example:
        dnaSequences:
        - schema: null
          creator: null
          registrationOrigin: null
          aliases:
          - aliases
          - aliases
          isCircular: true
          customFields:
            Legacy ID:
              value: STR100
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          length: 0
          annotations:
          - null
          - null
          registryId: registryId
          folderId: folderId
          bases: bases
          entityRegistryId: entityRegistryId
          createdAt: 2000-01-23T04:56:07.000+00:00
          apiURL: https://benchling.com/api/v2/dna-sequences/seq_asQya4lk
          archiveRecord: null
          translations:
          - null
          - null
          webURL: webURL
          name: name
          id: id
          fields:
            key:
              displayValue: displayValue
              isMulti: true
              textValue: Amp
              type: ""
              value: null
          primers:
          - bases: bases
            bindPosition: 6
            strand: 1
            color: color
            name: name
            oligoId: oligoId
            start: 5
            end: 1
            overhangLength: 5
          - bases: bases
            bindPosition: 6
            strand: 1
            color: color
            name: name
            oligoId: oligoId
            start: 5
            end: 1
            overhangLength: 5
        - schema: null
          creator: null
          registrationOrigin: null
          aliases:
          - aliases
          - aliases
          isCircular: true
          customFields:
            Legacy ID:
              value: STR100
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          length: 0
          annotations:
          - null
          - null
          registryId: registryId
          folderId: folderId
          bases: bases
          entityRegistryId: entityRegistryId
          createdAt: 2000-01-23T04:56:07.000+00:00
          apiURL: https://benchling.com/api/v2/dna-sequences/seq_asQya4lk
          archiveRecord: null
          translations:
          - null
          - null
          webURL: webURL
          name: name
          id: id
          fields:
            key:
              displayValue: displayValue
              isMulti: true
              textValue: Amp
              type: ""
              value: null
          primers:
          - bases: bases
            bindPosition: 6
            strand: 1
            color: color
            name: name
            oligoId: oligoId
            start: 5
            end: 1
            overhangLength: 5
          - bases: bases
            bindPosition: 6
            strand: 1
            color: color
            name: name
            oligoId: oligoId
            start: 5
            end: 1
            overhangLength: 5
        nextToken: nextToken
      properties:
        dnaSequences:
          items:
            $ref: '#/components/schemas/DnaSequence'
          type: array
        nextToken:
          type: string
      type: object
    DnaSequencesUnarchive:
      additionalProperties: false
      description: |
        The request body for unarchiving DNA sequences.
      example:
        dnaSequenceIds:
        - dnaSequenceIds
        - dnaSequenceIds
      properties:
        dnaSequenceIds:
          items:
            type: string
          type: array
      required:
      - dnaSequenceIds
      type: object
    DnaTemplateAlignmentCreate:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/DnaAlignmentBase'
      - $ref: '#/components/schemas/DnaTemplateAlignmentCreate_allOf'
    DnaTemplateAlignmentFile:
      properties:
        data:
          format: byte
          type: string
        name:
          type: string
      type: object
    Dropdown:
      allOf:
      - $ref: '#/components/schemas/DropdownSummary'
      - $ref: '#/components/schemas/Dropdown_allOf'
      description: "Dropdowns are registry-wide enums. Use dropdowns to standardize\
        \ on spelling and naming conventions, especially for important metadata like\
        \ resistance markers."
    DropdownCreate:
      additionalProperties: false
      example:
        name: name
        options:
        - name: name
        - name: name
        registryId: registryId
      properties:
        name:
          description: Name of the dropdown
          type: string
        options:
          description: Options to set for the dropdown
          items:
            $ref: '#/components/schemas/DropdownOptionCreate'
          type: array
        registryId:
          description: ID of registry in which to create the dropdown. Required if
            multiple registries exist.
          nullable: true
          pattern: ^src_\w+
          type: string
      required:
      - name
      - options
      type: object
    DropdownFieldDefinition:
      allOf:
      - $ref: '#/components/schemas/FieldDefinition'
      - $ref: '#/components/schemas/DropdownFieldDefinition_allOf'
    DropdownOption:
      properties:
        archiveRecord:
          $ref: '#/components/schemas/AaSequence_archiveRecord'
        id:
          type: string
        name:
          type: string
      type: object
    DropdownOptionCreate:
      example:
        name: name
      properties:
        name:
          type: string
      required:
      - name
      type: object
    DropdownOptionUpdate:
      example:
        name: name
        id: sfs_9cGQIqS3
      properties:
        id:
          description: "ID of the dropdown option to update, omitted if creating a\
            \ new option."
          example: sfs_9cGQIqS3
          pattern: ^sfs_\w+
          type: string
        name:
          description: Name of the dropdown option.
          type: string
      required:
      - name
      type: object
    DropdownOptionsArchivalChange:
      description: |
        IDs of all items that were archived or unarchived.
      example:
        dropdownOptionIds:
        - dropdownOptionIds
        - dropdownOptionIds
      properties:
        dropdownOptionIds:
          items:
            type: string
          type: array
      type: object
    DropdownOptionsArchive:
      additionalProperties: false
      example:
        reason: Made in error
        dropdownOptionIds:
        - dropdownOptionIds
        - dropdownOptionIds
      properties:
        dropdownOptionIds:
          description: Array of dropdown option IDs
          items:
            type: string
          type: array
        reason:
          description: |
            Reason that dropdown options are being archived.
          enum:
          - Made in error
          - Retired
          - Other
          type: string
      type: object
    DropdownOptionsUnarchive:
      additionalProperties: false
      example:
        dropdownOptionIds:
        - dropdownOptionIds
        - dropdownOptionIds
      properties:
        dropdownOptionIds:
          description: Array of dropdown option IDs
          items:
            type: string
          type: array
      type: object
    DropdownSummariesPaginatedList:
      example:
        nextToken: nextToken
        dropdowns:
        - name: name
          id: id
        - name: name
          id: id
      properties:
        dropdowns:
          items:
            $ref: '#/components/schemas/DropdownSummary'
          type: array
        nextToken:
          type: string
      type: object
    DropdownSummary:
      example:
        name: name
        id: id
      properties:
        id:
          description: ID of the dropdown
          type: string
        name:
          description: Name of the dropdown
          type: string
      type: object
    DropdownUpdate:
      additionalProperties: false
      example:
        options:
        - name: name
          id: sfs_9cGQIqS3
        - name: name
          id: sfs_9cGQIqS3
      properties:
        options:
          description: Options to set for the dropdown
          items:
            $ref: '#/components/schemas/DropdownOptionUpdate'
          type: array
      required:
      - options
      type: object
    DropdownsRegistryList:
      example:
        dropdowns:
        - name: name
          id: id
        - name: name
          id: id
      properties:
        dropdowns:
          items:
            $ref: '#/components/schemas/DropdownSummary'
          type: array
      type: object
    EmptyObject:
      type: object
    Entity:
      oneOf:
      - $ref: '#/components/schemas/DnaSequence'
      - $ref: '#/components/schemas/AaSequence'
      - $ref: '#/components/schemas/Mixture'
      - $ref: '#/components/schemas/DnaOligo'
      - $ref: '#/components/schemas/RnaOligo'
      - $ref: '#/components/schemas/CustomEntity'
      type: object
    EntityArchiveReason:
      description: |
        The reason for archiving the provided entities. Accepted reasons may differ based on tenant configuration.
      enum:
      - Made in error
      - Retired
      - Expended
      - Shipped
      - Contaminated
      - Expired
      - Missing
      - Other
      type: string
    EntityLabels:
      properties:
        entityRegistryId:
          example: REAG000
          nullable: true
          type: string
        id:
          example: bfi_12345
          type: string
        name:
          example: Deionized Water
          type: string
      type: object
    EntityOrInaccessibleResource:
      oneOf:
      - $ref: '#/components/schemas/Entity'
      - $ref: '#/components/schemas/InaccessibleResource'
      type: object
    EntityRegisteredEvent:
      allOf:
      - $ref: '#/components/schemas/EventBase'
      - $ref: '#/components/schemas/EntityRegisteredEvent_allOf'
    EntitySchema:
      allOf:
      - $ref: '#/components/schemas/RegistrySchema'
      - $ref: '#/components/schemas/EntitySchema_allOf'
      title: EntitySchema
    EntitySchemaAppConfigItem:
      allOf:
      - $ref: '#/components/schemas/BaseAppConfigItem'
      - $ref: '#/components/schemas/LinkedAppConfigResourceMixin'
      - $ref: '#/components/schemas/EntitySchemaAppConfigItem_allOf'
    EntitySchemasPaginatedList:
      example:
        nextToken: nextToken
        entitySchemas:
        - null
        - null
      properties:
        entitySchemas:
          items:
            $ref: '#/components/schemas/EntitySchema'
          readOnly: true
          type: array
        nextToken:
          type: string
      type: object
    Entries:
      example:
        entries:
        - reviewRecord: "{}"
          schema: null
          creator: null
          customFields:
            Legacy ID:
              value: STR100
          modifiedAt: modifiedAt
          folderId: folderId
          createdAt: 2000-01-23T04:56:07.000+00:00
          apiURL: https://benchling.com/api/v2/entries/etr_tv7m7B78
          archiveRecord: null
          webURL: webURL
          assignedReviewers:
          - null
          - null
          name: name
          days:
          - date: date
            notes:
            - null
            - null
          - date: date
            notes:
            - null
            - null
          entryTemplateId: entryTemplateId
          id: id
          displayId: displayId
          fields:
            key:
              displayValue: displayValue
              isMulti: true
              textValue: Amp
              type: ""
              value: null
          authors:
          - null
          - null
        - reviewRecord: "{}"
          schema: null
          creator: null
          customFields:
            Legacy ID:
              value: STR100
          modifiedAt: modifiedAt
          folderId: folderId
          createdAt: 2000-01-23T04:56:07.000+00:00
          apiURL: https://benchling.com/api/v2/entries/etr_tv7m7B78
          archiveRecord: null
          webURL: webURL
          assignedReviewers:
          - null
          - null
          name: name
          days:
          - date: date
            notes:
            - null
            - null
          - date: date
            notes:
            - null
            - null
          entryTemplateId: entryTemplateId
          id: id
          displayId: displayId
          fields:
            key:
              displayValue: displayValue
              isMulti: true
              textValue: Amp
              type: ""
              value: null
          authors:
          - null
          - null
      properties:
        entries:
          items:
            $ref: '#/components/schemas/Entry'
          type: array
      type: object
    EntriesArchivalChange:
      description: |
        IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of entries that changed..
      example:
        entryIds:
        - entryIds
        - entryIds
      properties:
        entryIds:
          items:
            type: string
          type: array
      type: object
    EntriesArchive:
      additionalProperties: false
      example:
        reason: Made in error
        entryIds:
        - entryIds
        - entryIds
      properties:
        entryIds:
          description: Array of entry IDs
          items:
            type: string
          type: array
        reason:
          description: |
            Reason that entries are being archived. One of ["Made in error", "Retired", "Other"].
          enum:
          - Made in error
          - Retired
          - Other
          type: string
      required:
      - entryIds
      - reason
      type: object
    EntriesPaginatedList:
      example:
        entries:
        - reviewRecord: "{}"
          schema: null
          creator: null
          customFields:
            Legacy ID:
              value: STR100
          modifiedAt: modifiedAt
          folderId: folderId
          createdAt: 2000-01-23T04:56:07.000+00:00
          apiURL: https://benchling.com/api/v2/entries/etr_tv7m7B78
          archiveRecord: null
          webURL: webURL
          assignedReviewers:
          - null
          - null
          name: name
          days:
          - date: date
            notes:
            - null
            - null
          - date: date
            notes:
            - null
            - null
          entryTemplateId: entryTemplateId
          id: id
          displayId: displayId
          fields:
            key:
              displayValue: displayValue
              isMulti: true
              textValue: Amp
              type: ""
              value: null
          authors:
          - null
          - null
        - reviewRecord: "{}"
          schema: null
          creator: null
          customFields:
            Legacy ID:
              value: STR100
          modifiedAt: modifiedAt
          folderId: folderId
          createdAt: 2000-01-23T04:56:07.000+00:00
          apiURL: https://benchling.com/api/v2/entries/etr_tv7m7B78
          archiveRecord: null
          webURL: webURL
          assignedReviewers:
          - null
          - null
          name: name
          days:
          - date: date
            notes:
            - null
            - null
          - date: date
            notes:
            - null
            - null
          entryTemplateId: entryTemplateId
          id: id
          displayId: displayId
          fields:
            key:
              displayValue: displayValue
              isMulti: true
              textValue: Amp
              type: ""
              value: null
          authors:
          - null
          - null
        nextToken: nextToken
      properties:
        entries:
          items:
            $ref: '#/components/schemas/Entry'
          type: array
        nextToken:
          type: string
      type: object
    EntriesUnarchive:
      additionalProperties: false
      example:
        entryIds:
        - entryIds
        - entryIds
      properties:
        entryIds:
          description: Array of entry IDs
          items:
            type: string
          type: array
      required:
      - entryIds
      type: object
    Entry:
      description: |
        Entries are notes that users can take. They're organized by "days" (which are user-configurable) and modeled within each day as a list of "notes." Each note has a type - the simplest is a "text" type, but lists, tables, and external files are also supported.

        *Note:* the current Entry resource has a few limitations:
        - Formatting information is not yet supported. Header formatting, bolding, and other stylistic information is not presented.
        - Data in tables is presented as text always - numeric values will need to be parsed into floats or integers, as appropriate.

        Note: Data in Results tables are not accessible through this API call. Results table data can be called through the Results API calls.
      example:
        reviewRecord: "{}"
        schema: null
        creator: null
        customFields:
          Legacy ID:
            value: STR100
        modifiedAt: modifiedAt
        folderId: folderId
        createdAt: 2000-01-23T04:56:07.000+00:00
        apiURL: https://benchling.com/api/v2/entries/etr_tv7m7B78
        archiveRecord: null
        webURL: webURL
        assignedReviewers:
        - null
        - null
        name: name
        days:
        - date: date
          notes:
          - null
          - null
        - date: date
          notes:
          - null
          - null
        entryTemplateId: entryTemplateId
        id: id
        displayId: displayId
        fields:
          key:
            displayValue: displayValue
            isMulti: true
            textValue: Amp
            type: ""
            value: null
        authors:
        - null
        - null
      properties:
        apiURL:
          description: The canonical url of the Entry in the API.
          example: https://benchling.com/api/v2/entries/etr_tv7m7B78
          format: uri
          readOnly: true
          type: string
        archiveRecord:
          $ref: '#/components/schemas/Entry_archiveRecord'
        assignedReviewers:
          description: |
            Array of users assigned to review the entry, if any.
          items:
            $ref: '#/components/schemas/UserSummary'
          type: array
        authors:
          description: |
            Array of UserSummary Resources of the authors of the entry. This defaults to the creator but can be manually changed.
          items:
            $ref: '#/components/schemas/UserSummary'
          type: array
        createdAt:
          description: DateTime the entry was created at
          format: date-time
          readOnly: true
          type: string
        creator:
          $ref: '#/components/schemas/Entry_creator'
        customFields:
          additionalProperties:
            $ref: '#/components/schemas/CustomField'
          example:
            Legacy ID:
              value: STR100
          type: object
        days:
          description: |
            Array of day objects. Each day object has a date field (string) and notes field (array of notes, expand further for details on note types).
          items:
            $ref: '#/components/schemas/EntryDay'
          type: array
        displayId:
          description: User-friendly ID of the entry
          type: string
        entryTemplateId:
          description: ID of the Entry Template this Entry was created from
          nullable: true
          type: string
        fields:
          additionalProperties:
            $ref: '#/components/schemas/Field'
          type: object
        folderId:
          description: ID of the folder that contains the entry
          type: string
        id:
          description: ID of the entry
          type: string
        modifiedAt:
          description: DateTime the entry was last modified
          type: string
        name:
          description: Title of the entry
          type: string
        reviewRecord:
          description: Review record if set
          nullable: true
          type: object
        schema:
          $ref: '#/components/schemas/SchemaProperty_4'
        webURL:
          description: URL of the entry
          type: string
      type: object
    EntryById:
      example:
        entry:
          reviewRecord: "{}"
          schema: null
          creator: null
          customFields:
            Legacy ID:
              value: STR100
          modifiedAt: modifiedAt
          folderId: folderId
          createdAt: 2000-01-23T04:56:07.000+00:00
          apiURL: https://benchling.com/api/v2/entries/etr_tv7m7B78
          archiveRecord: null
          webURL: webURL
          assignedReviewers:
          - null
          - null
          name: name
          days:
          - date: date
            notes:
            - null
            - null
          - date: date
            notes:
            - null
            - null
          entryTemplateId: entryTemplateId
          id: id
          displayId: displayId
          fields:
            key:
              displayValue: displayValue
              isMulti: true
              textValue: Amp
              type: ""
              value: null
          authors:
          - null
          - null
      properties:
        entry:
          $ref: '#/components/schemas/Entry'
      type: object
    EntryCreate:
      additionalProperties: false
      example:
        customFields: ""
        schemaId: schemaId
        name: name
        entryTemplateId: entryTemplateId
        fields: ""
        authorIds: null
        folderId: folderId
        initialTables:
        - csvData: csvData
          templateTableID: templateTableID
        - csvData: csvData
          templateTableID: templateTableID
      properties:
        authorIds:
          $ref: '#/components/schemas/EntryCreate_authorIds'
        customFields:
          allOf:
          - $ref: '#/components/schemas/CustomFields'
          description: Custom fields to add to the entry
        entryTemplateId:
          description: ID of the template to clone the entry from
          type: string
        fields:
          allOf:
          - $ref: '#/components/schemas/Fields'
          description: |
            Fields to set on the entry. Must correspond with the schema's field definitions.
        folderId:
          description: ID of the folder that will contain the entry
          type: string
        initialTables:
          description: |
            An array of table API IDs and blob id pairs to seed tables from the template while creating the entry. The entryTemplateId parameter must be set to use this parameter. The table API IDs should be the API Identifiers of the tables in the given template.
            - If a template table has one row, the values in that row act as default values for cloned entries.
            - If a template table has multiple rows, there is no default value and those rows are added to the cloned entry along with the provided csv data.
            - If a table has default values, they will be populated in any respective undefined columns in the csv data.
            - If a table has no default values, undefined columns from csv data will be empty.
            - If no csv data is provided for a table, the table in the entry will be populated with whatever values are in the respective template table.
          items:
            $ref: '#/components/schemas/InitialTable'
          type: array
        name:
          description: Name of the entry
          type: string
        schemaId:
          description: ID of the entry's schema
          type: string
      required:
      - folderId
      - name
      type: object
    EntryCreatedEvent:
      allOf:
      - $ref: '#/components/schemas/EventBase'
      - $ref: '#/components/schemas/EntryCreatedEvent_allOf'
    EntryDay:
      example:
        date: date
        notes:
        - null
        - null
      properties:
        date:
          description: A Date string
          type: string
        notes:
          items:
            $ref: '#/components/schemas/EntryDay_notes_inner'
          type: array
      type: object
    EntryExternalFile:
      description: |
        The ExternalFile resource stores metadata about the file. The actual original file can be downloaded by using the 'downloadURL' property.
      example:
        size: 6
        downloadURL: downloadURL
        id: id
        expiresAt: 0
      properties:
        downloadURL:
          description: |
            A short-lived URL that can be used to download the original file.
          type: string
        expiresAt:
          description: UNIX timestamp when downloadURL expires.
          type: integer
        id:
          description: ID of the external file
          type: string
        size:
          description: "Size, in bytes, of the external file"
          type: integer
      type: object
    EntryExternalFileById:
      example:
        externalFile:
          size: 6
          downloadURL: downloadURL
          id: id
          expiresAt: 0
      properties:
        externalFile:
          $ref: '#/components/schemas/EntryExternalFile'
      type: object
    EntryLink:
      description: |
        Links are contained within notes to reference resources that live outside of the entry. A link can target an external resource via an http(s):// hyperlink or a Benchling resource via @-mentions and drag-n-drop.
      properties:
        id:
          description: |
            For linked Benchling resources, this will be the ID of that resource (e.g., 'seq_RhYGVnHF'). Omitted for "link" types.
          type: string
        type:
          description: |
            The type of resource being linked. For hyperlinks: 'link'. For linked Benchling resources, one of: 'user', 'request', 'entry', 'stage_entry', 'protocol', 'workflow', 'custom_entity', 'aa_sequence', 'dna_sequence', 'batch', 'box', 'container', 'location', 'plate'.
          enum:
          - link
          - user
          - request
          - entry
          - stage_entry
          - protocol
          - workflow
          - custom_entity
          - aa_sequence
          - dna_sequence
          - batch
          - box
          - container
          - location
          - plate
          type: string
        webURL:
          description: |
            Canonical URL of the linked Benchling resource (if you have at least READ authorization for that resource), or the explicit URL provided as hyperlink for "link" types. Note: locations do not currently have a URL.
          nullable: true
          type: string
      type: object
    EntrySchema:
      description: Entry schema
      properties:
        id:
          description: ID of the entry schema
          type: string
        modifiedAt:
          description: DateTime the Entry Schema was last modified
          example: 2017-04-18T05:55:48.685345Z
          format: date-time
          type: string
        name:
          description: Name of the entry schema
          type: string
      type: object
    EntrySchemaDetailed:
      allOf:
      - $ref: '#/components/schemas/RegistrySchema'
      - $ref: '#/components/schemas/EntrySchemaDetailed_allOf'
    EntrySchemasPaginatedList:
      example:
        nextToken: nextToken
        entrySchemas:
        - null
        - null
      properties:
        entrySchemas:
          items:
            $ref: '#/components/schemas/EntrySchemaDetailed'
          readOnly: true
          type: array
        nextToken:
          type: string
      type: object
    EntryTable:
      description: |
        Actual tabular data with rows and columns of text on the note.
      properties:
        columnLabels:
          description: |
            Array of strings, with one item per column. Defaults to null, if the user is using the default, but is set if the user has given a custom name to the column.
          items:
            nullable: true
            type: string
          type: array
        name:
          description: |
            Name of the table - defaults to e.g. Table1 but can be renamed.
          type: string
        rows:
          description: Array of row objects.
          items:
            $ref: '#/components/schemas/EntryTableRow'
          type: array
      type: object
    EntryTableCell:
      properties:
        link:
          $ref: '#/components/schemas/EntryTableCell_link'
        text:
          description: |
            The textual content of the cell. If the cell was originally a formula, this will be the evaluated version of the formula.
          type: string
      type: object
    EntryTableRow:
      description: Each has property 'cells' that is an array of cell objects
      properties:
        cells:
          items:
            $ref: '#/components/schemas/EntryTableCell'
          type: array
      type: object
    EntryTemplate:
      additionalProperties: false
      description: |
        Entry templates are templates that users can base new notebook entries off of.
      example:
        schema: null
        createdAt: 2000-01-23T04:56:07.000+00:00
        creator: null
        apiURL: https://benchling.com/api/v2/entry-templates/tmpl_tv7m7B78
        customFields:
          Legacy ID:
            value: STR100
        modifiedAt: modifiedAt
        webURL: webURL
        name: name
        days:
        - notes:
          - null
          - null
          day: 1
        - notes:
          - null
          - null
          day: 1
        templateCollectionId: templateCollectionId
        id: id
        fields:
          key:
            displayValue: displayValue
            isMulti: true
            textValue: Amp
            type: ""
            value: null
      properties:
        apiURL:
          description: The canonical url of the Entry Template in the API.
          example: https://benchling.com/api/v2/entry-templates/tmpl_tv7m7B78
          format: uri
          readOnly: true
          type: string
        createdAt:
          description: DateTime the template was created at
          format: date-time
          readOnly: true
          type: string
        creator:
          $ref: '#/components/schemas/EntryTemplate_creator'
        customFields:
          additionalProperties:
            $ref: '#/components/schemas/CustomField'
          example:
            Legacy ID:
              value: STR100
          type: object
        days:
          description: |
            Array of day objects. Each day object has a day index (integer) and notes field (array of notes, expand further for details on note types).
          items:
            $ref: '#/components/schemas/EntryTemplateDay'
          type: array
        fields:
          additionalProperties:
            $ref: '#/components/schemas/Field'
          type: object
        id:
          description: ID of the entry template
          type: string
        modifiedAt:
          description: DateTime the template was last modified
          type: string
        name:
          description: Title of the template
          type: string
        schema:
          $ref: '#/components/schemas/SchemaProperty_4'
        templateCollectionId:
          description: ID of the collection that contains the template
          type: string
        webURL:
          description: URL of the template
          type: string
      type: object
    EntryTemplateDay:
      example:
        notes:
        - null
        - null
        day: 1
      properties:
        day:
          description: 1 indexed day signifier.
          minimum: 1
          type: integer
        notes:
          items:
            $ref: '#/components/schemas/EntryTemplateDay_notes_inner'
          type: array
      type: object
    EntryTemplatesPaginatedList:
      additionalProperties: false
      example:
        nextToken: nextToken
        entryTemplates:
        - schema: null
          createdAt: 2000-01-23T04:56:07.000+00:00
          creator: null
          apiURL: https://benchling.com/api/v2/entry-templates/tmpl_tv7m7B78
          customFields:
            Legacy ID:
              value: STR100
          modifiedAt: modifiedAt
          webURL: webURL
          name: name
          days:
          - notes:
            - null
            - null
            day: 1
          - notes:
            - null
            - null
            day: 1
          templateCollectionId: templateCollectionId
          id: id
          fields:
            key:
              displayValue: displayValue
              isMulti: true
              textValue: Amp
              type: ""
              value: null
        - schema: null
          createdAt: 2000-01-23T04:56:07.000+00:00
          creator: null
          apiURL: https://benchling.com/api/v2/entry-templates/tmpl_tv7m7B78
          customFields:
            Legacy ID:
              value: STR100
          modifiedAt: modifiedAt
          webURL: webURL
          name: name
          days:
          - notes:
            - null
            - null
            day: 1
          - notes:
            - null
            - null
            day: 1
          templateCollectionId: templateCollectionId
          id: id
          fields:
            key:
              displayValue: displayValue
              isMulti: true
              textValue: Amp
              type: ""
              value: null
      properties:
        entryTemplates:
          items:
            $ref: '#/components/schemas/EntryTemplate'
          type: array
        nextToken:
          type: string
      type: object
    EntryUpdate:
      additionalProperties: false
      example:
        schemaId: schemaId
        name: name
        fields: ""
        authorIds: authorIds
        folderId: folderId
      properties:
        authorIds:
          description: IDs of users to set as the entry's authors.
          type: string
        fields:
          allOf:
          - $ref: '#/components/schemas/Fields'
          description: Schema fields to set on the entry
        folderId:
          description: ID of the folder that will contain the entry
          type: string
        name:
          description: New name of the entry
          type: string
        schemaId:
          description: ID of the schema for the entry
          type: string
      type: object
    EntryUpdatedFieldsEvent:
      allOf:
      - $ref: '#/components/schemas/EventBase'
      - $ref: '#/components/schemas/UpdateEventMixin'
      - $ref: '#/components/schemas/EntryUpdatedFieldsEvent_allOf'
    EntryUpdatedReviewRecordEvent:
      allOf:
      - $ref: '#/components/schemas/EventBase'
      - $ref: '#/components/schemas/UpdateEventMixin'
      - $ref: '#/components/schemas/EntryUpdatedReviewRecordEvent_allOf'
    Event:
      discriminator:
        mapping:
          v2-alpha.stageEntry.created: '#/components/schemas/StageEntryCreatedEvent'
          v2-beta.automationInputGenerator.completed: '#/components/schemas/AutomationInputGeneratorCompletedV2BetaEvent'
          v2-beta.automationOutputProcessor.completed: '#/components/schemas/AutomationOutputProcessorCompletedV2BetaEvent'
          v2-beta.automationOutputProcessor.uploaded: '#/components/schemas/AutomationOutputProcessorUploadedV2BetaEvent'
          v2.assayRun.created: '#/components/schemas/AssayRunCreatedEvent'
          v2.assayRun.updated.fields: '#/components/schemas/AssayRunUpdatedFieldsEvent'
          v2.entity.registered: '#/components/schemas/EntityRegisteredEvent'
          v2.entry.created: '#/components/schemas/EntryCreatedEvent'
          v2.entry.updated.fields: '#/components/schemas/EntryUpdatedFieldsEvent'
          v2.entry.updated.reviewRecord: '#/components/schemas/EntryUpdatedReviewRecordEvent'
          v2.request.created: '#/components/schemas/RequestCreatedEvent'
          v2.request.updated.fields: '#/components/schemas/RequestUpdatedFieldsEvent'
          v2.workflowOutput.created: '#/components/schemas/WorkflowOutputCreatedEvent'
          v2.workflowOutput.updated.fields: '#/components/schemas/WorkflowOutputUpdatedFieldsEvent'
          v2.workflowTask.created: '#/components/schemas/WorkflowTaskCreatedEvent'
          v2.workflowTask.updated.assignee: '#/components/schemas/WorkflowTaskUpdatedAssigneeEvent'
          v2.workflowTask.updated.fields: '#/components/schemas/WorkflowTaskUpdatedFieldsEvent'
          v2.workflowTask.updated.scheduledOn: '#/components/schemas/WorkflowTaskUpdatedScheduledOnEvent'
          v2.workflowTask.updated.status: '#/components/schemas/WorkflowTaskUpdatedStatusEvent'
          v2.workflowTaskGroup.created: '#/components/schemas/WorkflowTaskGroupCreatedEvent'
          v2.workflowTaskGroup.updated.watchers: '#/components/schemas/WorkflowTaskGroupUpdatedWatchersEvent'
        propertyName: eventType
      oneOf:
      - $ref: '#/components/schemas/EntityRegisteredEvent'
      - $ref: '#/components/schemas/EntryCreatedEvent'
      - $ref: '#/components/schemas/EntryUpdatedFieldsEvent'
      - $ref: '#/components/schemas/EntryUpdatedReviewRecordEvent'
      - $ref: '#/components/schemas/StageEntryCreatedEvent'
      - $ref: '#/components/schemas/StageEntryUpdatedFieldsEvent'
      - $ref: '#/components/schemas/StageEntryUpdatedReviewRecordEvent'
      - $ref: '#/components/schemas/RequestCreatedEvent'
      - $ref: '#/components/schemas/RequestUpdatedFieldsEvent'
      - $ref: '#/components/schemas/AssayRunCreatedEvent'
      - $ref: '#/components/schemas/AssayRunUpdatedFieldsEvent'
      - $ref: '#/components/schemas/AutomationInputGeneratorCompletedV2BetaEvent'
      - $ref: '#/components/schemas/AutomationOutputProcessorCompletedV2BetaEvent'
      - $ref: '#/components/schemas/AutomationOutputProcessorUploadedV2BetaEvent'
      - $ref: '#/components/schemas/WorkflowTaskGroupCreatedEvent'
      - $ref: '#/components/schemas/WorkflowTaskCreatedEvent'
      - $ref: '#/components/schemas/WorkflowTaskUpdatedFieldsEvent'
      - $ref: '#/components/schemas/WorkflowTaskUpdatedStatusEvent'
      - $ref: '#/components/schemas/WorkflowTaskUpdatedAssigneeEvent'
      - $ref: '#/components/schemas/WorkflowTaskUpdatedScheduledOnEvent'
      - $ref: '#/components/schemas/WorkflowTaskGroupUpdatedWatchersEvent'
      - $ref: '#/components/schemas/WorkflowOutputCreatedEvent'
      - $ref: '#/components/schemas/WorkflowOutputUpdatedFieldsEvent'
    EventBase:
      properties:
        createdAt:
          format: date-time
          type: string
        deprecated:
          example: false
          type: boolean
        excludedProperties:
          description: |
            These properties have been dropped from the payload due to size.
          items:
            type: string
          type: array
        id:
          type: string
        schema:
          $ref: '#/components/schemas/EventBase_schema'
      type: object
    EventsPaginatedList:
      example:
        nextToken: nextToken
        events:
        - null
        - null
      properties:
        events:
          items:
            $ref: '#/components/schemas/Event'
          type: array
        nextToken:
          type: string
      type: object
    ExecuteSampleGroups:
      description: |
        The response is intentionally empty.
      type: object
    ExportItemRequest:
      additionalProperties: false
      example:
        id: etr_1X1AlQPD
      properties:
        id:
          description: ID of the item to export
          example: etr_1X1AlQPD
          type: string
      required:
      - id
      type: object
    ExportsAsyncTask:
      allOf:
      - $ref: '#/components/schemas/AsyncTask'
      - $ref: '#/components/schemas/ExportsAsyncTask_allOf'
      type: object
    ExternalFileNotePart:
      allOf:
      - $ref: '#/components/schemas/BaseNotePart'
      - $ref: '#/components/schemas/ExternalFileNotePart_allOf'
      description: An attached user-uploaded file
    Feature:
      allOf:
      - $ref: '#/components/schemas/FeatureBase'
      - $ref: '#/components/schemas/Feature_allOf'
      description: A feature from a feature library
      type: object
    FeatureBase:
      properties:
        color:
          description: The color of the annotations generated by the feature. Must
            be a valid hex string
          example: '#F58A5E'
          type: string
        featureLibraryId:
          description: The id of the feature library the feature belongs to
          example: featlib_19kd9aDq
          type: string
        featureType:
          description: |
            The type of feature, like gene, promoter, etc. Note: This is an arbitrary string, not an enum
          nullable: true
          type: string
        name:
          description: The name of the feature
          type: string
        pattern:
          description: The pattern used for matching during auto-annotation.
          type: string
      type: object
    FeatureBulkCreate:
      allOf:
      - $ref: '#/components/schemas/FeatureCreate'
    FeatureCreate:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/FeatureBase'
      - $ref: '#/components/schemas/FeatureCreate_allOf'
      - required:
        - featureLibraryId
        - featureType
        - matchType
        - name
        - pattern
      description: Inputs for a new feature
      type: object
    FeatureLibrariesPaginatedList:
      allOf:
      - $ref: '#/components/schemas/Pagination'
      - $ref: '#/components/schemas/FeatureLibrariesPaginatedList_allOf'
      description: A paginated list of feature libraries
      type: object
    FeatureLibrary:
      allOf:
      - $ref: '#/components/schemas/FeatureLibraryBase'
      - $ref: '#/components/schemas/FeatureLibrary_allOf'
      description: A feature library
      type: object
    FeatureLibraryBase:
      properties:
        description:
          description: The description for the feature library
          type: string
        name:
          description: The name of the feature library
          type: string
      type: object
    FeatureLibraryCreate:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/FeatureLibraryBase'
      - $ref: '#/components/schemas/FeatureLibraryCreate_allOf'
      - required:
        - description
        - name
      description: Inputs for creating a feature library
      type: object
    FeatureLibraryUpdate:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/FeatureLibraryBase'
      description: Inputs for updating a feature library
      type: object
    FeatureUpdate:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/FeatureBase'
      description: Inputs for updating a feature
      type: object
    FeaturesBulkCreateRequest:
      additionalProperties: false
      description: Inputs for bulk creating a new feature
      example:
        features:
        - null
        - null
        - null
        - null
        - null
      properties:
        features:
          items:
            $ref: '#/components/schemas/FeatureBulkCreate'
          maxItems: 1000
          type: array
      type: object
    FeaturesPaginatedList:
      allOf:
      - $ref: '#/components/schemas/Pagination'
      - $ref: '#/components/schemas/FeaturesPaginatedList_allOf'
      description: A paginated list of features
      type: object
    Field:
      example:
        displayValue: displayValue
        isMulti: true
        textValue: Amp
        type: ""
        value: null
      properties:
        displayValue:
          nullable: true
          readOnly: true
          type: string
        isMulti:
          readOnly: true
          type: boolean
        textValue:
          example: Amp
          nullable: true
          readOnly: true
          type: string
        type:
          allOf:
          - $ref: '#/components/schemas/FieldType'
          readOnly: true
        value:
          $ref: '#/components/schemas/Field_value'
      required:
      - value
      type: object
    FieldAppConfigItem:
      allOf:
      - $ref: '#/components/schemas/BaseAppConfigItem'
      - $ref: '#/components/schemas/LinkedAppConfigResourceMixin'
      - $ref: '#/components/schemas/FieldAppConfigItem_allOf'
    FieldDefinition:
      properties:
        archiveRecord:
          $ref: '#/components/schemas/AaSequence_archiveRecord'
        id:
          example: tsf_HXUnClU9
          type: string
        isMulti:
          type: boolean
        isRequired:
          type: boolean
        name:
          example: Resistance Gene
          type: string
        type:
          $ref: '#/components/schemas/FieldType'
      type: object
    FieldType:
      enum:
      - dna_sequence_link
      - aa_sequence_link
      - custom_entity_link
      - entity_link
      - mixture_link
      - dropdown
      - part_link
      - translation_link
      - blob_link
      - text
      - long_text
      - batch_link
      - storage_link
      - entry_link
      - assay_request_link
      - assay_result_link
      - assay_run_link
      - boolean
      - float
      - integer
      - datetime
      - date
      - json
      type: string
    Fields:
      additionalProperties:
        $ref: '#/components/schemas/Field'
      type: object
    FindMatchingRegionsAsyncTask:
      allOf:
      - $ref: '#/components/schemas/AsyncTask'
      - $ref: '#/components/schemas/FindMatchingRegionsAsyncTask_allOf'
      type: object
    FloatAppConfigItem:
      allOf:
      - $ref: '#/components/schemas/BaseAppConfigItem'
      - $ref: '#/components/schemas/FloatAppConfigItem_allOf'
      type: object
    FloatFieldDefinition:
      allOf:
      - $ref: '#/components/schemas/FieldDefinition'
      - $ref: '#/components/schemas/FloatFieldDefinition_allOf'
    Folder:
      example:
        parentFolderId: parentFolderId
        archiveRecord: null
        name: name
        id: id
        projectId: projectId
      properties:
        archiveRecord:
          $ref: '#/components/schemas/Container_archiveRecord'
        id:
          readOnly: true
          type: string
        name:
          type: string
        parentFolderId:
          description: "ID of the parent folder, if it exists"
          nullable: true
          type: string
        projectId:
          description: ID of the containing project
          readOnly: true
          type: string
    FolderCreate:
      additionalProperties: false
      example:
        parentFolderId: parentFolderId
        name: name
      properties:
        name:
          description: The name of the new folder.
          type: string
        parentFolderId:
          description: The ID of the parent folder.
          type: string
      required:
      - name
      - parentFolderId
      type: object
    FoldersArchivalChange:
      description: |
        IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of folders along with any IDs of folder contents that were unarchived.
      example:
        entryIds:
        - entryIds
        - entryIds
        aaSequenceIds:
        - aaSequenceIds
        - aaSequenceIds
        protocolIds:
        - protocolIds
        - protocolIds
        dnaSequenceIds:
        - dnaSequenceIds
        - dnaSequenceIds
        customEntityIds:
        - customEntityIds
        - customEntityIds
        folderIds:
        - folderIds
        - folderIds
        mixtureIds:
        - mixtureIds
        - mixtureIds
        oligoIds:
        - oligoIds
        - oligoIds
      properties:
        aaSequenceIds:
          items:
            type: string
          type: array
        customEntityIds:
          items:
            type: string
          type: array
        dnaSequenceIds:
          items:
            type: string
          type: array
        entryIds:
          items:
            type: string
          type: array
        folderIds:
          items:
            type: string
          type: array
        mixtureIds:
          items:
            type: string
          type: array
        oligoIds:
          items:
            type: string
          type: array
        protocolIds:
          items:
            type: string
          type: array
      type: object
    FoldersArchive:
      additionalProperties: false
      example:
        reason: Made in error
        folderIds:
        - folderIds
        - folderIds
      properties:
        folderIds:
          description: A list of folder IDs to archive.
          items:
            type: string
          type: array
        reason:
          description: |
            The reason for archiving the provided folders. Accepted reasons may differ based on tenant configuration.
          enum:
          - Made in error
          - Retired
          - Other
          type: string
      required:
      - folderIds
      - reason
      type: object
    FoldersPaginatedList:
      example:
        folders:
        - parentFolderId: parentFolderId
          archiveRecord: null
          name: name
          id: id
          projectId: projectId
        - parentFolderId: parentFolderId
          archiveRecord: null
          name: name
          id: id
          projectId: projectId
        nextToken: nextToken
      properties:
        folders:
          items:
            $ref: '#/components/schemas/Folder'
          type: array
        nextToken:
          type: string
      type: object
    FoldersUnarchive:
      additionalProperties: false
      example:
        folderIds:
        - folderIds
        - folderIds
      properties:
        folderIds:
          description: A list of folder IDs to unarchive.
          items:
            type: string
          type: array
      required:
      - folderIds
      type: object
    ForbiddenError:
      properties:
        error:
          $ref: '#/components/schemas/ForbiddenError_error'
      type: object
    GenericApiIdentifiedAppConfigItem:
      allOf:
      - $ref: '#/components/schemas/BaseAppConfigItem'
      - $ref: '#/components/schemas/LinkedAppConfigResourceMixin'
      - $ref: '#/components/schemas/GenericApiIdentifiedAppConfigItem_allOf'
      type: object
    GenericEntity:
      additionalProperties: false
      properties:
        aliases:
          items:
            type: string
          type: array
        apiURL:
          readOnly: true
          type: string
        archiveRecord:
          $ref: '#/components/schemas/AaSequence_archiveRecord'
        authors:
          description: |
            Array of UserSummary Resources of the authors of the entry. This defaults to the creator but can be manually changed.
          items:
            $ref: '#/components/schemas/UserSummary'
          type: array
        createdAt:
          format: date-time
          readOnly: true
          type: string
        creator:
          $ref: '#/components/schemas/GenericEntity_creator'
        customFields:
          additionalProperties:
            $ref: '#/components/schemas/CustomField'
          example:
            Legacy ID:
              value: STR100
          type: object
        entityRegistryId:
          nullable: true
          type: string
        fields:
          additionalProperties:
            $ref: '#/components/schemas/Field'
          type: object
        folderId:
          type: string
        id:
          type: string
        modifiedAt:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        registrationOrigin:
          $ref: '#/components/schemas/AaSequence_registrationOrigin'
        registryId:
          nullable: true
          type: string
        schema:
          $ref: '#/components/schemas/SchemaProperty_3'
        webURL:
          readOnly: true
          type: string
      type: object
    InaccessibleResource:
      additionalProperties: false
      properties:
        inaccessibleId:
          type: string
        type:
          description: |
            The type of this inaccessible item. Example values: "custom_entity", "container", "plate", "dna_sequence"
          example: custom_entity
          type: string
      type: object
    Ingredient:
      example:
        componentLotText: DION_004-source_001
        amount: "12"
        notes: notes
        catalogIdentifier: DION_004
        componentEntity: null
        targetAmount: "123"
        componentLotEntity: null
        units: mL
        componentLotContainer: null
        hasParent: true
      properties:
        amount:
          description: |
            The amount value of this ingredient in its mixture, in string format (to preserve full precision). Pair with `units`. Supports scientific notation (1.23e4). One ingredient on this mixture can have an amount value of `"QS"`.
          example: "12"
          nullable: true
          type: string
        catalogIdentifier:
          example: DION_004
          nullable: true
          type: string
        componentEntity:
          $ref: '#/components/schemas/Ingredient_componentEntity'
        componentLotContainer:
          $ref: '#/components/schemas/Ingredient_componentLotContainer'
        componentLotEntity:
          $ref: '#/components/schemas/Ingredient_componentLotEntity'
        componentLotText:
          description: Text representing the component lot for this ingredient. This
            is only present if the mixture schema supports component lots in "text"
            format.
          example: DION_004-source_001
          nullable: true
          type: string
        hasParent:
          type: boolean
        notes:
          nullable: true
          type: string
        targetAmount:
          description: The target amount for this ingredient such that this ingredient's
            proportion in its mixture would preserve the equivalent ingredient's proportion
            in the parent mixture. Pair with `units`.
          example: "123"
          nullable: true
          readOnly: true
          type: string
        units:
          $ref: '#/components/schemas/IngredientMeasurementUnits'
      type: object
    IngredientMeasurementUnits:
      enum:
      - nL
      - uL
      - mL
      - L
      - mg
      - g
      - Units
      example: mL
      nullable: true
      type: string
    IngredientWriteParams:
      example:
        componentLotText: DION_004-source_001
        amount: "12"
        notes: notes
        componentLotEntityId: bfi_12345
        catalogIdentifier: DION_004
        componentEntityId: bfi_37hdg8
        units: mL
        componentLotContainerId: cnt_12345
      properties:
        amount:
          description: |
            The amount value of this ingredient in its mixture, in string format (to preserve full precision). Pair with `units`. Supports scientific notation (1.23e4). One ingredient on this mixture can have an amount value of `"QS"`.
          example: "12"
          nullable: true
          type: string
        catalogIdentifier:
          example: DION_004
          nullable: true
          type: string
        componentEntityId:
          description: The entity that uniquely identifies this component.
          example: bfi_37hdg8
          type: string
        componentLotContainerId:
          description: The container representing the component lot for this ingredient.
            This is only writable if the mixture schema supports component lots in
            "storage" format.
          example: cnt_12345
          nullable: true
          type: string
        componentLotEntityId:
          description: The entity representing the component lot for this ingredient.
            This is only writable if the mixture schema supports component lots in
            "storage" format.
          example: bfi_12345
          nullable: true
          type: string
        componentLotText:
          description: Text representing the component lot for this ingredient. This
            is only writable if the mixture schema supports component lots in "text"
            format.
          example: DION_004-source_001
          nullable: true
          type: string
        notes:
          nullable: true
          type: string
        units:
          $ref: '#/components/schemas/IngredientMeasurementUnits'
      required:
      - amount
      - catalogIdentifier
      - componentEntityId
      - componentLotContainerId
      - componentLotEntityId
      - componentLotText
      - notes
      - units
      type: object
    InitialTable:
      additionalProperties: false
      example:
        csvData: csvData
        templateTableID: templateTableID
      properties:
        csvData:
          description: "blobId of an uploaded csv blob. The CSV should be formatted\
            \ with column headers of `columnId` which can be found in the [EntryTemplate](#/components/schemas/EntryTemplate).\
            \ For more information on uploading a blob, [click here](https://docs.benchling.com/docs/uploading-a-blob-to-benchling)."
          type: string
        templateTableID:
          description: Template table API ID
          type: string
      type: object
    IntegerAppConfigItem:
      allOf:
      - $ref: '#/components/schemas/BaseAppConfigItem'
      - $ref: '#/components/schemas/IntegerAppConfigItem_allOf'
      type: object
    IntegerFieldDefinition:
      allOf:
      - $ref: '#/components/schemas/FieldDefinition'
      - $ref: '#/components/schemas/IntegerFieldDefinition_allOf'
    JsonAppConfigItem:
      allOf:
      - $ref: '#/components/schemas/BaseAppConfigItem'
      - $ref: '#/components/schemas/JsonAppConfigItem_allOf'
    LabAutomationBenchlingAppError:
      example:
        message: message
      properties:
        message:
          type: string
      type: object
    LabAutomationBenchlingAppErrors:
      example:
        topLevelErrors:
        - errorMessage: errorMessage
        - errorMessage: errorMessage
      properties:
        topLevelErrors:
          items:
            $ref: '#/components/schemas/LabAutomationBenchlingAppErrors_topLevelErrors_inner'
          type: array
      type: object
    LabAutomationTransform:
      example:
        outputProcessorId: outputProcessorId
        apiURL: https://openapi-generator.tech
        modifiedAt: 2000-01-23T04:56:07.000+00:00
        blobId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        id: id
        errors:
          topLevelErrors:
          - errorMessage: errorMessage
          - errorMessage: errorMessage
        customTransformId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        status: NOT_STARTED
      properties:
        apiURL:
          description: The canonical url of the transform in the API.
          format: uri
          readOnly: true
          type: string
        blobId:
          format: uuid
          nullable: true
          type: string
        customTransformId:
          format: uuid
          nullable: true
          type: string
        errors:
          $ref: '#/components/schemas/LabAutomationBenchlingAppErrors'
        id:
          type: string
        modifiedAt:
          description: DateTime the transform was last modified.
          format: date-time
          readOnly: true
          type: string
        outputProcessorId:
          type: string
        status:
          enum:
          - NOT_STARTED
          - RUNNING
          - FAILED
          - SUCCEEDED
          type: string
      type: object
    LabAutomationTransformUpdate:
      additionalProperties: false
      example:
        blobId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        errors:
        - message: message
        - message: message
      properties:
        blobId:
          format: uuid
          type: string
        errors:
          items:
            $ref: '#/components/schemas/LabAutomationBenchlingAppError'
          type: array
      type: object
    LabelTemplate:
      example:
        zplTemplate: zplTemplate
        name: name
        id: id
      properties:
        id:
          description: ID of the label template.
          type: string
        name:
          description: Name of the label template.
          type: string
        zplTemplate:
          description: The ZPL template that will be filled in and sent to a printer.
          type: string
      type: object
    LabelTemplatesList:
      example:
        labelTemplates:
        - zplTemplate: zplTemplate
          name: name
          id: id
        - zplTemplate: zplTemplate
          name: name
          id: id
      properties:
        labelTemplates:
          items:
            $ref: '#/components/schemas/LabelTemplate'
          type: array
      type: object
    LegacyWorkflow:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        name: name
        description: description
        id: wfw_uHBz7ka2
        displayId: displayId
        projectId: projectId
      properties:
        createdAt:
          description: DateTime at which the the legacy workflow was created
          format: date-time
          readOnly: true
          type: string
        description:
          description: Description of the legacy workflow
          nullable: true
          type: string
        displayId:
          description: User-friendly ID of the legacy workflow
          type: string
        id:
          description: ID of the legacy workflow
          example: wfw_uHBz7ka2
          readOnly: true
          type: string
        name:
          description: Name of the legacy workflow
          type: string
        projectId:
          description: ID of the project that contains the legacy workflow
          type: string
      type: object
    LegacyWorkflowList:
      example:
        workflows:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          id: wfw_uHBz7ka2
          displayId: displayId
          projectId: projectId
        - createdAt: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          id: wfw_uHBz7ka2
          displayId: displayId
          projectId: projectId
      properties:
        workflows:
          items:
            $ref: '#/components/schemas/LegacyWorkflow'
          type: array
      type: object
    LegacyWorkflowPatch:
      additionalProperties: false
      example:
        name: name
        description: description
        projectId: projectId
      properties:
        description:
          description: Description of the legacy workflow
          type: string
        name:
          description: Name of the legacy workflow
          type: string
        projectId:
          description: ID of the project that contains the legacy workflow
          type: string
      type: object
    LegacyWorkflowSample:
      example:
        containerIds:
        - containerIds
        - containerIds
        createdAt: 2000-01-23T04:56:07.000+00:00
        name: name
        id: id
        batchId: batchId
      properties:
        batchId:
          description: ID of the batch
          type: string
        containerIds:
          description: Array of IDs of containers
          items:
            type: string
          type: array
        createdAt:
          description: DateTime at which the the sample was created
          format: date-time
          readOnly: true
          type: string
        id:
          description: ID of the sample
          readOnly: true
          type: string
        name:
          description: Name of the sample
          type: string
      type: object
    LegacyWorkflowSampleList:
      example:
        samples:
        - containerIds:
          - containerIds
          - containerIds
          createdAt: 2000-01-23T04:56:07.000+00:00
          name: name
          id: id
          batchId: batchId
        - containerIds:
          - containerIds
          - containerIds
          createdAt: 2000-01-23T04:56:07.000+00:00
          name: name
          id: id
          batchId: batchId
      properties:
        samples:
          items:
            $ref: '#/components/schemas/LegacyWorkflowSample'
          type: array
      type: object
    LegacyWorkflowStage:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        name: name
        id: id
      properties:
        createdAt:
          description: DateTime at which the the legacy workflow stage was created
          format: date-time
          readOnly: true
          type: string
        id:
          description: ID of the legacy workflow stage
          readOnly: true
          type: string
        name:
          description: Name of the legacy workflow stage
          type: string
      type: object
    LegacyWorkflowStageList:
      example:
        workflowStages:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          name: name
          id: id
        - createdAt: 2000-01-23T04:56:07.000+00:00
          name: name
          id: id
      properties:
        workflowStages:
          items:
            $ref: '#/components/schemas/LegacyWorkflowStage'
          type: array
      type: object
    LegacyWorkflowStageRun:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        name: name
        id: id
        status: COMPLETED
      properties:
        createdAt:
          description: DateTime at which the the legacy workflow stage run was created
          format: date-time
          readOnly: true
          type: string
        id:
          description: ID of the legacy workflow stage run
          readOnly: true
          type: string
        name:
          description: Name of the legacy workflow stage run
          type: string
        status:
          description: Status of the legacy workflow stage run
          enum:
          - COMPLETED
          - DISCARDED
          - INITIALIZED
          type: string
      type: object
    LegacyWorkflowStageRunList:
      example:
        workflowStageRuns:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          name: name
          id: id
          status: COMPLETED
        - createdAt: 2000-01-23T04:56:07.000+00:00
          name: name
          id: id
          status: COMPLETED
      properties:
        workflowStageRuns:
          items:
            $ref: '#/components/schemas/LegacyWorkflowStageRun'
          type: array
      type: object
    LinkedAppConfigResource:
      oneOf:
      - $ref: '#/components/schemas/LinkedAppConfigResourceSummary'
      - $ref: '#/components/schemas/InaccessibleResource'
      type: object
    LinkedAppConfigResourceMixin:
      properties:
        linkedResource:
          $ref: '#/components/schemas/LinkedAppConfigResourceMixin_linkedResource'
      type: object
    LinkedAppConfigResourceSummary:
      additionalProperties: false
      properties:
        id:
          description: The API ID of the linked resource
          example: tsf_e59a3b23
          type: string
        name:
          description: The name of the resource in Benchling
          example: Parent Sample
          type: string
      type: object
    Location:
      example:
        schema: null
        createdAt: createdAt
        creator: null
        parentStorageId: parentStorageId
        archiveRecord: null
        modifiedAt: modifiedAt
        webURL: webURL
        name: name
        id: id
        fields:
          key:
            displayValue: displayValue
            isMulti: true
            textValue: Amp
            type: ""
            value: null
        barcode: barcode
      properties:
        archiveRecord:
          $ref: '#/components/schemas/AaSequence_archiveRecord'
        barcode:
          type: string
        createdAt:
          type: string
        creator:
          $ref: '#/components/schemas/UserSummary'
        fields:
          additionalProperties:
            $ref: '#/components/schemas/Field'
          type: object
        id:
          type: string
        modifiedAt:
          type: string
        name:
          type: string
        parentStorageId:
          nullable: true
          type: string
        schema:
          $ref: '#/components/schemas/AaSequence_schema'
        webURL:
          type: string
    LocationCreate:
      additionalProperties: false
      example:
        parentStorageId: parentStorageId
        schemaId: schemaId
        name: name
        fields:
          key:
            displayValue: displayValue
            isMulti: true
            textValue: Amp
            type: ""
            value: null
        barcode: barcode
      properties:
        barcode:
          type: string
        fields:
          additionalProperties:
            $ref: '#/components/schemas/Field'
          type: object
        name:
          type: string
        parentStorageId:
          type: string
        schemaId:
          type: string
      required:
      - name
      - schemaId
      type: object
    LocationSchema:
      allOf:
      - $ref: '#/components/schemas/RegistrySchema'
      - $ref: '#/components/schemas/LocationSchema_allOf'
    LocationSchemasList:
      example:
        locationSchemas:
        - null
        - null
      properties:
        locationSchemas:
          items:
            $ref: '#/components/schemas/LocationSchema'
          readOnly: true
          type: array
      type: object
    LocationSchemasPaginatedList:
      allOf:
      - $ref: '#/components/schemas/LocationSchemasList'
      - $ref: '#/components/schemas/BatchSchemasPaginatedList_allOf'
    LocationUpdate:
      additionalProperties: false
      example:
        parentStorageId: parentStorageId
        name: name
        fields:
          key:
            displayValue: displayValue
            isMulti: true
            textValue: Amp
            type: ""
            value: null
      properties:
        fields:
          additionalProperties:
            $ref: '#/components/schemas/Field'
          type: object
        name:
          type: string
        parentStorageId:
          type: string
      type: object
    LocationsArchivalChange:
      description: |
        IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of locations along with any IDs of locations, boxes, plates, containers that were archived.
      example:
        containerIds:
        - containerIds
        - containerIds
        boxIds:
        - boxIds
        - boxIds
        locationIds:
        - locationIds
        - locationIds
        plateIds:
        - plateIds
        - plateIds
      properties:
        boxIds:
          items:
            type: string
          type: array
        containerIds:
          items:
            type: string
          type: array
        locationIds:
          items:
            type: string
          type: array
        plateIds:
          items:
            type: string
          type: array
      type: object
    LocationsArchive:
      additionalProperties: false
      example:
        shouldRemoveBarcodes: true
        reason: Made in error
        locationIds:
        - locationIds
        - locationIds
      properties:
        locationIds:
          description: Array of location IDs
          items:
            type: string
          type: array
        reason:
          description: |
            Reason that locations are being archived.
          enum:
          - Made in error
          - Retired
          - Other
          type: string
        shouldRemoveBarcodes:
          description: |
            Remove barcodes. Removing barcodes from archived storage that contain items will also remove barcodes from the contained items.
          type: boolean
      required:
      - locationIds
      - reason
      type: object
    LocationsBulkGet:
      example:
        locations:
        - schema: null
          createdAt: createdAt
          creator: null
          parentStorageId: parentStorageId
          archiveRecord: null
          modifiedAt: modifiedAt
          webURL: webURL
          name: name
          id: id
          fields:
            key:
              displayValue: displayValue
              isMulti: true
              textValue: Amp
              type: ""
              value: null
          barcode: barcode
        - schema: null
          createdAt: createdAt
          creator: null
          parentStorageId: parentStorageId
          archiveRecord: null
          modifiedAt: modifiedAt
          webURL: webURL
          name: name
          id: id
          fields:
            key:
              displayValue: displayValue
              isMulti: true
              textValue: Amp
              type: ""
              value: null
          barcode: barcode
      properties:
        locations:
          items:
            $ref: '#/components/schemas/Location'
          type: array
      type: object
    LocationsPaginatedList:
      example:
        nextToken: nextToken
        locations:
        - schema: null
          createdAt: createdAt
          creator: null
          parentStorageId: parentStorageId
          archiveRecord: null
          modifiedAt: modifiedAt
          webURL: webURL
          name: name
          id: id
          fields:
            key:
              displayValue: displayValue
              isMulti: true
              textValue: Amp
              type: ""
              value: null
          barcode: barcode
        - schema: null
          createdAt: createdAt
          creator: null
          parentStorageId: parentStorageId
          archiveRecord: null
          modifiedAt: modifiedAt
          webURL: webURL
          name: name
          id: id
          fields:
            key:
              displayValue: displayValue
              isMulti: true
              textValue: Amp
              type: ""
              value: null
          barcode: barcode
      properties:
        locations:
          items:
            $ref: '#/components/schemas/Location'
          type: array
        nextToken:
          type: string
      type: object
    LocationsUnarchive:
      additionalProperties: false
      example:
        locationIds:
        - locationIds
        - locationIds
      properties:
        locationIds:
          description: Array of location IDs
          items:
            type: string
          type: array
      required:
      - locationIds
      type: object
    LookupTableNotePart:
      allOf:
      - $ref: '#/components/schemas/StructuredTableApiIdentifiers'
      - $ref: '#/components/schemas/LookupTableNotePart_allOf'
    Measurement:
      example:
        units: units
        value: 0.8008281904610115
      properties:
        units:
          description: Can only be null if value is also null
          nullable: true
          type: string
        value:
          description: Can only be null if units is also null
          nullable: true
          type: number
      required:
      - units
      - value
      type: object
    Mixture:
      example:
        allowMeasuredIngredients: true
        schema:
          id: ts_EM122lfJ
          name: Prep
        amount: "123"
        creator: null
        registrationOrigin: null
        aliases:
        - FRM000
        - FRM000
        customFields:
          Legacy ID:
            value: STR100
        modifiedAt: 2017-04-18T05:55:48.685345Z
        registryId: src_NetYd96a
        units: L
        folderId: lib_R8KcsjhW
        entityRegistryId: FRM000
        createdAt: 2017-04-18T05:54:56.247545Z
        apiURL: https://benchling.com/api/v2/mixtures/mxt_xCUXNVyG
        archiveRecord: null
        webURL: https://benchling.com/benchling/f/R8KcsjhW-academic-registry/mxt-xCUXNVyG-sbn000/edit
        name: FRM000
        ingredients:
        - componentLotText: DION_004-source_001
          amount: "12"
          notes: notes
          catalogIdentifier: DION_004
          componentEntity: null
          targetAmount: "123"
          componentLotEntity: null
          units: mL
          componentLotContainer: null
          hasParent: true
        - componentLotText: DION_004-source_001
          amount: "12"
          notes: notes
          catalogIdentifier: DION_004
          componentEntity: null
          targetAmount: "123"
          componentLotEntity: null
          units: mL
          componentLotContainer: null
          hasParent: true
        id: mxt_xCUXNVyG
        fields: ""
        authors:
        - null
        - null
      properties:
        aliases:
          items:
            example: FRM000
            type: string
          type: array
        allowMeasuredIngredients:
          description: Derived from the mixture's schema.
          readOnly: true
          type: boolean
        amount:
          description: The positive numerical amount value of this mixture in string
            format (to preserve full precision). Pair with `units`. Supports scientific
            notation (1.23e4).
          example: "123"
          type: string
        apiURL:
          description: The canonical url of the Mixture in the API.
          example: https://benchling.com/api/v2/mixtures/mxt_xCUXNVyG
          format: uri
          readOnly: true
          type: string
        archiveRecord:
          $ref: '#/components/schemas/AaSequence_archiveRecord'
        authors:
          items:
            $ref: '#/components/schemas/UserSummary'
          type: array
        createdAt:
          example: 2017-04-18T05:54:56.247545Z
          format: date-time
          readOnly: true
          type: string
        creator:
          $ref: '#/components/schemas/CustomEntity_creator'
        customFields:
          additionalProperties:
            $ref: '#/components/schemas/CustomField'
          example:
            Legacy ID:
              value: STR100
          type: object
        entityRegistryId:
          example: FRM000
          nullable: true
          type: string
        fields:
          allOf:
          - $ref: '#/components/schemas/Fields'
          description: Mixtures can have up to one parent mixture field.
        folderId:
          example: lib_R8KcsjhW
          nullable: true
          type: string
        id:
          example: mxt_xCUXNVyG
          type: string
        ingredients:
          description: List of ingredients on this mixture.
          items:
            $ref: '#/components/schemas/Ingredient'
          type: array
        modifiedAt:
          example: 2017-04-18T05:55:48.685345Z
          format: date-time
          readOnly: true
          type: string
        name:
          example: FRM000
          type: string
        registrationOrigin:
          $ref: '#/components/schemas/AaSequence_registrationOrigin'
        registryId:
          example: src_NetYd96a
          nullable: true
          type: string
        schema:
          $ref: '#/components/schemas/Mixture_schema'
        units:
          $ref: '#/components/schemas/MixtureMeasurementUnits'
        webURL:
          example: https://benchling.com/benchling/f/R8KcsjhW-academic-registry/mxt-xCUXNVyG-sbn000/edit
          readOnly: true
          type: string
      type: object
    MixtureBulkUpdate:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/MixtureUpdate'
      - $ref: '#/components/schemas/MixtureBulkUpdate_allOf'
    MixtureCreate:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/MixtureUpdate'
      - $ref: '#/components/schemas/CreateEntityIntoRegistry'
      - required:
        - ingredients
        - name
        - schemaId
        - units
    MixtureMeasurementUnits:
      enum:
      - nL
      - uL
      - mL
      - L
      - g
      - kg
      - Units
      example: L
      nullable: true
      type: string
    MixturePrepTableNotePart:
      allOf:
      - $ref: '#/components/schemas/BaseNotePart'
      - $ref: '#/components/schemas/StructuredTableApiIdentifiers'
      - $ref: '#/components/schemas/MixturePrepTableNotePart_allOf'
    MixtureUpdate:
      additionalProperties: false
      example:
        entityRegistryId: RCP001
        amount: "123"
        aliases:
        - aliases
        - aliases
        customFields: ""
        schemaId: schemaId
        name: name
        ingredients:
        - componentLotText: DION_004-source_001
          amount: "12"
          notes: notes
          componentLotEntityId: bfi_12345
          catalogIdentifier: DION_004
          componentEntityId: bfi_37hdg8
          units: mL
          componentLotContainerId: cnt_12345
        - componentLotText: DION_004-source_001
          amount: "12"
          notes: notes
          componentLotEntityId: bfi_12345
          catalogIdentifier: DION_004
          componentEntityId: bfi_37hdg8
          units: mL
          componentLotContainerId: cnt_12345
        units: L
        fields: ""
        authorIds:
        - authorIds
        - authorIds
        folderId: folderId
      properties:
        aliases:
          description: Aliases to add to the mixture
          items:
            type: string
          type: array
        amount:
          description: The positive numerical amount value of this mixture in string
            format (to preserve full precision). Pair with `units`. Supports scientific
            notation (1.23e4).
          example: "123"
          type: string
        authorIds:
          description: IDs of users to set as the mixture's authors.
          items:
            type: string
          type: array
        customFields:
          allOf:
          - $ref: '#/components/schemas/CustomFields'
          description: |
            Custom fields to add to the mixture. Every field should have its name as a key, mapping to an object with information about the value of the field.
        entityRegistryId:
          example: RCP001
          type: string
        fields:
          allOf:
          - $ref: '#/components/schemas/Fields'
          description: |
            Schema fields to set on the mixture. Must correspond with the schema's field definitions. Every field should have its name as a key, mapping to an object with information about the value of the field.
            If you are setting the parent mixture field here, you must also specify `ingredients`
        folderId:
          description: ID of the folder that the entity is moved into
          type: string
        ingredients:
          description: |
            Desired final state for the ingredients on this mixture.
            Each ingredient you specify will be matched with the existing ingredients on the mixture based on the component entity, and Benchling will create, update, or delete this mixture's ingredients so that the final state of this mixture's ingredients matches your request.
            Benchling will recognize that any ingredients you specify that match ingredients on the parent mixture (based on component entity) are inherited. This can be seen on the returned `ingredients[i].hasParent` attribute.
          items:
            $ref: '#/components/schemas/IngredientWriteParams'
          type: array
        name:
          type: string
        schemaId:
          type: string
        units:
          $ref: '#/components/schemas/MixtureMeasurementUnits'
      type: object
    MixtureWithEntityType:
      allOf:
      - $ref: '#/components/schemas/Mixture'
      - $ref: '#/components/schemas/MixtureWithEntityType_allOf'
      type: object
    MixturesArchivalChange:
      description: |
        IDs of all mixtures that were archived or unarchived.
      example:
        mixtureIds:
        - mxt_djw9aU
        - mxt_djw9aU
      properties:
        mixtureIds:
          items:
            example: mxt_djw9aU
            type: string
          type: array
      type: object
    MixturesArchive:
      additionalProperties: false
      description: |
        The request body for archiving mixtures.
      example:
        reason: null
        mixtureIds:
        - mxt_djw9aU
        - mxt_djw9aU
      properties:
        mixtureIds:
          items:
            example: mxt_djw9aU
            type: string
          type: array
        reason:
          $ref: '#/components/schemas/EntityArchiveReason'
      required:
      - mixtureIds
      - reason
      type: object
    MixturesBulkCreateRequest:
      additionalProperties: false
      example:
        mixtures:
        - null
        - null
        - null
        - null
        - null
      properties:
        mixtures:
          items:
            $ref: '#/components/schemas/MixtureCreate'
          maxItems: 1000
          type: array
      required:
      - mixtures
      type: object
    MixturesBulkUpdateRequest:
      additionalProperties: false
      example:
        mixtures:
        - null
        - null
      properties:
        mixtures:
          items:
            $ref: '#/components/schemas/MixtureBulkUpdate'
          type: array
      type: object
    MixturesPaginatedList:
      example:
        nextToken: nextToken
        mixtures:
        - allowMeasuredIngredients: true
          schema:
            id: ts_EM122lfJ
            name: Prep
          amount: "123"
          creator: null
          registrationOrigin: null
          aliases:
          - FRM000
          - FRM000
          customFields:
            Legacy ID:
              value: STR100
          modifiedAt: 2017-04-18T05:55:48.685345Z
          registryId: src_NetYd96a
          units: L
          folderId: lib_R8KcsjhW
          entityRegistryId: FRM000
          createdAt: 2017-04-18T05:54:56.247545Z
          apiURL: https://benchling.com/api/v2/mixtures/mxt_xCUXNVyG
          archiveRecord: null
          webURL: https://benchling.com/benchling/f/R8KcsjhW-academic-registry/mxt-xCUXNVyG-sbn000/edit
          name: FRM000
          ingredients:
          - componentLotText: DION_004-source_001
            amount: "12"
            notes: notes
            catalogIdentifier: DION_004
            componentEntity: null
            targetAmount: "123"
            componentLotEntity: null
            units: mL
            componentLotContainer: null
            hasParent: true
          - componentLotText: DION_004-source_001
            amount: "12"
            notes: notes
            catalogIdentifier: DION_004
            componentEntity: null
            targetAmount: "123"
            componentLotEntity: null
            units: mL
            componentLotContainer: null
            hasParent: true
          id: mxt_xCUXNVyG
          fields: ""
          authors:
          - null
          - null
        - allowMeasuredIngredients: true
          schema:
            id: ts_EM122lfJ
            name: Prep
          amount: "123"
          creator: null
          registrationOrigin: null
          aliases:
          - FRM000
          - FRM000
          customFields:
            Legacy ID:
              value: STR100
          modifiedAt: 2017-04-18T05:55:48.685345Z
          registryId: src_NetYd96a
          units: L
          folderId: lib_R8KcsjhW
          entityRegistryId: FRM000
          createdAt: 2017-04-18T05:54:56.247545Z
          apiURL: https://benchling.com/api/v2/mixtures/mxt_xCUXNVyG
          archiveRecord: null
          webURL: https://benchling.com/benchling/f/R8KcsjhW-academic-registry/mxt-xCUXNVyG-sbn000/edit
          name: FRM000
          ingredients:
          - componentLotText: DION_004-source_001
            amount: "12"
            notes: notes
            catalogIdentifier: DION_004
            componentEntity: null
            targetAmount: "123"
            componentLotEntity: null
            units: mL
            componentLotContainer: null
            hasParent: true
          - componentLotText: DION_004-source_001
            amount: "12"
            notes: notes
            catalogIdentifier: DION_004
            componentEntity: null
            targetAmount: "123"
            componentLotEntity: null
            units: mL
            componentLotContainer: null
            hasParent: true
          id: mxt_xCUXNVyG
          fields: ""
          authors:
          - null
          - null
      properties:
        mixtures:
          items:
            $ref: '#/components/schemas/Mixture'
          type: array
        nextToken:
          type: string
      type: object
    MixturesUnarchive:
      additionalProperties: false
      description: |
        The request body for unarchiving mixtures.
      example:
        mixtureIds:
        - mxt_djw9aU
        - mxt_djw9aU
      properties:
        mixtureIds:
          items:
            example: mxt_djw9aU
            type: string
          type: array
      required:
      - mixtureIds
      type: object
    Molecule:
      additionalProperties: false
      example:
        schema: null
        creator: null
        registrationOrigin: null
        aliases:
        - aliases
        - aliases
        customFields: ""
        modifiedAt: 2000-01-23T04:56:07.000+00:00
        registryId: registryId
        folderId: folderId
        entityRegistryId: entityRegistryId
        createdAt: 2000-01-23T04:56:07.000+00:00
        apiURL: https://openapi-generator.tech
        archiveRecord: null
        webURL: https://benchling.com/benchling/f/lib_R8KcsjhW-molecules/mol_xCUXNVyG-molecule1/edit
        name: name
        id: mol_bhuDUw9D
        fields:
          key:
            displayValue: displayValue
            isMulti: true
            textValue: Amp
            type: ""
            value: null
        canonicalizedSmiles: "Nc1nc(=O)n([H:1])cc1C1CC1"
      properties:
        aliases:
          description: Array of aliases.
          items:
            type: string
          type: array
        apiURL:
          description: The canonical url of the Molecule in the API.
          format: uri
          readOnly: true
          type: string
        archiveRecord:
          $ref: '#/components/schemas/AaSequence_archiveRecord'
        canonicalizedSmiles:
          description: The canonicalized chemical structure in SMILES format.
          example: "Nc1nc(=O)n([H:1])cc1C1CC1"
          type: string
        createdAt:
          description: DateTime the Molecule was created.
          format: date-time
          readOnly: true
          type: string
        creator:
          $ref: '#/components/schemas/UserSummary'
        customFields:
          allOf:
          - $ref: '#/components/schemas/CustomFields'
          description: Custom fields set on the Molecule.
        entityRegistryId:
          description: Registry ID of the Molecule if registered.
          nullable: true
          type: string
        fields:
          additionalProperties:
            $ref: '#/components/schemas/Field'
          type: object
        folderId:
          description: ID of the folder that contains the Molecule.
          type: string
        id:
          description: ID of the Molecule.
          example: mol_bhuDUw9D
          type: string
        modifiedAt:
          description: DateTime the Molecule was last modified.
          format: date-time
          readOnly: true
          type: string
        name:
          description: Name of the Molecule.
          type: string
        registrationOrigin:
          $ref: '#/components/schemas/AaSequence_registrationOrigin'
        registryId:
          description: Registry the Molecule is registered in.
          nullable: true
          type: string
        schema:
          $ref: '#/components/schemas/AaSequence_schema'
        webURL:
          description: URL of the Molecule.
          example: https://benchling.com/benchling/f/lib_R8KcsjhW-molecules/mol_xCUXNVyG-molecule1/edit
          format: uri
          readOnly: true
          type: string
      type: object
    MoleculeBaseRequest:
      additionalProperties: false
      properties:
        aliases:
          description: Aliases to add to the Molecule.
          items:
            type: string
          type: array
        authorIds:
          description: IDs of users to set as the Molecule's authors.
          items:
            type: string
          type: array
        chemicalStructure:
          $ref: '#/components/schemas/MoleculeBaseRequest_chemicalStructure'
        customFields:
          allOf:
          - $ref: '#/components/schemas/CustomFields'
          description: |
            Custom fields to add to the Molecule. Every field should have its name as a key, mapping to an object with information about the value of the field.
        fields:
          allOf:
          - $ref: '#/components/schemas/Fields'
          description: |
            Fields to set on the Molecule. Must correspond with the schema's field definitions. Every field should have its name as a key, mapping to an object with information about the value of the field.
        folderId:
          description: |
            ID of the folder containing the Molecule.
          type: string
        name:
          description: |
            Name of the Molecule.
          type: string
        schemaId:
          description: |
            ID of the Molecule's schema.
          type: string
      type: object
    MoleculeBaseRequestForCreate:
      allOf:
      - $ref: '#/components/schemas/MoleculeBaseRequest'
      - required:
        - chemicalStructure
        - name
    MoleculeBulkUpdate:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/AaSequenceBulkUpdate_allOf'
      - $ref: '#/components/schemas/MoleculeUpdate'
    MoleculeCreate:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/MoleculeBaseRequestForCreate'
      - $ref: '#/components/schemas/CreateEntityIntoRegistry'
    MoleculeStructure:
      additionalProperties: false
      properties:
        structureFormat:
          enum:
          - smiles
          - molfile
          type: string
        value:
          description: Chemical structure in SMILES or molfile format.
          example: "Nc1nc(=O)n([H:1])cc1C1CC1"
          type: string
      type: object
    MoleculeUpdate:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/MoleculeUpdate_allOf'
      - $ref: '#/components/schemas/MoleculeBaseRequest'
    MoleculesArchivalChange:
      additionalProperties: false
      description: |
        IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of Molecules along with any IDs of batches that were archived / unarchived.
      example:
        batchIds:
        - batchIds
        - batchIds
        moleculeIds:
        - moleculeIds
        - moleculeIds
      properties:
        batchIds:
          items:
            type: string
          type: array
        moleculeIds:
          items:
            type: string
          type: array
      type: object
    MoleculesArchive:
      additionalProperties: false
      description: |
        The request body for archiving Molecules.
      example:
        reason: Made in error
        moleculeIds:
        - moleculeIds
        - moleculeIds
      properties:
        moleculeIds:
          items:
            type: string
          type: array
        reason:
          description: |
            The reason for archiving the provided Molecules. Accepted reasons may differ based on tenant configuration.
          enum:
          - Made in error
          - Retired
          - Expended
          - Shipped
          - Contaminated
          - Expired
          - Missing
          - Other
          type: string
      required:
      - moleculeIds
      - reason
      type: object
    MoleculesBulkCreateRequest:
      additionalProperties: false
      example:
        molecules:
        - null
        - null
      properties:
        molecules:
          items:
            $ref: '#/components/schemas/MoleculeCreate'
          type: array
      type: object
    MoleculesBulkUpdateRequest:
      additionalProperties: false
      example:
        molecules:
        - null
        - null
      properties:
        molecules:
          items:
            $ref: '#/components/schemas/MoleculeBulkUpdate'
          type: array
      type: object
    MoleculesPaginatedList:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/Pagination'
      - $ref: '#/components/schemas/MoleculesPaginatedList_allOf'
    MoleculesUnarchive:
      additionalProperties: false
      description: |
        The request body for unarchiving Molecules.
      example:
        moleculeIds:
        - moleculeIds
        - moleculeIds
      properties:
        moleculeIds:
          items:
            type: string
          type: array
      required:
      - moleculeIds
      type: object
    MultipleContainersTransfer:
      allOf:
      - $ref: '#/components/schemas/ContainerTransferBase'
      - $ref: '#/components/schemas/MultipleContainersTransfer_allOf'
      type: object
    MultipleContainersTransfersList:
      additionalProperties: false
      example:
        transfers:
        - null
        - null
        - null
        - null
        - null
      properties:
        transfers:
          items:
            $ref: '#/components/schemas/MultipleContainersTransfer'
          maxItems: 5000
          type: array
      required:
      - transfers
      type: object
    NamingStrategy:
      description: |
        Specifies the behavior for automatically generated names when registering an entity.
        - NEW_IDS: Generate new registry IDs
        - IDS_FROM_NAMES: Generate registry IDs based on entity names
        - DELETE_NAMES: Generate new registry IDs and replace name with registry ID
        - SET_FROM_NAME_PARTS: Generate new registry IDs, rename according to name template, and keep old name as alias
        - REPLACE_NAMES_FROM_PARTS: Generate new registry IDs, and replace name according to name template
        - KEEP_NAMES: Keep existing entity names as registry IDs
        - REPLACE_ID_AND_NAME_FROM_PARTS: Generate registry IDs and names according to name template
      enum:
      - NEW_IDS
      - IDS_FROM_NAMES
      - DELETE_NAMES
      - SET_FROM_NAME_PARTS
      - REPLACE_NAMES_FROM_PARTS
      - KEEP_NAMES
      - REPLACE_ID_AND_NAME_FROM_PARTS
      type: string
    NotFoundError:
      properties:
        error:
          $ref: '#/components/schemas/NotFoundError_error'
      type: object
    NucleotideAlignment:
      allOf:
      - $ref: '#/components/schemas/NucleotideAlignmentSummary'
      - $ref: '#/components/schemas/NucleotideAlignment_allOf'
      type: object
    NucleotideAlignmentBase:
      properties:
        algorithm:
          enum:
          - mafft
          - clustalo
          type: string
        files:
          items:
            $ref: '#/components/schemas/NucleotideAlignmentBase_files_inner'
          type: array
        name:
          example: my new alignment
          maxLength: 255
          type: string
      required:
      - algorithm
      - files
      type: object
    NucleotideAlignmentFile:
      properties:
        data:
          format: byte
          type: string
        name:
          type: string
      type: object
    NucleotideAlignmentSummary:
      properties:
        apiURL:
          description: The canonical url of the Alignment in the API.
          example: https://benchling.com/api/v2/alignments/seqanl_6ZVdX98t
          format: uri
          type: string
        createdAt:
          description: DateTime the Alignment was created
          format: date-time
          type: string
        id:
          example: seqanl_6ZVdX98t
          type: string
        modifiedAt:
          description: DateTime the Alignment was last modified
          format: date-time
          type: string
        name:
          type: string
        referenceSequenceId:
          description: The ID of the template or consensus Sequence associated with
            the Alignment
          example: seq_MYmsnS1u
          type: string
        webURL:
          description: The Benchling web UI url to view the Alignment
          format: uri
          type: string
      type: object
    NucleotideAlignmentsPaginatedList:
      allOf:
      - $ref: '#/components/schemas/Pagination'
      - $ref: '#/components/schemas/NucleotideAlignmentsPaginatedList_allOf'
      type: object
    NucleotideConsensusAlignmentCreate:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/NucleotideAlignmentBase'
      - $ref: '#/components/schemas/DnaConsensusAlignmentCreate_allOf'
    NucleotideTemplateAlignmentCreate:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/NucleotideAlignmentBase'
      - $ref: '#/components/schemas/DnaTemplateAlignmentCreate_allOf'
    OAuthBadRequestError:
      properties:
        error:
          $ref: '#/components/schemas/OAuthBadRequestError_error'
      type: object
    OAuthUnauthorizedError:
      properties:
        error:
          $ref: '#/components/schemas/OAuthUnauthorizedError_error'
      type: object
    Oligo:
      discriminator:
        mapping:
          DNA: DnaOligo
          RNA: RnaOligo
        propertyName: nucleotideType
      properties:
        aliases:
          description: Array of aliases
          items:
            type: string
          type: array
        apiURL:
          description: The canonical url of the Oligo in the API.
          format: uri
          readOnly: true
          type: string
        archiveRecord:
          $ref: '#/components/schemas/AaSequence_archiveRecord'
        bases:
          description: Base pairs of the Oligo.
          example: ACTTTTT
          type: string
        createdAt:
          description: DateTime the Oligo was created.
          format: date-time
          readOnly: true
          type: string
        creator:
          $ref: '#/components/schemas/UserSummary'
        customFields:
          allOf:
          - $ref: '#/components/schemas/CustomFields'
          description: Custom fields set on the Oligo.
        entityRegistryId:
          description: Registry ID of the Oligo if registered.
          nullable: true
          type: string
        fields:
          additionalProperties:
            $ref: '#/components/schemas/Field'
          type: object
        folderId:
          description: ID of the folder that contains the Oligo.
          nullable: true
          type: string
        id:
          description: ID of the Oligo.
          example: seq_bhuDUw9D
          type: string
        length:
          description: Number of bases in the Oligo.
          type: integer
        modifiedAt:
          description: DateTime the Oligo was last modified.
          format: date-time
          readOnly: true
          type: string
        name:
          description: Name of the Oligo.
          type: string
        nucleotideType:
          description: Nucleotide type of the Oligo.
          enum:
          - DNA
          - RNA
          type: string
        registrationOrigin:
          $ref: '#/components/schemas/AaSequence_registrationOrigin'
        registryId:
          description: Registry the Oligo is registered in.
          nullable: true
          type: string
        schema:
          $ref: '#/components/schemas/AaSequence_schema'
        webURL:
          description: URL of the Oligo.
          example: https://benchling.com/benchling/f/lib_hBHqKbzE-oligos/seq_bhuDUw9D-test-oligo-abc/edit
          format: uri
          readOnly: true
          type: string
      type: object
    OligoBaseRequest:
      properties:
        aliases:
          description: Aliases to add to the Oligo
          items:
            type: string
          type: array
        authorIds:
          description: IDs of users to set as the Oligo's authors.
          items:
            type: string
          type: array
        bases:
          description: |
            Base pairs of the oligo.
          type: string
        customFields:
          allOf:
          - $ref: '#/components/schemas/CustomFields'
          description: |
            Custom fields to add to the Oligo. Every field should have its name as a key, mapping to an object with information about the value of the field.
        fields:
          allOf:
          - $ref: '#/components/schemas/Fields'
          description: |
            Fields to set on the Oligo. Must correspond with the schema's field definitions. Every field should have its name as a key, mapping to an object with information about the value of the field.
        folderId:
          description: |
            ID of the folder containing the Oligo.
          type: string
        name:
          description: |
            Name of the Oligo.
          type: string
        schemaId:
          description: |
            ID of the oligo's schema.
          type: string
      type: object
    OligoBaseRequestForCreate:
      allOf:
      - $ref: '#/components/schemas/OligoBaseRequest'
      - required:
        - bases
        - name
    OligoCreate:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/OligoBaseRequestForCreate'
      - $ref: '#/components/schemas/CreateEntityIntoRegistry'
    OligoUpdate:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/OligoBaseRequest'
    OligosArchivalChange:
      description: |
        IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of Oligos along with any IDs of batches that were archived / unarchived.
      example:
        batchIds:
        - batchIds
        - batchIds
        oligoIds:
        - oligoIds
        - oligoIds
      properties:
        batchIds:
          items:
            type: string
          type: array
        oligoIds:
          items:
            type: string
          type: array
      type: object
    OligosArchive:
      additionalProperties: false
      description: |
        The request body for archiving Oligos.
      example:
        reason: null
        oligoIds:
        - oligoIds
        - oligoIds
      properties:
        oligoIds:
          items:
            type: string
          type: array
        reason:
          $ref: '#/components/schemas/EntityArchiveReason'
      required:
      - oligoIds
      - reason
      type: object
    OligosBulkCreateRequest:
      additionalProperties: false
      example:
        oligos:
        - null
        - null
      properties:
        oligos:
          items:
            $ref: '#/components/schemas/OligoCreate'
          type: array
      type: object
    OligosBulkGet:
      example:
        oligos:
        - null
        - null
      properties:
        oligos:
          items:
            $ref: '#/components/schemas/OligosBulkGet_oligos_inner'
          type: array
      type: object
    OligosPaginatedList:
      allOf:
      - $ref: '#/components/schemas/Pagination'
      - $ref: '#/components/schemas/OligosPaginatedList_allOf'
    OligosUnarchive:
      additionalProperties: false
      description: |
        The request body for unarchiving Oligos.
      example:
        oligoIds:
        - oligoIds
        - oligoIds
      properties:
        oligoIds:
          items:
            type: string
          type: array
      required:
      - oligoIds
      type: object
    Organization:
      example:
        name: name
        handle: handle
        id: id
      properties:
        handle:
          type: string
        id:
          type: string
        name:
          type: string
      type: object
    OrganizationSummary:
      properties:
        handle:
          type: string
        id:
          type: string
        name:
          type: string
      type: object
    OrganizationsPaginatedList:
      allOf:
      - $ref: '#/components/schemas/Pagination'
      - $ref: '#/components/schemas/OrganizationsPaginatedList_allOf'
      type: object
    Pagination:
      properties:
        nextToken:
          type: string
    PartySummary:
      properties:
        handle:
          type: string
        id:
          type: string
        name:
          type: string
      type: object
    Plate:
      additionalProperties: false
      example:
        schema: null
        creator: null
        modifiedAt: 2000-01-23T04:56:07.000+00:00
        type: matrix_plate
        createdAt: 2000-01-23T04:56:07.000+00:00
        parentStorageId: parentStorageId
        archiveRecord: null
        webURL: webURL
        name: name
        wells:
          key: null
        id: id
        fields:
          key:
            displayValue: displayValue
            isMulti: true
            textValue: Amp
            type: ""
            value: null
        barcode: barcode
        projectId: projectId
      properties:
        archiveRecord:
          $ref: '#/components/schemas/AaSequence_archiveRecord'
        barcode:
          description: Barcode of the plate
          nullable: true
          type: string
        createdAt:
          description: DateTime the container was created
          format: date-time
          readOnly: true
          type: string
        creator:
          $ref: '#/components/schemas/UserSummary'
        fields:
          additionalProperties:
            $ref: '#/components/schemas/Field'
          type: object
        id:
          description: ID of the plate
          type: string
        modifiedAt:
          description: DateTime the plate was last modified
          format: date-time
          readOnly: true
          type: string
        name:
          description: "Name of the plate, defaults to barcode if name is not provided."
          type: string
        parentStorageId:
          description: ID of containing parent storage (e.g. loc_k2lNspzS).
          nullable: true
          type: string
        projectId:
          description: ID of the project if set
          nullable: true
          type: string
        schema:
          $ref: '#/components/schemas/SchemaProperty_3'
        type:
          enum:
          - matrix_plate
          - well_plate
          type: string
        webURL:
          readOnly: true
          type: string
        wells:
          additionalProperties:
            $ref: '#/components/schemas/Plate_wells_value'
          description: "Well contents of the plate, keyed by position string (eg.\
            \ \"A1\")."
          type: object
      type: object
    PlateCreate:
      additionalProperties: false
      example:
        parentStorageId: parentStorageId
        schemaId: schemaId
        containerSchemaId: containerSchemaId
        name: name
        wells:
          key:
            barcode: barcode
        fields:
          key:
            displayValue: displayValue
            isMulti: true
            textValue: Amp
            type: ""
            value: null
        barcode: barcode
        projectId: projectId
      properties:
        barcode:
          type: string
        containerSchemaId:
          type: string
        fields:
          additionalProperties:
            $ref: '#/components/schemas/Field'
          type: object
        name:
          type: string
        parentStorageId:
          type: string
        projectId:
          type: string
        schemaId:
          type: string
        wells:
          additionalProperties:
            $ref: '#/components/schemas/PlateCreate_wells_value'
          type: object
      required:
      - schemaId
      type: object
    PlateCreationTableNotePart:
      allOf:
      - $ref: '#/components/schemas/BaseNotePart'
      - $ref: '#/components/schemas/StructuredTableApiIdentifiers'
      - $ref: '#/components/schemas/PlateCreationTableNotePart_allOf'
    PlateSchema:
      allOf:
      - $ref: '#/components/schemas/RegistrySchema'
      - $ref: '#/components/schemas/PlateSchema_allOf'
    PlateSchemasList:
      example:
        plateSchemas:
        - null
        - null
      properties:
        plateSchemas:
          items:
            $ref: '#/components/schemas/PlateSchema'
          readOnly: true
          type: array
      type: object
    PlateSchemasPaginatedList:
      allOf:
      - $ref: '#/components/schemas/PlateSchemasList'
      - $ref: '#/components/schemas/BatchSchemasPaginatedList_allOf'
    PlateUpdate:
      additionalProperties: false
      example:
        parentStorageId: parentStorageId
        name: name
        fields:
          key:
            displayValue: displayValue
            isMulti: true
            textValue: Amp
            type: ""
            value: null
        projectId: projectId
      properties:
        fields:
          additionalProperties:
            $ref: '#/components/schemas/Field'
          type: object
        name:
          type: string
        parentStorageId:
          type: string
        projectId:
          type: string
      type: object
    PlatesArchivalChange:
      description: |
        IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of plates along with any IDs of containers that were archived / unarchived.
      example:
        containerIds:
        - containerIds
        - containerIds
        plateIds:
        - plateIds
        - plateIds
      properties:
        containerIds:
          items:
            type: string
          type: array
        plateIds:
          items:
            type: string
          type: array
      type: object
    PlatesArchive:
      additionalProperties: false
      example:
        shouldRemoveBarcodes: true
        reason: Made in error
        plateIds:
        - plateIds
        - plateIds
      properties:
        plateIds:
          description: Array of plate IDs
          items:
            type: string
          type: array
        reason:
          description: |
            Reason that plates are being archived.
          enum:
          - Made in error
          - Retired
          - Expended
          - Shipped
          - Contaminated
          - Expired
          - Missing
          - Other
          type: string
        shouldRemoveBarcodes:
          description: |
            Remove barcodes. Removing barcodes from archived storage that contain items will also remove barcodes from the contained items.
          type: boolean
      required:
      - plateIds
      - reason
      - shouldRemoveBarcodes
      type: object
    PlatesBulkGet:
      example:
        plates:
        - schema: null
          creator: null
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          type: matrix_plate
          createdAt: 2000-01-23T04:56:07.000+00:00
          parentStorageId: parentStorageId
          archiveRecord: null
          webURL: webURL
          name: name
          wells:
            key: null
          id: id
          fields:
            key:
              displayValue: displayValue
              isMulti: true
              textValue: Amp
              type: ""
              value: null
          barcode: barcode
          projectId: projectId
        - schema: null
          creator: null
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          type: matrix_plate
          createdAt: 2000-01-23T04:56:07.000+00:00
          parentStorageId: parentStorageId
          archiveRecord: null
          webURL: webURL
          name: name
          wells:
            key: null
          id: id
          fields:
            key:
              displayValue: displayValue
              isMulti: true
              textValue: Amp
              type: ""
              value: null
          barcode: barcode
          projectId: projectId
      properties:
        plates:
          items:
            $ref: '#/components/schemas/Plate'
          type: array
      type: object
    PlatesPaginatedList:
      example:
        plates:
        - schema: null
          creator: null
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          type: matrix_plate
          createdAt: 2000-01-23T04:56:07.000+00:00
          parentStorageId: parentStorageId
          archiveRecord: null
          webURL: webURL
          name: name
          wells:
            key: null
          id: id
          fields:
            key:
              displayValue: displayValue
              isMulti: true
              textValue: Amp
              type: ""
              value: null
          barcode: barcode
          projectId: projectId
        - schema: null
          creator: null
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          type: matrix_plate
          createdAt: 2000-01-23T04:56:07.000+00:00
          parentStorageId: parentStorageId
          archiveRecord: null
          webURL: webURL
          name: name
          wells:
            key: null
          id: id
          fields:
            key:
              displayValue: displayValue
              isMulti: true
              textValue: Amp
              type: ""
              value: null
          barcode: barcode
          projectId: projectId
        nextToken: nextToken
      properties:
        nextToken:
          type: string
        plates:
          items:
            $ref: '#/components/schemas/Plate'
          type: array
      type: object
    PlatesUnarchive:
      additionalProperties: false
      example:
        plateIds:
        - plateIds
        - plateIds
      properties:
        plateIds:
          description: Array of plate IDs
          items:
            type: string
          type: array
      required:
      - plateIds
      type: object
    Primer:
      example:
        bases: bases
        bindPosition: 6
        strand: 1
        color: color
        name: name
        oligoId: oligoId
        start: 5
        end: 1
        overhangLength: 5
      properties:
        bases:
          readOnly: true
          type: string
        bindPosition:
          readOnly: true
          type: integer
        color:
          readOnly: true
          type: string
        end:
          type: integer
        name:
          readOnly: true
          type: string
        oligoId:
          type: string
        overhangLength:
          readOnly: true
          type: integer
        start:
          type: integer
        strand:
          example: 1
          type: integer
      type: object
    PrintLabels:
      additionalProperties: false
      example:
        containerIds:
        - containerIds
        - containerIds
        labelTemplateId: lbltmp_lCpY5Qvh
        printerId: print_YJQkilOJ
      properties:
        containerIds:
          description: |
            List of IDs of containers that will have labels printed (one label will be printed per container).
          items:
            type: string
          type: array
        labelTemplateId:
          description: |
            ID of label template to use (same template will be used for all labels printed).
          example: lbltmp_lCpY5Qvh
          type: string
        printerId:
          description: |
            ID of printer to use (same printer will be used for all labels printed).
          example: print_YJQkilOJ
          type: string
      required:
      - containerIds
      - labelTemplateId
      - printerId
      type: object
    Printer:
      example:
        address: address
        port: 0
        name: name
        description: description
        registryId: registryId
        id: id
      properties:
        address:
          description: Web address of the printer (either IP address or URL).
          type: string
        description:
          description: Short description of the printer.
          nullable: true
          type: string
        id:
          description: ID of the printer.
          type: string
        name:
          description: Name of the printer.
          type: string
        port:
          description: Port to reach the printer at.
          nullable: true
          type: integer
        registryId:
          description: ID of the registry associated with this printer.
          type: string
      type: object
    PrintersList:
      example:
        labelPrinters:
        - address: address
          port: 0
          name: name
          description: description
          registryId: registryId
          id: id
        - address: address
          port: 0
          name: name
          description: description
          registryId: registryId
          id: id
      properties:
        labelPrinters:
          items:
            $ref: '#/components/schemas/Printer'
          type: array
      type: object
    Project:
      example:
        owner: null
        archiveRecord: null
        name: name
        id: id
      properties:
        archiveRecord:
          $ref: '#/components/schemas/AaSequence_archiveRecord'
        id:
          type: string
        name:
          type: string
        owner:
          $ref: '#/components/schemas/Project_owner'
      type: object
    ProjectsArchivalChange:
      description: |
        IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of projects along with any IDs of project contents that were unarchived.
      example:
        entryIds:
        - entryIds
        - entryIds
        aaSequenceIds:
        - aaSequenceIds
        - aaSequenceIds
        protocolIds:
        - protocolIds
        - protocolIds
        dnaSequenceIds:
        - dnaSequenceIds
        - dnaSequenceIds
        customEntityIds:
        - customEntityIds
        - customEntityIds
        folderIds:
        - folderIds
        - folderIds
        mixtureIds:
        - mixtureIds
        - mixtureIds
        oligoIds:
        - oligoIds
        - oligoIds
        projectIds:
        - projectIds
        - projectIds
      properties:
        aaSequenceIds:
          items:
            type: string
          type: array
        customEntityIds:
          items:
            type: string
          type: array
        dnaSequenceIds:
          items:
            type: string
          type: array
        entryIds:
          items:
            type: string
          type: array
        folderIds:
          items:
            type: string
          type: array
        mixtureIds:
          items:
            type: string
          type: array
        oligoIds:
          items:
            type: string
          type: array
        projectIds:
          items:
            type: string
          type: array
        protocolIds:
          items:
            type: string
          type: array
      type: object
    ProjectsArchive:
      additionalProperties: false
      example:
        reason: Made in error
        projectIds:
        - projectIds
        - projectIds
      properties:
        projectIds:
          description: A list of project IDs to archive.
          items:
            type: string
          type: array
        reason:
          description: |
            The reason for archiving the provided projects. Accepted reasons may differ based on tenant configuration.
          enum:
          - Made in error
          - Retired
          - Other
          type: string
      required:
      - projectIds
      - reason
      type: object
    ProjectsPaginatedList:
      example:
        projects:
        - owner: null
          archiveRecord: null
          name: name
          id: id
        - owner: null
          archiveRecord: null
          name: name
          id: id
        nextToken: nextToken
      properties:
        nextToken:
          type: string
        projects:
          items:
            $ref: '#/components/schemas/Project'
          type: array
      type: object
    ProjectsUnarchive:
      additionalProperties: false
      example:
        projectIds:
        - projectIds
        - projectIds
      properties:
        projectIds:
          description: A list of project IDs to unarchive.
          items:
            type: string
          type: array
      required:
      - projectIds
      type: object
    RegisterEntities:
      additionalProperties: false
      example:
        entityIds:
        - entityIds
        - entityIds
        - entityIds
        - entityIds
        - entityIds
        namingStrategy: null
      properties:
        entityIds:
          description: Array of entity IDs
          items:
            type: string
          maxItems: 2500
          type: array
        namingStrategy:
          $ref: '#/components/schemas/NamingStrategy'
      required:
      - entityIds
      - namingStrategy
      type: object
    RegisteredEntitiesList:
      example:
        entities:
        - null
        - null
      properties:
        entities:
          items:
            $ref: '#/components/schemas/RegisteredEntitiesList_entities_inner'
          type: array
      type: object
    RegistrationOrigin:
      properties:
        originEntryId:
          nullable: true
          readOnly: true
          type: string
        registeredAt:
          format: date-time
          readOnly: true
          type: string
      type: object
    RegistrationTableNotePart:
      allOf:
      - $ref: '#/components/schemas/BaseNotePart'
      - $ref: '#/components/schemas/StructuredTableApiIdentifiers'
      - $ref: '#/components/schemas/RegistrationTableNotePart_allOf'
    RegistriesList:
      example:
        registries:
        - owner:
            name: name
            handle: handle
            id: id
          modifiedAt: 2017-04-18T05:55:48.685345Z
          name: name
          id: id
        - owner:
            name: name
            handle: handle
            id: id
          modifiedAt: 2017-04-18T05:55:48.685345Z
          name: name
          id: id
      properties:
        registries:
          items:
            $ref: '#/components/schemas/Registry'
          type: array
      type: object
    Registry:
      example:
        owner:
          name: name
          handle: handle
          id: id
        modifiedAt: 2017-04-18T05:55:48.685345Z
        name: name
        id: id
      properties:
        id:
          type: string
        modifiedAt:
          description: DateTime the Registry was last modified
          example: 2017-04-18T05:55:48.685345Z
          format: date-time
          type: string
        name:
          type: string
        owner:
          $ref: '#/components/schemas/Organization'
      type: object
    RegistrySchema:
      allOf:
      - $ref: '#/components/schemas/Schema'
      - $ref: '#/components/schemas/RegistrySchema_allOf'
    Request:
      allOf:
      - $ref: '#/components/schemas/RequestBase'
      - $ref: '#/components/schemas/Request_allOf'
    RequestBase:
      description: "A request is an ask to perform a service, e.g. produce a sample\
        \ or perform assays on a sample. Requests are usually placed to another team\
        \ or individual who specializes in performing the service."
      type: object
    RequestCreate:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/RequestWriteBase'
      - $ref: '#/components/schemas/RequestCreate_allOf'
    RequestCreatedEvent:
      allOf:
      - $ref: '#/components/schemas/EventBase'
      - $ref: '#/components/schemas/RequestCreatedEvent_allOf'
    RequestFulfillment:
      description: |
        A request fulfillment represents work that is done which changes the status of a request or a sample group within that request.
        Fulfillments are created when state changes between IN_PROGRESS, COMPLETED, or FAILED statuses. Fulfillments do not capture a PENDING state because all requests or request sample groups are considered PENDING until the first corresponding fulfillment is created.
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        modifiedAt: 2000-01-23T04:56:07.000+00:00
        requestId: req_pu9caSiv
        sampleGroup: null
        id: reqffm_8Hm71Usw
        entryId: etr_IKwdYx31
        status: null
      properties:
        createdAt:
          description: Date and time the fulfillment was created
          format: date-time
          type: string
        entryId:
          description: "ID of the entry this fulfillment was executed in, if any"
          example: etr_IKwdYx31
          type: string
        id:
          description: ID of the request fulfillment
          example: reqffm_8Hm71Usw
          type: string
        modifiedAt:
          description: DateTime the Request Fulfillment was last modified
          format: date-time
          readOnly: true
          type: string
        requestId:
          description: ID of the request this fulfillment fulfills
          example: req_pu9caSiv
          type: string
        sampleGroup:
          $ref: '#/components/schemas/RequestFulfillment_sampleGroup'
        status:
          $ref: '#/components/schemas/SampleGroupStatus'
      type: object
    RequestFulfillmentsPaginatedList:
      description: An object containing an array of RequestFulfillments
      example:
        requestFulfillments:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          requestId: req_pu9caSiv
          sampleGroup: null
          id: reqffm_8Hm71Usw
          entryId: etr_IKwdYx31
          status: null
        - createdAt: 2000-01-23T04:56:07.000+00:00
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          requestId: req_pu9caSiv
          sampleGroup: null
          id: reqffm_8Hm71Usw
          entryId: etr_IKwdYx31
          status: null
        nextToken: Im5ldyB0ZXN0Ig==
      properties:
        nextToken:
          example: Im5ldyB0ZXN0Ig==
          type: string
        requestFulfillments:
          items:
            $ref: '#/components/schemas/RequestFulfillment'
          type: array
      type: object
    RequestResponse:
      example:
        results:
        - schema: null
          createdAt: 2000-01-23T04:56:07.000+00:00
          creator: null
          validationComment: validationComment
          fieldValidation:
            key:
              validationComment: validationComment
              validationStatus: VALID
          archiveRecord: null
          isReviewed: true
          id: id
          fields:
            key:
              displayValue: displayValue
              isMulti: true
              textValue: Amp
              type: ""
              value: null
          projectId: projectId
          validationStatus: validationStatus
          entryId: entryId
        - schema: null
          createdAt: 2000-01-23T04:56:07.000+00:00
          creator: null
          validationComment: validationComment
          fieldValidation:
            key:
              validationComment: validationComment
              validationStatus: VALID
          archiveRecord: null
          isReviewed: true
          id: id
          fields:
            key:
              displayValue: displayValue
              isMulti: true
              textValue: Amp
              type: ""
              value: null
          projectId: projectId
          validationStatus: validationStatus
          entryId: entryId
        samples:
        - batch: null
          entity: null
          status: COMPLETED
        - batch: null
          entity: null
          status: COMPLETED
      properties:
        results:
          items:
            $ref: '#/components/schemas/AssayResult'
          type: array
        samples:
          description: Array of samples produced by the request.
          items:
            $ref: '#/components/schemas/RequestResponse_samples_inner'
          type: array
      type: object
    RequestResponseSamplesItemBatch:
      allOf:
      - $ref: '#/components/schemas/BatchOrInaccessibleResource'
    RequestResponseSamplesItemEntity:
      allOf:
      - $ref: '#/components/schemas/EntityOrInaccessibleResource'
    RequestSampleGroup:
      properties:
        id:
          example: sgrp_YJKtcWV
          type: string
        samples:
          additionalProperties:
            $ref: '#/components/schemas/RequestSampleGroupSamples_value'
          description: |
            The key for each RequestSample should match one of the samplesSchema[n].name property in the request schema json.
          example:
            Batch Example:
              batchId: bat_XK0UnLyk
            Entity Example:
              containerId: ctn_urUAEBq
              entityId: seq_nDtxYEs
          type: object
      type: object
    RequestSampleGroupCreate:
      properties:
        samples:
          additionalProperties:
            $ref: '#/components/schemas/RequestSampleGroupSamples_value'
          description: |
            The key for each RequestSample should match one of the samplesSchema[n].name property in the request schema json.
          example:
            Batch Example:
              batchId: bat_XK0UnLyk
            Entity Example:
              containerId: ctn_urUAEBq
              entityId: seq_nDtxYEs
          type: object
      required:
      - samples
      type: object
    RequestSampleGroupSamples:
      additionalProperties:
        $ref: '#/components/schemas/RequestSampleGroupSamples_value'
      description: |
        The key for each RequestSample should match one of the samplesSchema[n].name property in the request schema json.
      example:
        Batch Example:
          batchId: bat_XK0UnLyk
        Entity Example:
          containerId: ctn_urUAEBq
          entityId: seq_nDtxYEs
      type: object
    RequestSampleWithBatch:
      properties:
        batchId:
          example: bat_XK0UnLyk
          type: string
        containerId:
          example: ctn_urUAEBq
          type: string
      required:
      - batchId
      type: object
    RequestSampleWithEntity:
      properties:
        containerId:
          example: ctn_urUAEBq
          type: string
        entityId:
          example: seq_nDtxYEs
          type: string
      required:
      - entityId
      type: object
    RequestSchema:
      allOf:
      - $ref: '#/components/schemas/Schema'
      - $ref: '#/components/schemas/RequestSchema_allOf'
    RequestSchemasPaginatedList:
      example:
        requestSchemas:
        - null
        - null
        nextToken: nextToken
      properties:
        nextToken:
          type: string
        requestSchemas:
          items:
            $ref: '#/components/schemas/RequestSchema'
          readOnly: true
          type: array
      type: object
    RequestStatus:
      enum:
      - REQUESTED
      - SCHEDULED
      - IN_PROGRESS
      - COMPLETED
      - CANCELLED
      type: string
    RequestTask:
      allOf:
      - $ref: '#/components/schemas/RequestTaskBase'
      description: |
        A request task.
      example:
        schema: ""
      properties:
        schema:
          allOf:
          - $ref: '#/components/schemas/SchemaSummary'
          nullable: true
          title: SchemaProperty
      type: object
    RequestTaskBase:
      allOf:
      - $ref: '#/components/schemas/RequestTaskBaseFields'
      description: |
        A request task.
      example:
        id: reqtsk_PFHQ8rmb
      properties:
        id:
          description: ID of the request task
          example: reqtsk_PFHQ8rmb
          type: string
      required:
      - id
      type: object
    RequestTaskBaseFields:
      description: |
        Shared fields for request tasks and related endpoints.
      properties:
        fields:
          allOf:
          - $ref: '#/components/schemas/Fields'
          description: |
            Schema fields to set on the request task.
            Every field should have its name as a key, mapping to an object with information about the value of the field.
        sampleGroupIds:
          description: IDs of all request sample groups now associated with this task.
          items:
            type: string
          type: array
      type: object
    RequestTaskSchema:
      allOf:
      - $ref: '#/components/schemas/Schema'
      - $ref: '#/components/schemas/RequestTaskSchema_allOf'
    RequestTaskSchemasPaginatedList:
      example:
        nextToken: nextToken
        requestTaskSchemas:
        - null
        - null
      properties:
        nextToken:
          type: string
        requestTaskSchemas:
          items:
            $ref: '#/components/schemas/RequestTaskSchema'
          readOnly: true
          type: array
      type: object
    RequestTasksBulkCreate:
      allOf:
      - $ref: '#/components/schemas/RequestTaskBaseFields'
      example:
        schemaId: reqtsksch_XHu79QRw
      properties:
        schemaId:
          description: The schema id of the task to create
          example: reqtsksch_XHu79QRw
          type: string
      required:
      - schemaId
      type: object
    RequestTasksBulkCreateRequest:
      additionalProperties: false
      example:
        tasks:
        - schemaId: reqtsksch_XHu79QRw
        - schemaId: reqtsksch_XHu79QRw
        - schemaId: reqtsksch_XHu79QRw
        - schemaId: reqtsksch_XHu79QRw
        - schemaId: reqtsksch_XHu79QRw
      properties:
        tasks:
          description: The tasks to create
          items:
            $ref: '#/components/schemas/RequestTasksBulkCreate'
          maxItems: 100
          type: array
      required:
      - tasks
      type: object
    RequestTasksBulkCreateResponse:
      example:
        tasks:
        - schema: ""
        - schema: ""
      properties:
        tasks:
          description: The created tasks
          items:
            $ref: '#/components/schemas/RequestTask'
          type: array
      type: object
    RequestTasksBulkUpdateRequest:
      additionalProperties: false
      description: |
        A request body for bulk updating request tasks.
      example:
        tasks:
        - id: reqtsk_PFHQ8rmb
        - id: reqtsk_PFHQ8rmb
      properties:
        tasks:
          description: The tasks to update
          items:
            $ref: '#/components/schemas/RequestTaskBase'
          type: array
      required:
      - tasks
      type: object
    RequestTasksBulkUpdateResponse:
      example:
        tasks:
        - schema: ""
        - schema: ""
      properties:
        tasks:
          description: The tasks to update
          items:
            $ref: '#/components/schemas/RequestTask'
          type: array
      type: object
    RequestTeamAssignee:
      properties:
        team:
          $ref: '#/components/schemas/TeamSummary'
      type: object
    RequestUpdate:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/RequestWriteBase'
      - $ref: '#/components/schemas/RequestUpdate_allOf'
    RequestUpdatedFieldsEvent:
      allOf:
      - $ref: '#/components/schemas/EventBase'
      - $ref: '#/components/schemas/UpdateEventMixin'
      - $ref: '#/components/schemas/RequestUpdatedFieldsEvent_allOf'
    RequestUserAssignee:
      properties:
        user:
          $ref: '#/components/schemas/UserSummary'
      type: object
    RequestWriteBase:
      allOf:
      - $ref: '#/components/schemas/RequestBase'
      - $ref: '#/components/schemas/RequestWriteBase_allOf'
    RequestWriteTeamAssignee:
      properties:
        teamId:
          example: team_5cjIguqc
          type: string
      required:
      - teamId
      type: object
    RequestWriteUserAssignee:
      properties:
        userId:
          example: ent_a0SApq3z
          type: string
      required:
      - userId
      type: object
    RequestsBulkGet:
      example:
        requests:
        - null
        - null
      properties:
        requests:
          items:
            $ref: '#/components/schemas/Request'
          type: array
      type: object
    RequestsPaginatedList:
      allOf:
      - $ref: '#/components/schemas/RequestsBulkGet'
      - $ref: '#/components/schemas/RequestsPaginatedList_allOf'
    ResultsTableNotePart:
      allOf:
      - $ref: '#/components/schemas/BaseNotePart'
      - $ref: '#/components/schemas/StructuredTableApiIdentifiers'
      - $ref: '#/components/schemas/ResultsTableNotePart_allOf'
    RnaAnnotation:
      allOf:
      - $ref: '#/components/schemas/SequenceFeatureBase'
      - $ref: '#/components/schemas/RnaAnnotation_allOf'
    RnaOligo:
      allOf:
      - $ref: '#/components/schemas/Oligo'
      - $ref: '#/components/schemas/RnaOligo_allOf'
    RnaOligoBulkUpdate:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/AaSequenceBulkUpdate_allOf'
      - $ref: '#/components/schemas/RnaOligoUpdate'
    RnaOligoCreate:
      allOf:
      - $ref: '#/components/schemas/OligoCreate'
    RnaOligoUpdate:
      allOf:
      - $ref: '#/components/schemas/OligoUpdate'
    RnaOligoWithEntityType:
      allOf:
      - $ref: '#/components/schemas/RnaOligo'
      - $ref: '#/components/schemas/RnaOligoWithEntityType_allOf'
      type: object
    RnaOligosArchivalChange:
      description: |
        IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of RNA Oligos along with any IDs of batches that were archived / unarchived.
      example:
        rnaOligoIds:
        - rnaOligoIds
        - rnaOligoIds
        batchIds:
        - batchIds
        - batchIds
      properties:
        batchIds:
          items:
            type: string
          type: array
        rnaOligoIds:
          items:
            type: string
          type: array
      type: object
    RnaOligosArchive:
      additionalProperties: false
      description: |
        The request body for archiving RNA Oligos.
      example:
        reason: null
        rnaOligoIds:
        - rnaOligoIds
        - rnaOligoIds
      properties:
        reason:
          $ref: '#/components/schemas/EntityArchiveReason'
        rnaOligoIds:
          items:
            type: string
          type: array
      required:
      - reason
      - rnaOligoIds
      type: object
    RnaOligosBulkCreateRequest:
      additionalProperties: false
      example:
        rnaOligos:
        - null
        - null
        - null
        - null
        - null
      properties:
        rnaOligos:
          items:
            $ref: '#/components/schemas/RnaOligoCreate'
          maxItems: 1000
          type: array
      type: object
    RnaOligosBulkUpdateRequest:
      additionalProperties: false
      example:
        rnaOligos:
        - null
        - null
      properties:
        rnaOligos:
          items:
            $ref: '#/components/schemas/RnaOligoBulkUpdate'
          type: array
      type: object
    RnaOligosPaginatedList:
      allOf:
      - $ref: '#/components/schemas/Pagination'
      - $ref: '#/components/schemas/RnaOligosPaginatedList_allOf'
    RnaOligosUnarchive:
      additionalProperties: false
      description: |
        The request body for unarchiving RNA Oligos.
      example:
        rnaOligoIds:
        - rnaOligoIds
        - rnaOligoIds
      properties:
        rnaOligoIds:
          items:
            type: string
          type: array
      required:
      - rnaOligoIds
      type: object
    RnaSequence:
      example:
        schema: null
        creator: null
        registrationOrigin: null
        aliases:
        - aliases
        - aliases
        isCircular: false
        customFields:
          Legacy ID:
            value: STR100
        modifiedAt: 2000-01-23T04:56:07.000+00:00
        length: 0
        annotations:
        - null
        - null
        registryId: registryId
        folderId: folderId
        bases: bases
        entityRegistryId: entityRegistryId
        createdAt: 2000-01-23T04:56:07.000+00:00
        apiURL: https://benchling.com/api/v2/rna-sequences/seq_asZya4lk
        archiveRecord: null
        translations:
        - null
        - null
        webURL: webURL
        name: name
        id: id
        fields:
          key:
            displayValue: displayValue
            isMulti: true
            textValue: Amp
            type: ""
            value: null
        primers:
        - bases: bases
          bindPosition: 6
          strand: 1
          color: color
          name: name
          oligoId: oligoId
          start: 5
          end: 1
          overhangLength: 5
        - bases: bases
          bindPosition: 6
          strand: 1
          color: color
          name: name
          oligoId: oligoId
          start: 5
          end: 1
          overhangLength: 5
      properties:
        aliases:
          items:
            type: string
          type: array
        annotations:
          items:
            $ref: '#/components/schemas/RnaAnnotation'
          type: array
        apiURL:
          description: The canonical url of the RNA Sequence in the API.
          example: https://benchling.com/api/v2/rna-sequences/seq_asZya4lk
          format: uri
          readOnly: true
          type: string
        archiveRecord:
          $ref: '#/components/schemas/AaSequence_archiveRecord'
        bases:
          type: string
        createdAt:
          format: date-time
          readOnly: true
          type: string
        creator:
          $ref: '#/components/schemas/UserSummary'
        customFields:
          additionalProperties:
            $ref: '#/components/schemas/CustomField'
          example:
            Legacy ID:
              value: STR100
          type: object
        entityRegistryId:
          nullable: true
          type: string
        fields:
          additionalProperties:
            $ref: '#/components/schemas/Field'
          type: object
        folderId:
          nullable: true
          type: string
        id:
          type: string
        isCircular:
          example: false
          type: boolean
        length:
          type: integer
        modifiedAt:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        primers:
          items:
            $ref: '#/components/schemas/Primer'
          type: array
        registrationOrigin:
          $ref: '#/components/schemas/AaSequence_registrationOrigin'
        registryId:
          nullable: true
          type: string
        schema:
          $ref: '#/components/schemas/AaSequence_schema'
        translations:
          items:
            $ref: '#/components/schemas/Translation'
          type: array
        webURL:
          readOnly: true
          type: string
      type: object
    RnaSequenceBaseRequest:
      properties:
        aliases:
          description: Aliases to add to the RNA sequence
          items:
            type: string
          type: array
        annotations:
          description: |
            Annotations to create on the RNA sequence.
          items:
            $ref: '#/components/schemas/RnaAnnotation'
          type: array
        authorIds:
          description: IDs of users to set as the RNA sequence's authors.
          items:
            type: string
          type: array
        bases:
          description: |
            Base pairs for the RNA sequence.
          type: string
        customFields:
          allOf:
          - $ref: '#/components/schemas/CustomFields'
          description: |
            Custom fields to add to the RNA sequence. Every field should have its name as a key, mapping to an object with information about the value of the field.
        fields:
          allOf:
          - $ref: '#/components/schemas/Fields'
          description: |
            Fields to set on the RNA sequence. Must correspond with the schema's field definitions. Every field should have its name as a key, mapping to an object with information about the value of the field.
        folderId:
          description: |
            ID of the folder containing the RNA sequence.
          type: string
        isCircular:
          description: |
            Whether the RNA sequence is circular or linear. RNA sequences can only be linear
          example: false
          type: boolean
        name:
          description: |
            Name of the RNA sequence.
          type: string
        primers:
          items:
            $ref: '#/components/schemas/Primer'
          type: array
        schemaId:
          description: |
            ID of the RNA sequence's schema.
          type: string
        translations:
          description: |
            Translations to create on the RNA sequence. Translations are specified by either a combination of 'start' and 'end' fields, or a list of regions. Both cannot be provided.
          items:
            $ref: '#/components/schemas/Translation'
          type: array
      type: object
    RnaSequenceBaseRequestForCreate:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/RnaSequenceBaseRequest'
      - required:
        - bases
        - name
    RnaSequenceBulkCreate:
      allOf:
      - $ref: '#/components/schemas/RnaSequenceCreate'
    RnaSequenceBulkUpdate:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/AaSequenceBulkUpdate_allOf'
      - $ref: '#/components/schemas/RnaSequenceBaseRequest'
    RnaSequenceCreate:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/RnaSequenceBaseRequestForCreate'
      - $ref: '#/components/schemas/CreateEntityIntoRegistry'
    RnaSequenceRequestRegistryFields:
      properties:
        entityRegistryId:
          type: string
      type: object
    RnaSequenceUpdate:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/RnaSequenceBaseRequest'
      - $ref: '#/components/schemas/RnaSequenceRequestRegistryFields'
    RnaSequencesArchivalChange:
      description: |
        IDs of all RNA Sequences that were archived or unarchived, grouped by resource type.
      example:
        rnaSequenceIds:
        - rnaSequenceIds
        - rnaSequenceIds
      properties:
        rnaSequenceIds:
          items:
            type: string
          type: array
      type: object
    RnaSequencesArchive:
      additionalProperties: false
      description: |
        The request body for archiving RNA sequences.
      example:
        reason: null
        rnaSequenceIds:
        - rnaSequenceIds
        - rnaSequenceIds
      properties:
        reason:
          $ref: '#/components/schemas/EntityArchiveReason'
        rnaSequenceIds:
          items:
            type: string
          type: array
      required:
      - reason
      - rnaSequenceIds
      type: object
    RnaSequencesBulkCreateRequest:
      additionalProperties: false
      example:
        rnaSequences:
        - null
        - null
        - null
        - null
        - null
      properties:
        rnaSequences:
          items:
            $ref: '#/components/schemas/RnaSequenceBulkCreate'
          maxItems: 1000
          type: array
      type: object
    RnaSequencesBulkGet:
      example:
        rnaSequences:
        - schema: null
          creator: null
          registrationOrigin: null
          aliases:
          - aliases
          - aliases
          isCircular: false
          customFields:
            Legacy ID:
              value: STR100
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          length: 0
          annotations:
          - null
          - null
          registryId: registryId
          folderId: folderId
          bases: bases
          entityRegistryId: entityRegistryId
          createdAt: 2000-01-23T04:56:07.000+00:00
          apiURL: https://benchling.com/api/v2/rna-sequences/seq_asZya4lk
          archiveRecord: null
          translations:
          - null
          - null
          webURL: webURL
          name: name
          id: id
          fields:
            key:
              displayValue: displayValue
              isMulti: true
              textValue: Amp
              type: ""
              value: null
          primers:
          - bases: bases
            bindPosition: 6
            strand: 1
            color: color
            name: name
            oligoId: oligoId
            start: 5
            end: 1
            overhangLength: 5
          - bases: bases
            bindPosition: 6
            strand: 1
            color: color
            name: name
            oligoId: oligoId
            start: 5
            end: 1
            overhangLength: 5
        - schema: null
          creator: null
          registrationOrigin: null
          aliases:
          - aliases
          - aliases
          isCircular: false
          customFields:
            Legacy ID:
              value: STR100
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          length: 0
          annotations:
          - null
          - null
          registryId: registryId
          folderId: folderId
          bases: bases
          entityRegistryId: entityRegistryId
          createdAt: 2000-01-23T04:56:07.000+00:00
          apiURL: https://benchling.com/api/v2/rna-sequences/seq_asZya4lk
          archiveRecord: null
          translations:
          - null
          - null
          webURL: webURL
          name: name
          id: id
          fields:
            key:
              displayValue: displayValue
              isMulti: true
              textValue: Amp
              type: ""
              value: null
          primers:
          - bases: bases
            bindPosition: 6
            strand: 1
            color: color
            name: name
            oligoId: oligoId
            start: 5
            end: 1
            overhangLength: 5
          - bases: bases
            bindPosition: 6
            strand: 1
            color: color
            name: name
            oligoId: oligoId
            start: 5
            end: 1
            overhangLength: 5
      properties:
        rnaSequences:
          items:
            $ref: '#/components/schemas/RnaSequence'
          type: array
      type: object
    RnaSequencesBulkUpdateRequest:
      additionalProperties: false
      example:
        rnaSequences:
        - null
        - null
      properties:
        rnaSequences:
          items:
            $ref: '#/components/schemas/RnaSequenceBulkUpdate'
          type: array
      type: object
    RnaSequencesPaginatedList:
      example:
        nextToken: nextToken
        rnaSequences:
        - schema: null
          creator: null
          registrationOrigin: null
          aliases:
          - aliases
          - aliases
          isCircular: false
          customFields:
            Legacy ID:
              value: STR100
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          length: 0
          annotations:
          - null
          - null
          registryId: registryId
          folderId: folderId
          bases: bases
          entityRegistryId: entityRegistryId
          createdAt: 2000-01-23T04:56:07.000+00:00
          apiURL: https://benchling.com/api/v2/rna-sequences/seq_asZya4lk
          archiveRecord: null
          translations:
          - null
          - null
          webURL: webURL
          name: name
          id: id
          fields:
            key:
              displayValue: displayValue
              isMulti: true
              textValue: Amp
              type: ""
              value: null
          primers:
          - bases: bases
            bindPosition: 6
            strand: 1
            color: color
            name: name
            oligoId: oligoId
            start: 5
            end: 1
            overhangLength: 5
          - bases: bases
            bindPosition: 6
            strand: 1
            color: color
            name: name
            oligoId: oligoId
            start: 5
            end: 1
            overhangLength: 5
        - schema: null
          creator: null
          registrationOrigin: null
          aliases:
          - aliases
          - aliases
          isCircular: false
          customFields:
            Legacy ID:
              value: STR100
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          length: 0
          annotations:
          - null
          - null
          registryId: registryId
          folderId: folderId
          bases: bases
          entityRegistryId: entityRegistryId
          createdAt: 2000-01-23T04:56:07.000+00:00
          apiURL: https://benchling.com/api/v2/rna-sequences/seq_asZya4lk
          archiveRecord: null
          translations:
          - null
          - null
          webURL: webURL
          name: name
          id: id
          fields:
            key:
              displayValue: displayValue
              isMulti: true
              textValue: Amp
              type: ""
              value: null
          primers:
          - bases: bases
            bindPosition: 6
            strand: 1
            color: color
            name: name
            oligoId: oligoId
            start: 5
            end: 1
            overhangLength: 5
          - bases: bases
            bindPosition: 6
            strand: 1
            color: color
            name: name
            oligoId: oligoId
            start: 5
            end: 1
            overhangLength: 5
      properties:
        nextToken:
          type: string
        rnaSequences:
          items:
            $ref: '#/components/schemas/RnaSequence'
          type: array
      type: object
    RnaSequencesUnarchive:
      additionalProperties: false
      description: |
        The request body for unarchiving RNA sequences.
      example:
        rnaSequenceIds:
        - rnaSequenceIds
        - rnaSequenceIds
      properties:
        rnaSequenceIds:
          items:
            type: string
          type: array
      required:
      - rnaSequenceIds
      type: object
    SampleGroup:
      description: Represents a sample group that is an input to a request. A sample
        group is a set of samples upon which work in the request should be done.
      properties:
        id:
          type: string
        samples:
          type: object
      type: object
    SampleGroupStatus:
      description: Status of a sample group
      enum:
      - IN_PROGRESS
      - COMPLETED
      - FAILED
      type: string
    SampleGroupStatusUpdate:
      example:
        sampleGroupId: sgrp_2GPCXk6
        status: null
      properties:
        sampleGroupId:
          description: The string id of the sample group
          example: sgrp_2GPCXk6
          type: string
        status:
          $ref: '#/components/schemas/SampleGroupStatus'
      required:
      - sampleGroupId
      - status
      type: object
    SampleGroupsStatusUpdate:
      additionalProperties: false
      description: Specification to update status of sample groups on the request
        which were executed.
      example:
        sampleGroups:
        - sampleGroupId: sgrp_2GPCXk6
          status: null
        - sampleGroupId: sgrp_2GPCXk6
          status: null
      properties:
        sampleGroups:
          items:
            $ref: '#/components/schemas/SampleGroupStatusUpdate'
          type: array
      required:
      - sampleGroups
      type: object
    Schema:
      properties:
        archiveRecord:
          $ref: '#/components/schemas/AaSequence_archiveRecord'
        fieldDefinitions:
          items:
            $ref: '#/components/schemas/Schema_fieldDefinitions_inner'
          type: array
        id:
          type: string
        name:
          type: string
        type:
          type: string
      type: object
    SchemaDependencySubtypes:
      enum:
      - aa_sequence
      - dna_sequence
      - custom_entity
      - mixture
      - molecule
      - dna_oligo
      - rna_oligo
      - rna_sequence
      type: string
    SchemaFieldsQueryParam:
      additionalProperties: true
      example:
        schemaField.<MY_SCHEMA_FIELD_NAME1>: <MY_SCHEMA_FIELD_VALUE1 (not displayValue)>
        schemaField.<MY_SCHEMA_FIELD_NAME2>: <MY_SCHEMA_FIELD_VALUE2 (not displayValue)>
      type: object
    SchemaLinkFieldDefinition:
      allOf:
      - $ref: '#/components/schemas/FieldDefinition'
      - $ref: '#/components/schemas/SchemaLinkFieldDefinition_allOf'
    SchemaSummary:
      properties:
        id:
          type: string
        name:
          type: string
      type: object
    SecureTextAppConfigItem:
      allOf:
      - $ref: '#/components/schemas/BaseAppConfigItem'
      - $ref: '#/components/schemas/SecureTextAppConfigItem_allOf'
      type: object
    SequenceFeatureBase:
      properties:
        color:
          description: Hex color code used when displaying this feature in the UI.
          example: '#F58A5E'
          type: string
        customFields:
          items:
            $ref: '#/components/schemas/SequenceFeatureCustomField'
          maxItems: 100
          type: array
        name:
          maxLength: 2048
          type: string
        notes:
          example: Cong et al Science. 2013 Jan 3.
          maxLength: 10000
          type: string
      type: object
    SequenceFeatureCustomField:
      description: "A name and value pair associated with a sequence feature (annotation\
        \ or translation). For genbank imports, these are the qualifiers associated\
        \ with each feature."
      properties:
        name:
          description: Name of the custom field
          type: string
        value:
          description: Value of the custom field
          type: string
      type: object
    SimpleFieldDefinition:
      allOf:
      - $ref: '#/components/schemas/FieldDefinition'
      - $ref: '#/components/schemas/SimpleFieldDefinition_allOf'
    SimpleNotePart:
      allOf:
      - $ref: '#/components/schemas/BaseNotePart'
      - $ref: '#/components/schemas/SimpleNotePart_allOf'
      description: |
        Simple note parts include the following types: - 'text': plain text - 'code': preformatted code block - 'list_bullet': one "line" of a bulleted list - 'list_number': one "line" of a numbered list
    StageEntry:
      additionalProperties: false
      description: A notebook entry used for execution of one or more stage runs in
        a legacy workflow.
      properties:
        apiURL:
          description: The canonical url of the Stage Entry in the API.
          example: https://benchling.com/api/v2-alpha/stage-entries/stgentr_1HEcejZq
          format: uri
          readOnly: true
          type: string
        authors:
          description: |
            Array of UserSummary Resources of the authors of the stage entry. This defaults to the creator but can be manually changed.
          items:
            $ref: '#/components/schemas/UserSummary'
          type: array
        createdAt:
          description: DateTime the stage entry was created at
          format: date-time
          readOnly: true
          type: string
        creator:
          $ref: '#/components/schemas/StageEntry_creator'
        customFields:
          additionalProperties:
            $ref: '#/components/schemas/CustomField'
          example:
            Legacy ID:
              value: STR100
          type: object
        displayId:
          description: User-friendly ID of the stage entry
          type: string
        fields:
          additionalProperties:
            $ref: '#/components/schemas/Field'
          type: object
        folderId:
          description: ID of the folder that contains the stage entry
          type: string
        id:
          description: ID of the stage entry
          type: string
        modifiedAt:
          description: DateTime the stage entry was last modified
          type: string
        name:
          description: Title of the stage entry
          type: string
        reviewRecord:
          description: Review record if set
          nullable: true
          type: object
        schema:
          $ref: '#/components/schemas/SchemaProperty_4'
        webURL:
          description: URL of the stage entry
          type: string
        workflowId:
          description: ID of the parent workflow
          example: wfw_7COQmok7
          type: string
        workflowStageId:
          description: ID of the associated workflow stage
          example: wfwstg_EZuryAiW
          type: string
      type: object
    StageEntryCreatedEvent:
      allOf:
      - $ref: '#/components/schemas/EventBase'
    StageEntryUpdatedFieldsEvent:
      allOf:
      - $ref: '#/components/schemas/EventBase'
      - $ref: '#/components/schemas/UpdateEventMixin'
      - $ref: '#/components/schemas/StageEntryUpdatedFieldsEvent_allOf'
    StageEntryUpdatedReviewRecordEvent:
      allOf:
      - $ref: '#/components/schemas/EventBase'
      - $ref: '#/components/schemas/UpdateEventMixin'
      - $ref: '#/components/schemas/StageEntryUpdatedReviewRecordEvent_allOf'
    StructuredTableApiIdentifiers:
      properties:
        apiId:
          type: string
        columns:
          items:
            $ref: '#/components/schemas/StructuredTableColumnInfo'
          type: array
      type: object
    StructuredTableColumnInfo:
      properties:
        columnId:
          type: string
        isReadOnly:
          type: boolean
        name:
          type: string
      type: object
    TableNotePart:
      allOf:
      - $ref: '#/components/schemas/BaseNotePart'
      - $ref: '#/components/schemas/TableNotePart_allOf'
      description: A table with rows and columns of text
    Team:
      allOf:
      - $ref: '#/components/schemas/TeamSummary'
      - example:
          handle: elion_team
          id: team_5cjIguqc
          name: Elion's Team
          organization: Elion's Org
      - $ref: '#/components/schemas/Team_allOf'
      type: object
    TeamSummary:
      allOf:
      - $ref: '#/components/schemas/PartySummary'
      - example:
          handle: elion_team
          id: team_5cjIguqc
          name: Elion's Team
    TeamsPaginatedList:
      allOf:
      - $ref: '#/components/schemas/Pagination'
      - $ref: '#/components/schemas/TeamsPaginatedList_allOf'
    TextAppConfigItem:
      allOf:
      - $ref: '#/components/schemas/BaseAppConfigItem'
      - $ref: '#/components/schemas/TextAppConfigItem_allOf'
      type: object
    TokenCreate:
      properties:
        client_id:
          description: |
            ID of client to request token for. Leave off if client ID and secret are being supplied through Authorization header.
          type: string
        client_secret:
          description: |
            Leave off if client ID and secret are being supplied through Authorization header.
          type: string
        grant_type:
          enum:
          - client_credentials
          example: client_credentials
          type: string
      required:
      - grant_type
      type: object
    TokenResponse:
      example:
        access_token: eyJ...
        token_type: Bearer
        expires_in: 900
      properties:
        access_token:
          example: eyJ...
          type: string
        expires_in:
          description: Number of seconds that token is valid for
          example: 900
          type: integer
        token_type:
          enum:
          - Bearer
          example: Bearer
          type: string
      type: object
    TransfersAsyncTask:
      allOf:
      - $ref: '#/components/schemas/AsyncTask'
      - $ref: '#/components/schemas/TransfersAsyncTask_allOf'
      type: object
    Translation:
      allOf:
      - $ref: '#/components/schemas/SequenceFeatureBase'
      - $ref: '#/components/schemas/Translation_allOf'
    UnregisterEntities:
      additionalProperties: false
      example:
        entityIds:
        - entityIds
        - entityIds
        folderId: folderId
      properties:
        entityIds:
          description: Array of entity IDs
          items:
            type: string
          type: array
        folderId:
          description: ID of the folder that the entities should be moved to
          type: string
      required:
      - entityIds
      - folderId
      type: object
    UpdateEventMixin:
      properties:
        updates:
          description: |
            These properties have been updated, causing this message
          example:
          - fields.Cost Center
          items:
            type: string
          type: array
      type: object
    User:
      allOf:
      - $ref: '#/components/schemas/UserSummary'
      - example:
          email: lpasteur@benchling.com
          handle: lpasteur
          id: ent_a0SApq3z
          isSuspended: false
          name: Louis Pasteur
      - $ref: '#/components/schemas/User_allOf'
      type: object
    UserSummary:
      allOf:
      - $ref: '#/components/schemas/PartySummary'
      - example:
          handle: lpasteur
          id: ent_a0SApq3z
          name: Louis Pasteur
    UserValidation:
      example:
        validationComment: validationComment
        validationStatus: VALID
      properties:
        validationComment:
          description: A string explaining the reason for the provided validation
            status.
          type: string
        validationStatus:
          description: |
            Valid values for this enum depend on whether it is used to set a value (e.g., in a POST request), or is a return value for an existing result.
            Acceptable values for setting a status are 'VALID' or 'INVALID'. Possible return values are 'VALID', 'INVALID', or 'PARTIALLY_VALID' (a result will be partially valid if it has some valid fields and some invalid fields).
          enum:
          - VALID
          - INVALID
          - PARTIALLY_VALID
          type: string
      type: object
    UsersPaginatedList:
      allOf:
      - $ref: '#/components/schemas/Pagination'
      - $ref: '#/components/schemas/UsersPaginatedList_allOf'
    WarehouseCredentials:
      example:
        password: 9YC122LzxKW1Uq2q
        expiresAt: 2017-04-18T05:54:56.247545Z
        username: u$lpasteur_az
      properties:
        expiresAt:
          description: |
            The time after which new connections using the username/password will not be permitted. Upon expiration, currently open connections are not terminated.
          example: 2017-04-18T05:54:56.247545Z
          format: date-time
          readOnly: true
          type: string
        password:
          description: The password to connect to the warehouse.
          example: 9YC122LzxKW1Uq2q
          readOnly: true
          type: string
        username:
          description: The username to connect to the warehouse.
          example: u$lpasteur_az
          readOnly: true
          type: string
      type: object
    WarehouseCredentialsCreate:
      additionalProperties: false
      example:
        expiresIn: 289
      properties:
        expiresIn:
          description: |
            Duration, in seconds, that credentials should be active for. Must be greater than 0 and less than 3600.
          maximum: 3599
          minimum: 1
          type: integer
      required:
      - expiresIn
      type: object
    Well:
      additionalProperties: false
      properties:
        archiveRecord:
          $ref: '#/components/schemas/Container_archiveRecord'
        barcode:
          description: Barcode of the well
          type: string
        checkoutRecord:
          allOf:
          - $ref: '#/components/schemas/CheckoutRecord'
          readOnly: true
        contents:
          description: "Array of well contents, each with a batch and concentration"
          items:
            $ref: '#/components/schemas/ContainerContent'
          type: array
        createdAt:
          description: DateTime the well was created
          format: date-time
          readOnly: true
          type: string
        creator:
          $ref: '#/components/schemas/UserSummary'
        fields:
          additionalProperties:
            $ref: '#/components/schemas/Field'
          type: object
        id:
          description: ID of the well
          readOnly: true
          type: string
        modifiedAt:
          description: DateTime the well was last modified
          format: date-time
          readOnly: true
          type: string
        name:
          description: "Name of the well, defaults to barcode if name is not provided."
          type: string
        parentStorageId:
          description: "ID of containing parent storage, a plate well with a coordinate\
            \ (e.g. plt_2bAks9dx:a2)."
          nullable: true
          type: string
        parentStorageSchema:
          $ref: '#/components/schemas/SchemaSummary'
        projectId:
          description: ID of the project if set
          nullable: true
          type: string
        quantity:
          $ref: '#/components/schemas/ContainerQuantity'
        schema:
          $ref: '#/components/schemas/AaSequence_schema'
        volume:
          $ref: '#/components/schemas/DeprecatedContainerVolumeForResponse'
        webURL:
          readOnly: true
          type: string
      type: object
    WorkflowList:
      example:
        workflows:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          id: wfw_uHBz7ka2
          displayId: displayId
          projectId: projectId
        - createdAt: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          id: wfw_uHBz7ka2
          displayId: displayId
          projectId: projectId
      properties:
        workflows:
          items:
            $ref: '#/components/schemas/LegacyWorkflow'
          type: array
      type: object
    WorkflowOutput:
      allOf:
      - $ref: '#/components/schemas/WorkflowOutputSummary'
      - $ref: '#/components/schemas/WorkflowOutput_allOf'
    WorkflowOutputArchiveReason:
      description: |
        The reason for archiving the provided workflow outputs. Accepted reasons may differ based on tenant configuration.
      enum:
      - Made in error
      - Retired
      - Other
      type: string
    WorkflowOutputBulkCreate:
      allOf:
      - $ref: '#/components/schemas/WorkflowOutputCreate'
    WorkflowOutputBulkUpdate:
      allOf:
      - $ref: '#/components/schemas/WorkflowOutputWriteBase'
      - $ref: '#/components/schemas/WorkflowOutputBulkUpdate_allOf'
    WorkflowOutputCreate:
      allOf:
      - $ref: '#/components/schemas/WorkflowOutputWriteBase'
      - $ref: '#/components/schemas/WorkflowOutputCreate_allOf'
    WorkflowOutputCreatedEvent:
      allOf:
      - $ref: '#/components/schemas/EventBase'
      - $ref: '#/components/schemas/WorkflowOutputCreatedEvent_allOf'
    WorkflowOutputSchema:
      properties:
        archiveRecord:
          $ref: '#/components/schemas/AaSequence_archiveRecord'
        fieldDefinitions:
          items:
            $ref: '#/components/schemas/Schema_fieldDefinitions_inner'
          type: array
        name:
          type: string
        prefix:
          type: string
        type:
          type: string
      type: object
    WorkflowOutputSummary:
      properties:
        displayId:
          description: User-friendly ID of the workflow task group
          type: string
        id:
          description: The ID of the workflow output
          example: wfout_5cJLQKVF
          readOnly: true
          type: string
    WorkflowOutputUpdate:
      allOf:
      - $ref: '#/components/schemas/WorkflowOutputWriteBase'
    WorkflowOutputUpdatedFieldsEvent:
      allOf:
      - $ref: '#/components/schemas/EventBase'
      - $ref: '#/components/schemas/WorkflowOutputUpdatedFieldsEvent_allOf'
    WorkflowOutputWriteBase:
      properties:
        fields:
          additionalProperties:
            $ref: '#/components/schemas/Field'
          type: object
    WorkflowOutputsArchivalChange:
      description: |
        IDs of all items that were archived or unarchived, grouped by resource type
      example:
        workflowOutputIds:
        - wfout_5cJLQKVF
        - wfout_5cJLQKVF
      properties:
        workflowOutputIds:
          items:
            example: wfout_5cJLQKVF
            type: string
          type: array
      type: object
    WorkflowOutputsArchive:
      example:
        reason: null
        workflowOutputIds:
        - wfout_5cJLQKVF
        - wfout_5cJLQKVF
      properties:
        reason:
          $ref: '#/components/schemas/WorkflowOutputArchiveReason'
        workflowOutputIds:
          items:
            example: wfout_5cJLQKVF
            type: string
          type: array
      required:
      - reason
      - workflowOutputIds
      type: object
    WorkflowOutputsBulkCreateRequest:
      example:
        workflowOutputs:
        - null
        - null
      properties:
        workflowOutputs:
          items:
            $ref: '#/components/schemas/WorkflowOutputBulkCreate'
          type: array
      type: object
    WorkflowOutputsBulkUpdateRequest:
      example:
        workflowOutputs:
        - null
        - null
      properties:
        workflowOutputs:
          items:
            $ref: '#/components/schemas/WorkflowOutputBulkUpdate'
          type: array
      type: object
    WorkflowOutputsPaginatedList:
      example:
        nextToken: Im5ldyB0ZXN0Ig==
        workflowOutputs:
        - null
        - null
      properties:
        nextToken:
          example: Im5ldyB0ZXN0Ig==
          type: string
        workflowOutputs:
          items:
            $ref: '#/components/schemas/WorkflowOutput'
          type: array
      type: object
    WorkflowOutputsUnarchive:
      example:
        workflowOutputIds:
        - workflowOutputIds
        - workflowOutputIds
      properties:
        workflowOutputIds:
          items:
            type: string
          type: array
      required:
      - workflowOutputIds
      type: object
    WorkflowPatch:
      additionalProperties: false
      example:
        name: name
        description: description
        projectId: projectId
      properties:
        description:
          description: Description of the workflow
          type: string
        name:
          description: Name of the workflow
          type: string
        projectId:
          description: ID of the project that contains the workflow
          type: string
      type: object
    WorkflowSample:
      example:
        containerIds:
        - containerIds
        - containerIds
        createdAt: 2000-01-23T04:56:07.000+00:00
        name: name
        id: id
        batchId: batchId
      properties:
        batchId:
          description: ID of the batch
          type: string
        containerIds:
          description: Array of IDs of containers
          items:
            type: string
          type: array
        createdAt:
          description: DateTime at which the the sample was created
          format: date-time
          readOnly: true
          type: string
        id:
          description: ID of the sample
          readOnly: true
          type: string
        name:
          description: Name of the sample
          type: string
      type: object
    WorkflowSampleList:
      example:
        samples:
        - containerIds:
          - containerIds
          - containerIds
          createdAt: 2000-01-23T04:56:07.000+00:00
          name: name
          id: id
          batchId: batchId
        - containerIds:
          - containerIds
          - containerIds
          createdAt: 2000-01-23T04:56:07.000+00:00
          name: name
          id: id
          batchId: batchId
      properties:
        samples:
          items:
            $ref: '#/components/schemas/WorkflowSample'
          type: array
      type: object
    WorkflowStage:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        name: name
        id: id
      properties:
        createdAt:
          description: DateTime at which the the workflow stage was created
          format: date-time
          readOnly: true
          type: string
        id:
          description: ID of the workflow stage
          readOnly: true
          type: string
        name:
          description: Name of the workflow stage
          type: string
      type: object
    WorkflowStageList:
      example:
        workflowStages:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          name: name
          id: id
        - createdAt: 2000-01-23T04:56:07.000+00:00
          name: name
          id: id
      properties:
        workflowStages:
          items:
            $ref: '#/components/schemas/WorkflowStage'
          type: array
      type: object
    WorkflowStageRun:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        name: name
        id: id
        status: COMPLETED
      properties:
        createdAt:
          description: DateTime at which the the stage run was created
          format: date-time
          readOnly: true
          type: string
        id:
          description: ID of the stage run
          readOnly: true
          type: string
        name:
          description: Name of the stage run
          type: string
        status:
          description: Status of the stage run
          enum:
          - COMPLETED
          - DISCARDED
          - INITIALIZED
          type: string
      type: object
    WorkflowStageRunList:
      example:
        workflowStageRuns:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          name: name
          id: id
          status: COMPLETED
        - createdAt: 2000-01-23T04:56:07.000+00:00
          name: name
          id: id
          status: COMPLETED
      properties:
        workflowStageRuns:
          items:
            $ref: '#/components/schemas/WorkflowStageRun'
          type: array
      type: object
    WorkflowTask:
      allOf:
      - $ref: '#/components/schemas/WorkflowTaskBase'
      - $ref: '#/components/schemas/WorkflowTask_allOf'
    WorkflowTaskArchiveReason:
      description: |
        The reason for archiving the provided workflow tasks. Accepted reasons may differ based on tenant configuration.
      enum:
      - Made in error
      - Retired
      - Other
      type: string
    WorkflowTaskBase:
      allOf:
      - $ref: '#/components/schemas/WorkflowTaskSummary'
      - $ref: '#/components/schemas/WorkflowTaskBase_allOf'
    WorkflowTaskBulkCreate:
      allOf:
      - $ref: '#/components/schemas/WorkflowTaskCreate'
    WorkflowTaskBulkUpdate:
      allOf:
      - $ref: '#/components/schemas/WorkflowTaskUpdate'
      - $ref: '#/components/schemas/WorkflowTaskBulkUpdate_allOf'
      type: object
    WorkflowTaskCreate:
      allOf:
      - $ref: '#/components/schemas/WorkflowTaskWriteBase'
      - $ref: '#/components/schemas/WorkflowTaskCreate_allOf'
    WorkflowTaskCreatedEvent:
      allOf:
      - $ref: '#/components/schemas/EventBase'
      - $ref: '#/components/schemas/WorkflowTaskCreatedEvent_allOf'
    WorkflowTaskExecutionOrigin:
      description: The context into which a task was executed
      properties:
        entryId:
          example: etr_30ad79
          nullable: true
          type: string
        originModalUuid:
          example: e8805895-0654-4613-ac04-39ee7462202e
          format: uuid
          nullable: true
          type: string
        type:
          enum:
          - API
          - ENTRY
          - MODAL
          type: string
      type: object
    WorkflowTaskGroup:
      allOf:
      - $ref: '#/components/schemas/WorkflowTaskGroupBase'
      - $ref: '#/components/schemas/WorkflowTaskGroup_allOf'
    WorkflowTaskGroupArchiveReason:
      description: |
        The reason for archiving the provided workflow task groups. Accepted reasons may differ based on tenant configuration.
      enum:
      - Made in error
      - Retired
      - Other
      type: string
    WorkflowTaskGroupBase:
      allOf:
      - $ref: '#/components/schemas/WorkflowTaskGroupSummary'
      - $ref: '#/components/schemas/WorkflowTaskGroupBase_allOf'
    WorkflowTaskGroupCreate:
      allOf:
      - $ref: '#/components/schemas/WorkflowTaskGroupWriteBase'
      - $ref: '#/components/schemas/WorkflowTaskGroupCreate_allOf'
    WorkflowTaskGroupCreatedEvent:
      allOf:
      - $ref: '#/components/schemas/EventBase'
      - $ref: '#/components/schemas/WorkflowTaskGroupCreatedEvent_allOf'
    WorkflowTaskGroupSummary:
      properties:
        displayId:
          description: User-friendly ID of the workflow task group
          type: string
        id:
          description: The ID of the workflow task group
          example: prs_giVNQcTL
          readOnly: true
          type: string
        name:
          description: The name of the workflow task group
          type: string
    WorkflowTaskGroupUpdate:
      allOf:
      - $ref: '#/components/schemas/WorkflowTaskGroupWriteBase'
    WorkflowTaskGroupUpdatedWatchersEvent:
      allOf:
      - $ref: '#/components/schemas/EventBase'
      - $ref: '#/components/schemas/WorkflowTaskGroupUpdatedWatchersEvent_allOf'
    WorkflowTaskGroupWriteBase:
      properties:
        folderId:
          description: ID of the folder that contains the workflow task group
          type: string
        name:
          description: The name of the workflow task group
          type: string
        watcherIds:
          description: IDs of the users watching the workflow task group
          items:
            example: ent_a0SApq3z
            type: string
          type: array
    WorkflowTaskGroupsArchivalChange:
      description: |
        IDs of all items that were archived or unarchived, grouped by resource type
      example:
        workflowTaskGroupIds:
        - prs_giVNQcTL
        - prs_giVNQcTL
      properties:
        workflowTaskGroupIds:
          items:
            example: prs_giVNQcTL
            type: string
          type: array
      type: object
    WorkflowTaskGroupsArchive:
      example:
        reason: null
        workflowTaskGroupIds:
        - prs_giVNQcTL
        - prs_giVNQcTL
      properties:
        reason:
          $ref: '#/components/schemas/WorkflowTaskGroupArchiveReason'
        workflowTaskGroupIds:
          items:
            example: prs_giVNQcTL
            type: string
          type: array
      required:
      - reason
      - workflowTaskGroupIds
      type: object
    WorkflowTaskGroupsPaginatedList:
      example:
        workflowTaskGroups:
        - null
        - null
        nextToken: Im5ldyB0ZXN0Ig==
      properties:
        nextToken:
          example: Im5ldyB0ZXN0Ig==
          type: string
        workflowTaskGroups:
          items:
            $ref: '#/components/schemas/WorkflowTaskGroup'
          type: array
      type: object
    WorkflowTaskGroupsUnarchive:
      example:
        workflowTaskGroupIds:
        - prs_giVNQcTL
        - prs_giVNQcTL
      properties:
        workflowTaskGroupIds:
          items:
            example: prs_giVNQcTL
            type: string
          type: array
      required:
      - workflowTaskGroupIds
      type: object
    WorkflowTaskSchema:
      allOf:
      - $ref: '#/components/schemas/WorkflowTaskSchemaBase'
      - $ref: '#/components/schemas/WorkflowTaskSchema_allOf'
    WorkflowTaskSchemaBase:
      allOf:
      - $ref: '#/components/schemas/Schema'
      - $ref: '#/components/schemas/WorkflowTaskSchemaBase_allOf'
    WorkflowTaskSchemaSummary:
      properties:
        id:
          description: The ID of the workflow task schema
          type: string
        name:
          description: The name of the workflow task schema
          type: string
    WorkflowTaskSchemasPaginatedList:
      additionalProperties: false
      example:
        workflowTaskSchemas:
        - null
        - null
        nextToken: Im5ldyB0ZXN0Ig==
      properties:
        nextToken:
          example: Im5ldyB0ZXN0Ig==
          type: string
        workflowTaskSchemas:
          items:
            $ref: '#/components/schemas/WorkflowTaskSchema'
          type: array
      type: object
    WorkflowTaskStatus:
      properties:
        displayName:
          description: The status label
          example: Pending
          readOnly: true
          type: string
        id:
          description: The ID of the workflow task status
          example: wfts_wQzUCsW0
          readOnly: true
          type: string
        statusType:
          description: The status type
          enum:
          - PENDING
          - IN_PROGRESS
          - FAILED
          - CANCELLED
          - INVALID
          - COMPLETED
          example: PENDING
          readOnly: true
          type: string
      type: object
    WorkflowTaskStatusLifecycle:
      properties:
        id:
          example: prstswf_123kjlkj
          type: string
        initialStatus:
          $ref: '#/components/schemas/WorkflowTaskStatus'
        name:
          example: Direct Completion
          type: string
        statuses:
          example:
          - displayName: Pending
            id: prsts_wQzUCsW0
            statusType: PENDING
          - displayName: In Progress
            id: prsts_fc0781
            statusType: IN_PROGRESS
          items:
            $ref: '#/components/schemas/WorkflowTaskStatus'
          type: array
        transitions:
          items:
            $ref: '#/components/schemas/WorkflowTaskStatusLifecycleTransition'
          type: array
      type: object
    WorkflowTaskStatusLifecycleTransition:
      example:
        from:
          displayName: Pending
          id: prsts_wQzUCsW0
          statusType: PENDING
        to:
          displayName: In Progress
          id: prsts_fc0781
          statusType: IN_PROGRESS
      properties:
        from:
          $ref: '#/components/schemas/WorkflowTaskStatus'
        to:
          $ref: '#/components/schemas/WorkflowTaskStatus'
      type: object
    WorkflowTaskSummary:
      properties:
        displayId:
          description: User-friendly ID of the workflow task
          type: string
        id:
          description: The ID of the workflow task
          example: wftask_OnnsW08k
          readOnly: true
          type: string
    WorkflowTaskUpdate:
      allOf:
      - $ref: '#/components/schemas/WorkflowTaskUpdate_allOf'
      - $ref: '#/components/schemas/WorkflowTaskWriteBase'
      type: object
    WorkflowTaskUpdatedAssigneeEvent:
      allOf:
      - $ref: '#/components/schemas/EventBase'
      - $ref: '#/components/schemas/WorkflowTaskUpdatedAssigneeEvent_allOf'
    WorkflowTaskUpdatedFieldsEvent:
      allOf:
      - $ref: '#/components/schemas/EventBase'
      - $ref: '#/components/schemas/WorkflowTaskUpdatedFieldsEvent_allOf'
    WorkflowTaskUpdatedScheduledOnEvent:
      allOf:
      - $ref: '#/components/schemas/EventBase'
      - $ref: '#/components/schemas/WorkflowTaskUpdatedScheduledOnEvent_allOf'
    WorkflowTaskUpdatedStatusEvent:
      allOf:
      - $ref: '#/components/schemas/EventBase'
      - $ref: '#/components/schemas/WorkflowTaskUpdatedStatusEvent_allOf'
    WorkflowTaskWriteBase:
      properties:
        assigneeId:
          description: The id of the user assigned to the task
          example: ent_0YuSQS51
          type: string
        fields:
          additionalProperties:
            $ref: '#/components/schemas/Field'
          type: object
        scheduledOn:
          description: The date on which the task is scheduled to be executed
          example: 2020-08-01
          format: date
          type: string
    WorkflowTasksArchivalChange:
      description: |
        IDs of all items that were archived or unarchived, grouped by resource type
      example:
        workflowTaskIds:
        - wftask_OnnsW08k
        - wftask_OnnsW08k
      properties:
        workflowTaskIds:
          items:
            example: wftask_OnnsW08k
            type: string
          type: array
      type: object
    WorkflowTasksArchive:
      example:
        reason: null
        workflowTaskIds:
        - wftask_OnnsW08k
        - wftask_OnnsW08k
      properties:
        reason:
          $ref: '#/components/schemas/WorkflowTaskArchiveReason'
        workflowTaskIds:
          items:
            example: wftask_OnnsW08k
            type: string
          type: array
      required:
      - reason
      - workflowTaskIds
      type: object
    WorkflowTasksBulkCopyRequest:
      example:
        workflowTaskIds:
        - wftask_OnnsW08k
        - wftask_OnnsW08k
      properties:
        workflowTaskIds:
          items:
            example: wftask_OnnsW08k
            maxItems: 100
            type: string
          type: array
      type: object
    WorkflowTasksBulkCreateRequest:
      example:
        workflowTasks:
        - null
        - null
      properties:
        workflowTasks:
          items:
            $ref: '#/components/schemas/WorkflowTaskBulkCreate'
          type: array
      type: object
    WorkflowTasksBulkUpdateRequest:
      example:
        workflowTasks:
        - null
        - null
      properties:
        workflowTasks:
          items:
            $ref: '#/components/schemas/WorkflowTaskBulkUpdate'
          type: array
      type: object
    WorkflowTasksPaginatedList:
      example:
        workflowTasks:
        - null
        - null
        nextToken: Im5ldyB0ZXN0Ig==
      properties:
        nextToken:
          example: Im5ldyB0ZXN0Ig==
          type: string
        workflowTasks:
          items:
            $ref: '#/components/schemas/WorkflowTask'
          type: array
      type: object
    WorkflowTasksUnarchive:
      example:
        workflowTaskIds:
        - wftask_OnnsW08k
        - wftask_OnnsW08k
      properties:
        workflowTaskIds:
          items:
            example: wftask_OnnsW08k
            type: string
          type: array
      required:
      - workflowTaskIds
      type: object
    getTask_200_response:
      oneOf:
      - $ref: '#/components/schemas/AsyncTask'
      - $ref: '#/components/schemas/CreateTemplateAlignmentAsyncTask'
      - $ref: '#/components/schemas/CreateConsensusAlignmentAsyncTask'
      - $ref: '#/components/schemas/CreateNucleotideTemplateAlignmentAsyncTask'
      - $ref: '#/components/schemas/CreateNucleotideConsensusAlignmentAsyncTask'
      - $ref: '#/components/schemas/BulkCreateDnaSequencesAsyncTask'
      - $ref: '#/components/schemas/BulkUpdateDnaSequencesAsyncTask'
      - $ref: '#/components/schemas/BulkCreateRnaSequencesAsyncTask'
      - $ref: '#/components/schemas/BulkUpdateRnaSequencesAsyncTask'
      - $ref: '#/components/schemas/AutofillPartsAsyncTask'
      - $ref: '#/components/schemas/AutofillTranslationsAsyncTask'
      - $ref: '#/components/schemas/BulkRegisterEntitiesAsyncTask'
      - $ref: '#/components/schemas/BulkCreateDnaOligosAsyncTask'
      - $ref: '#/components/schemas/BulkUpdateDnaOligosAsyncTask'
      - $ref: '#/components/schemas/BulkCreateRnaOligosAsyncTask'
      - $ref: '#/components/schemas/BulkCreateAaSequencesAsyncTask'
      - $ref: '#/components/schemas/BulkCreateCustomEntitiesAsyncTask'
      - $ref: '#/components/schemas/BulkUpdateCustomEntitiesAsyncTask'
      - $ref: '#/components/schemas/BulkCreateContainersAsyncTask'
      - $ref: '#/components/schemas/BulkUpdateContainersAsyncTask'
      - $ref: '#/components/schemas/BulkUpdateAaSequencesAsyncTask'
      - $ref: '#/components/schemas/BulkUpdateRnaOligosAsyncTask'
      - $ref: '#/components/schemas/TransfersAsyncTask'
      - $ref: '#/components/schemas/AOPProcessOutputAsyncTask'
      - $ref: '#/components/schemas/AIGGenerateInputAsyncTask'
      - $ref: '#/components/schemas/ExportsAsyncTask'
      - $ref: '#/components/schemas/BulkCreateFeaturesAsyncTask'
      - $ref: '#/components/schemas/FindMatchingRegionsAsyncTask'
    listWorkflowTasks_scheduledOn_parameter:
      anyOf:
      - $ref: '#/components/schemas/listWorkflowTasks_scheduledOn_parameter_anyOf'
      - example: 2020-01-01
        format: date
        type: string
    AIGGenerateInputAsyncTask_allOf:
      properties:
        response:
          $ref: '#/components/schemas/AutomationInputGenerator'
      type: object
      example: null
    AOPProcessOutputAsyncTask_allOf:
      properties:
        response:
          $ref: '#/components/schemas/AutomationOutputProcessor'
      type: object
      example: null
    AaSequence_archiveRecord:
      allOf:
      - $ref: '#/components/schemas/ArchiveRecord'
      nullable: true
    AaSequence_registrationOrigin:
      allOf:
      - $ref: '#/components/schemas/RegistrationOrigin'
      nullable: true
      readOnly: true
    AaSequence_schema:
      allOf:
      - $ref: '#/components/schemas/SchemaSummary'
      nullable: true
    AaSequenceBulkUpdate_allOf:
      properties:
        id:
          type: string
      type: object
      example: null
    AaSequenceWithEntityType_allOf:
      properties:
        entityType:
          enum:
          - aa_sequence
          type: string
      type: object
      example: null
    AppConfigItemApiMixin_app:
      properties:
        id:
          description: The id of the Benchling app to which this configuration item
            belongs
          nullable: false
          type: string
      type: object
    AppConfigItemBooleanCreate_allOf:
      properties:
        type:
          enum:
          - boolean
          example: boolean
          type: string
        value:
          type: boolean
      example: null
    AppConfigItemDateCreate_allOf:
      properties:
        type:
          format: date
          type: string
        value:
          format: date
          type: string
      example: null
    AppConfigItemDatetimeCreate_allOf:
      properties:
        type:
          example: datetime
          format: datetime
          type: string
        value:
          format: datetime
          type: string
      example: null
    AppConfigItemFloatCreate_allOf:
      properties:
        type:
          enum:
          - float
          example: float
          type: string
        value:
          format: float
          type: number
      example: null
    AppConfigItemGenericCreate_allOf:
      properties:
        type:
          enum:
          - container_schema
          - entity_schema
          - plate_schema
          - location_schema
          - box_schema
          - run_schema
          - result_schema
          - request_schema
          - entry_schema
          - workflow_task_schema
          - dropdown
          - dropdown_option
          - field
          - text
          - date
          - datetime
          - secure_text
          - json
          - registry
          - folder
          - entry
          - worklist
          - project
          - workflow_task_status
          - dna_sequence
          - dna_oligo
          - aa_sequence
          - custom_entity
          - mixture
          - molecule
          - rna_oligo
          - rna_sequence
          - box
          - container
          - location
          - plate
          type: string
        value:
          type: string
      example: null
    AppConfigItemIntegerCreate_allOf:
      properties:
        type:
          enum:
          - integer
          example: integer
          type: string
        value:
          type: integer
      example: null
    AppConfigItemJsonCreate_allOf:
      properties:
        type:
          enum:
          - json
          example: json
          type: string
        value:
          description: The value of a json create object should be json parseable.
          type: string
      example: null
    AppConfigurationPaginatedList_allOf:
      properties:
        appConfigurationItems:
          items:
            $ref: '#/components/schemas/AppConfigItem'
          type: array
      example: null
    AssayResult_archiveRecord:
      allOf:
      - $ref: '#/components/schemas/ArchiveRecord'
      description: |
        ArchiveRecord Resource if the result is archived. This is null if the result is not archived.
      nullable: true
    AssayResult_creator:
      allOf:
      - $ref: '#/components/schemas/UserSummary'
      description: UserSummary Resource of who created the request
      readOnly: true
    SchemaProperty:
      allOf:
      - $ref: '#/components/schemas/SchemaSummary'
      description: Schema that the result belongs to
      title: SchemaProperty
    AssayResultCreate_fields:
      anyOf:
      - $ref: '#/components/schemas/Fields'
      - $ref: '#/components/schemas/AssayFieldsCreate'
      description: Dictionary of result fields
    AssayResultSchema_allOf:
      properties:
        modifiedAt:
          description: DateTime the Assay Result Schema was last modified
          example: 2017-04-18T05:55:48.685345Z
          format: date-time
          type: string
        type:
          enum:
          - assay_result
          readOnly: true
          type: string
      type: object
      example: null
    AssayResultsArchive_allOf:
      properties:
        reason:
          description: The reason for archiving the provided results. Accepted reasons
            may differ based on tenant configuration
          enum:
          - Made in error
          - Archived
          - Other
          type: string
      type: object
      example: null
    SchemaProperty_1:
      allOf:
      - $ref: '#/components/schemas/SchemaSummary'
      example:
        id: assaysch_fFLKmdmG
        name: Assay Run
      nullable: true
      title: SchemaProperty
    AssayRunCreate_fields:
      anyOf:
      - $ref: '#/components/schemas/Fields'
      - $ref: '#/components/schemas/AssayFieldsCreate'
      description: Object of assay run fields
    AssayRunCreatedEvent_allOf:
      properties:
        assayRun:
          $ref: '#/components/schemas/AssayRun'
        eventType:
          enum:
          - v2.assayRun.created
          type: string
      type: object
      example: null
    AssayRunNotePart_allOf:
      properties:
        assayRunId:
          example: 588aca02-1a20-4b94-a40f-b3f3a0081749
          nullable: true
          type: string
        assayRunSchemaId:
          example: assaysch_msh1Ly6g
          type: string
        type:
          enum:
          - assay_run
          type: string
      type: object
      example: null
    AssayRunSchema_allOf_automationInputFileConfigs:
      properties:
        name:
          type: string
      type: object
      example: null
    AssayRunSchema_allOf:
      properties:
        automationInputFileConfigs:
          items:
            $ref: '#/components/schemas/AssayRunSchema_allOf_automationInputFileConfigs'
          type: array
        automationOutputFileConfigs:
          items:
            $ref: '#/components/schemas/AssayRunSchema_allOf_automationInputFileConfigs'
          type: array
        modifiedAt:
          description: DateTime the Assay Run Schema was last modified
          example: 2017-04-18T05:55:48.685345Z
          format: date-time
          type: string
        type:
          enum:
          - assay_run
          readOnly: true
          type: string
      type: object
      example: null
    AssayRunUpdatedFieldsEvent_allOf:
      properties:
        assayRun:
          $ref: '#/components/schemas/AssayRun'
        eventType:
          enum:
          - v2.assayRun.updated.fields
          type: string
      type: object
      example: null
    AutofillPartsAsyncTask_allOf:
      properties:
        response: {}
      type: object
      example: null
    AutomationFile_automationFileConfig:
      properties:
        name:
          example: MyInstrumentName
          type: string
      type: object
    AutomationFile_file:
      allOf:
      - $ref: '#/components/schemas/Blob'
      nullable: true
    AutomationInputGenerator_allOf:
      properties:
        apiURL:
          description: The canonical url of the Automation Input Generator in the
            API.
          example: https://benchling.com/api/v2/automation-input-generators/aif_C3wGA9HF
          format: uri
          readOnly: true
          type: string
        createdAt:
          description: DateTime the Automation Input Generator was last modified
          format: date-time
          readOnly: true
          type: string
        id:
          example: aif_C3wGA9HF
          type: string
        modifiedAt:
          description: DateTime the Automation Input Generator was last modified
          format: date-time
          readOnly: true
          type: string
      type: object
      example: null
    AutomationInputGeneratorCompletedV2BetaEvent_allOf:
      properties:
        automationInputGenerator:
          $ref: '#/components/schemas/AutomationFile'
        eventType:
          enum:
          - v2-beta.automationInputGenerator.completed
          type: string
      type: object
      example: null
    AutomationOutputProcessor_allOf:
      properties:
        apiURL:
          description: The canonical url of the Automation Output Processor in the
            API.
          example: https://benchling.com/api/v2/automation-output-processors/aop_C3wGA9HF
          format: uri
          readOnly: true
          type: string
        archiveRecord:
          $ref: '#/components/schemas/ArchiveRecord'
        completeWithErrors:
          description: "Specifies whether file processing should complete with errors.\
            \ False means any error in output file processing will result in no actions\
            \ being committed. True means that if row-level errors occur, then failing\
            \ rows and their errors will be saved to errorFile, and actions from successful\
            \ rows will be committed."
          type: boolean
        createdAt:
          description: DateTime the Automation Output Processor was created
          format: date-time
          type: string
        errorFile:
          allOf:
          - $ref: '#/components/schemas/Blob'
          nullable: true
        id:
          example: aop_C3wGA9HF
          type: string
        modifiedAt:
          description: DateTime the Automation Output Processor was last modified
          format: date-time
          type: string
        progressStats:
          $ref: '#/components/schemas/AutomationProgressStats'
        transforms:
          items:
            allOf:
            - $ref: '#/components/schemas/LabAutomationTransform'
            nullable: true
          type: array
      type: object
      example: null
    AutomationOutputProcessorCompletedV2BetaEvent_allOf:
      properties:
        automationOutputProcessor:
          $ref: '#/components/schemas/AutomationFile'
        eventType:
          enum:
          - v2-beta.automationOutputProcessor.completed
          type: string
      type: object
      example: null
    AutomationOutputProcessorUploadedV2BetaEvent_allOf:
      properties:
        automationOutputProcessor:
          $ref: '#/components/schemas/AutomationFile'
        eventType:
          enum:
          - v2-beta.automationOutputProcessor.uploaded
          type: string
      type: object
      example: null
    BadRequestError_error_allOf:
      properties:
        type:
          enum:
          - invalid_request_error
          type: string
    BadRequestError_error:
      allOf:
      - $ref: '#/components/schemas/BaseError'
      - $ref: '#/components/schemas/BadRequestError_error_allOf'
    BadRequestErrorBulk_allOf_error_errors:
      properties:
        index:
          type: number
        message:
          type: string
      type: object
      example: null
    BadRequestErrorBulk_allOf_error:
      properties:
        errors:
          items:
            $ref: '#/components/schemas/BadRequestErrorBulk_allOf_error_errors'
          type: array
      type: object
      example: null
    BadRequestErrorBulk_allOf:
      properties:
        error:
          $ref: '#/components/schemas/BadRequestErrorBulk_allOf_error'
      type: object
      example: null
    BaseAppConfigItem_allOf:
      properties:
        description:
          type: string
        requiredConfig:
          type: boolean
      example: null
    BaseAssaySchema_allOf_organization:
      properties:
        handle:
          type: string
        id:
          type: string
        name:
          type: string
      type: object
      example: null
    BaseAssaySchema_allOf:
      properties:
        derivedFrom:
          nullable: true
          type: string
        organization:
          $ref: '#/components/schemas/BaseAssaySchema_allOf_organization'
        systemName:
          type: string
      type: object
      example: null
    Batch_entity:
      discriminator:
        mapping:
          aa_sequence: '#/components/schemas/AaSequenceSummary'
          custom_entity: '#/components/schemas/CustomEntitySummary'
          dna_sequence: '#/components/schemas/DnaSequenceSummary'
        propertyName: entityType
      oneOf:
      - $ref: '#/components/schemas/DnaSequenceSummary'
      - $ref: '#/components/schemas/AaSequenceSummary'
      - $ref: '#/components/schemas/CustomEntitySummary'
    SchemaProperty_2:
      allOf:
      - $ref: '#/components/schemas/SchemaSummary'
      nullable: true
      readOnly: true
      title: SchemaProperty
    BatchSchema_allOf:
      properties:
        entitySchemaId:
          type: string
        modifiedAt:
          description: DateTime the Batch Schema was last modified
          example: 2017-04-18T05:55:48.685345Z
          format: date-time
          type: string
      type: object
      example: null
    BatchSchemasPaginatedList_allOf:
      properties:
        nextToken:
          type: string
      type: object
      example: null
    BenchlingApp_allOf:
      properties:
        apiUrl:
          example: https://benchling.com/api/v2/apps/app_e59sjL23Pqn30xHg
          format: uri
          readOnly: true
          type: string
        archiveRecord:
          allOf:
          - $ref: '#/components/schemas/ArchiveRecord'
          nullable: true
          readOnly: true
        createdAt:
          description: DateTime at which the the app was created
          format: date-time
          readOnly: true
          type: string
        creator:
          allOf:
          - $ref: '#/components/schemas/UserSummary'
          readOnly: true
        id:
          example: app_e59sjL23Pqn30xHg
          readOnly: true
          type: string
        modifiedAt:
          description: DateTime at which the the app was last modified
          format: date-time
          readOnly: true
          type: string
        webUrl:
          example: https://benchling.com/developer/apps/app_e59sjL23Pqn30xHg
          format: uri
          readOnly: true
          type: string
      type: object
      example: null
    BenchlingAppsPaginatedList_allOf:
      properties:
        apps:
          items:
            $ref: '#/components/schemas/BenchlingApp'
          type: array
      example: null
    BooleanAppConfigItem_allOf:
      properties:
        type:
          enum:
          - boolean
          example: boolean
          type: string
        value:
          nullable: true
          type: boolean
      example: null
    SchemaProperty_3:
      allOf:
      - $ref: '#/components/schemas/SchemaSummary'
      nullable: true
      title: SchemaProperty
    BoxCreationTableNotePart_allOf:
      properties:
        boxSchemaId:
          example: boxsch_MAbGlEtf
          type: string
        type:
          enum:
          - box_creation_table
          type: string
      type: object
      example: null
    BoxSchema_allOf_containerSchema:
      nullable: true
      properties:
        id:
          type: string
        name:
          type: string
      type: object
      example: null
    BoxSchema_allOf:
      properties:
        containerSchema:
          $ref: '#/components/schemas/BoxSchema_allOf_containerSchema'
        height:
          type: number
        type:
          enum:
          - box
          readOnly: true
          type: string
        width:
          type: number
      type: object
      example: null
    BulkCreateAaSequencesAsyncTask_allOf_response:
      properties:
        aaSequences:
          items:
            $ref: '#/components/schemas/AaSequence'
          type: array
      type: object
      example: null
    BulkCreateAaSequencesAsyncTask_allOf:
      properties:
        response:
          $ref: '#/components/schemas/BulkCreateAaSequencesAsyncTask_allOf_response'
      type: object
      example: null
    BulkCreateContainersAsyncTask_allOf_response:
      properties:
        containers:
          items:
            $ref: '#/components/schemas/Container'
          type: array
      type: object
      example: null
    BulkCreateContainersAsyncTask_allOf:
      properties:
        response:
          $ref: '#/components/schemas/BulkCreateContainersAsyncTask_allOf_response'
      type: object
      example: null
    BulkCreateCustomEntitiesAsyncTask_allOf_response:
      properties:
        customEntities:
          items:
            $ref: '#/components/schemas/CustomEntity'
          type: array
      type: object
      example: null
    BulkCreateCustomEntitiesAsyncTask_allOf:
      properties:
        response:
          $ref: '#/components/schemas/BulkCreateCustomEntitiesAsyncTask_allOf_response'
      type: object
      example: null
    BulkCreateDnaOligosAsyncTask_allOf_response:
      properties:
        dnaOligos:
          items:
            $ref: '#/components/schemas/DnaOligo'
          type: array
      type: object
      example: null
    BulkCreateDnaOligosAsyncTask_allOf:
      properties:
        response:
          $ref: '#/components/schemas/BulkCreateDnaOligosAsyncTask_allOf_response'
      type: object
      example: null
    BulkCreateDnaSequencesAsyncTask_allOf_response:
      properties:
        dnaSequences:
          items:
            $ref: '#/components/schemas/DnaSequence'
          type: array
      type: object
      example: null
    BulkCreateDnaSequencesAsyncTask_allOf:
      properties:
        response:
          $ref: '#/components/schemas/BulkCreateDnaSequencesAsyncTask_allOf_response'
      type: object
      example: null
    BulkCreateFeaturesAsyncTask_allOf_response:
      properties:
        features:
          items:
            $ref: '#/components/schemas/Feature'
          type: array
      type: object
      example: null
    BulkCreateFeaturesAsyncTask_allOf:
      properties:
        response:
          $ref: '#/components/schemas/BulkCreateFeaturesAsyncTask_allOf_response'
      type: object
      example: null
    BulkCreateRnaOligosAsyncTask_allOf_response:
      properties:
        rnaOligos:
          items:
            $ref: '#/components/schemas/RnaOligo'
          type: array
      type: object
      example: null
    BulkCreateRnaOligosAsyncTask_allOf:
      properties:
        response:
          $ref: '#/components/schemas/BulkCreateRnaOligosAsyncTask_allOf_response'
      type: object
      example: null
    BulkCreateRnaSequencesAsyncTask_allOf_response:
      properties:
        rnaSequences:
          items:
            $ref: '#/components/schemas/RnaSequence'
          type: array
      type: object
      example: null
    BulkCreateRnaSequencesAsyncTask_allOf:
      properties:
        response:
          $ref: '#/components/schemas/BulkCreateRnaSequencesAsyncTask_allOf_response'
      type: object
      example: null
    BulkUpdateAaSequencesAsyncTask_allOf_response:
      properties:
        AsSequences:
          items:
            $ref: '#/components/schemas/AaSequence'
          type: array
      type: object
      example: null
    BulkUpdateAaSequencesAsyncTask_allOf:
      properties:
        response:
          $ref: '#/components/schemas/BulkUpdateAaSequencesAsyncTask_allOf_response'
      type: object
      example: null
    CheckboxNotePart_allOf:
      properties:
        checked:
          description: |
            Indicates whether the checkbox is checked or not.
          type: boolean
        links:
          description: |
            Array of links referenced in text via an @-mention, hyperlink, or the drag-n-dropped preview attached to the note.
          items:
            $ref: '#/components/schemas/EntryLink'
          type: array
        text:
          description: The textual contents of the note.
          type: string
        type:
          enum:
          - list_checkbox
          type: string
      type: object
      example: null
    CheckoutRecord_assignee:
      nullable: true
      oneOf:
      - $ref: '#/components/schemas/UserSummary'
      - $ref: '#/components/schemas/TeamSummary'
    ConflictError_error_allOf:
      properties:
        conflicts:
          items:
            type: object
          type: array
    ConflictError_error:
      allOf:
      - $ref: '#/components/schemas/BaseError'
      - $ref: '#/components/schemas/ConflictError_error_allOf'
    Container_archiveRecord:
      allOf:
      - $ref: '#/components/schemas/ArchiveRecord'
      nullable: true
      readOnly: true
    Container_parentStorageSchema:
      allOf:
      - $ref: '#/components/schemas/SchemaSummary'
      nullable: true
      readOnly: true
    ContainerBulkUpdateItem_allOf:
      properties:
        containerId:
          type: string
        quantity:
          $ref: '#/components/schemas/ContainerQuantity'
        volume:
          $ref: '#/components/schemas/DeprecatedContainerVolumeForInput'
      required:
      - containerId
      example: null
    ContainerContent_batch:
      allOf:
      - $ref: '#/components/schemas/BatchOrInaccessibleResource'
      nullable: true
    ContainerContent_entity:
      allOf:
      - $ref: '#/components/schemas/EntityOrInaccessibleResource'
      nullable: true
    ContainerCreate_allOf:
      properties:
        barcode:
          type: string
        projectId:
          nullable: true
          type: string
        schemaId:
          type: string
          writeOnly: true
      required:
      - schemaId
      type: object
      example: null
    ContainerSchema_allOf:
      properties:
        modifiedAt:
          description: DateTime the Container Schema was last modified
          example: 2017-04-18T05:55:48.685345Z
          format: date-time
          type: string
        type:
          enum:
          - container
          readOnly: true
          type: string
      type: object
      example: null
    ContainerTransfer_allOf:
      properties:
        destinationContents:
          description: |
            This represents what the contents of the destination container should look like post-transfer.
          items:
            $ref: '#/components/schemas/ContainerTransferDestinationContentsItem'
          type: array
        destinationQuantity:
          allOf:
          - $ref: '#/components/schemas/ContainerQuantity'
          description: |
            This represents the desired final quantity of the destination container, post-dilution. If you don't want to dilute the destination container, you can omit this parameter. Supports mass, volume, and other quantities.
        destinationVolume:
          allOf:
          - $ref: '#/components/schemas/DeprecatedContainerVolumeForInput'
          description: |
            Deprecated - use destinationQuantity instead.
      required:
      - destinationContents
      type: object
      example: null
    ContainerTransferBase_transferQuantity:
      allOf:
      - $ref: '#/components/schemas/ContainerQuantity'
      description: |
        This represents the quantity of the source to be transferred into the destination container. Supports mass, volume, and other quantities. Required in place of transferVolume.
    ContainerTransferBase_transferVolume:
      allOf:
      - $ref: '#/components/schemas/DeprecatedContainerVolumeForInput'
      description: |
        Deprecated - use transferQuantity instead.
    ContainerUpdate_allOf:
      properties:
        projectId:
          nullable: true
          type: string
        quantity:
          $ref: '#/components/schemas/ContainerQuantity'
        volume:
          $ref: '#/components/schemas/DeprecatedContainerVolumeForInput'
      example: null
    ContainerWithCoordinates_allOf:
      properties:
        gridNumber:
          type: number
        gridPosition:
          type: string
      type: object
      example: null
    CreateConsensusAlignmentAsyncTask_allOf:
      properties:
        response:
          $ref: '#/components/schemas/DnaAlignment'
      type: object
      example: null
    CreateNucleotideConsensusAlignmentAsyncTask_allOf:
      properties:
        response:
          $ref: '#/components/schemas/NucleotideAlignment'
      type: object
      example: null
    CustomEntity_creator:
      allOf:
      - $ref: '#/components/schemas/UserSummary'
      - readOnly: true
    CustomEntity_schema:
      allOf:
      - $ref: '#/components/schemas/SchemaSummary'
      example:
        id: ts_EM122lfJ
        name: Strain
      nullable: true
    CustomEntityWithEntityType_allOf:
      properties:
        entityType:
          enum:
          - custom_entity
          type: string
      type: object
      example: null
    DateAppConfigItem_allOf:
      properties:
        type:
          format: date
          type: string
        value:
          example: 2022-01-01
          nullable: true
          type: string
      example: null
    DatetimeAppConfigItem_allOf:
      properties:
        type:
          example: datetime
          format: datetime
          type: string
        value:
          example: 2022-01-01T12:30
          nullable: true
          type: string
      example: null
    DeprecatedEntitySchema_allOf:
      properties:
        type:
          enum:
          - custom_entity
          - dna_sequence
          - aa_sequence
          - mixture
          - dna_oligo
          - rna_oligo
          - molecule
          - entry
          readOnly: true
          type: string
      type: object
      example: null
    DnaAlignment_allOf:
      properties:
        alignedSequences:
          items:
            $ref: '#/components/schemas/AlignedSequence'
          type: array
      type: object
      example: null
    DnaAlignmentBase_files_inner_oneOf:
      properties:
        sequenceId:
          example: seq_3cxbVcCf
          type: string
      type: object
    DnaAlignmentBase_files_inner:
      oneOf:
      - $ref: '#/components/schemas/DnaAlignmentBase_files_inner_oneOf'
      - $ref: '#/components/schemas/DnaTemplateAlignmentFile'
    DnaAlignmentsPaginatedList_allOf:
      properties:
        dnaAlignments:
          items:
            $ref: '#/components/schemas/DnaAlignmentSummary'
          type: array
      example: null
    DnaAnnotation_allOf:
      properties:
        end:
          type: integer
        start:
          type: integer
        strand:
          maximum: 1
          minimum: -1
          type: integer
        type:
          type: string
      type: object
      example: null
    DnaConsensusAlignmentCreate_allOf_newSequence:
      properties:
        folderId:
          example: lib_qQFY3WQH
          type: string
      type: object
      example: null
    DnaConsensusAlignmentCreate_allOf:
      properties:
        newSequence:
          $ref: '#/components/schemas/DnaConsensusAlignmentCreate_allOf_newSequence'
        sequenceId:
          type: string
      example: null
    DnaOligo_allOf:
      properties:
        apiURL:
          example: https://benchling.com/api/v2/dna-oligos/seq_bhuDUw9D
          type: string
        bases:
          example: ACTTTTT
          type: string
      example: null
    DnaOligoWithEntityType_allOf:
      properties:
        entityType:
          enum:
          - dna_oligo
          type: string
      type: object
      example: null
    DnaOligosPaginatedList_allOf:
      properties:
        dnaOligos:
          items:
            $ref: '#/components/schemas/DnaOligo'
          type: array
      example: null
    DnaSequenceWithEntityType_allOf:
      properties:
        entityType:
          enum:
          - dna_sequence
          type: string
      type: object
      example: null
    DnaTemplateAlignmentCreate_allOf:
      properties:
        templateSequenceId:
          example: seq_rXqq0IHU
          type: string
      required:
      - templateSequenceId
      type: object
      example: null
    Dropdown_allOf:
      properties:
        archiveRecord:
          allOf:
          - $ref: '#/components/schemas/ArchiveRecord'
          nullable: true
        options:
          description: Array of dropdown options
          items:
            $ref: '#/components/schemas/DropdownOption'
          type: array
      type: object
      example: null
    DropdownFieldDefinition_allOf:
      properties:
        dropdownId:
          nullable: true
          type: string
        type:
          enum:
          - dropdown
          type: string
      type: object
      example: null
    EntityRegisteredEvent_allOf:
      properties:
        entity:
          $ref: '#/components/schemas/GenericEntity'
        eventType:
          enum:
          - v2.entity.registered
          type: string
      type: object
      example: null
    EntitySchema_allOf_constraint:
      nullable: true
      properties:
        fieldDefinitionNames:
          items:
            type: string
          type: array
        hasUniqueResidues:
          type: boolean
      type: object
      example: null
    EntitySchema_allOf:
      properties:
        constraint:
          $ref: '#/components/schemas/EntitySchema_allOf_constraint'
        containableType:
          enum:
          - NONE
          - ENTITY
          - BATCH
          type: string
        modifiedAt:
          description: DateTime the Entity Schema was last modified
          example: 2017-04-18T05:55:48.685345Z
          format: date-time
          type: string
        type:
          enum:
          - custom_entity
          - dna_sequence
          - aa_sequence
          - mixture
          - dna_oligo
          - rna_oligo
          - molecule
          readOnly: true
          type: string
      type: object
      example: null
    EntitySchemaAppConfigItem_allOf:
      properties:
        subtype:
          $ref: '#/components/schemas/SchemaDependencySubtypes'
        type:
          enum:
          - entity_schema
          example: entity_schema
          type: string
        value:
          example: ts_e59sjL23
          nullable: true
          type: string
      example: null
    Entry_archiveRecord:
      allOf:
      - $ref: '#/components/schemas/ArchiveRecord'
      description: |
        ArchiveRecord Resource if the entry is archived. This is null if the entry is not archived.
      nullable: true
    Entry_creator:
      allOf:
      - $ref: '#/components/schemas/UserSummary'
      description: UserSummary Resource of the user who created the entry
      readOnly: true
    SchemaProperty_4:
      allOf:
      - $ref: '#/components/schemas/EntrySchema'
      description: Entry schema if set
      nullable: true
      title: SchemaProperty
      type: object
    EntryCreate_authorIds:
      oneOf:
      - deprecated: true
        type: string
      - description: |
          IDs of users to set as the entry's authors. Defaults to the creator.
        items:
          type: string
        type: array
    EntryCreatedEvent_allOf:
      properties:
        entry:
          $ref: '#/components/schemas/Entry'
        eventType:
          enum:
          - v2.entry.created
          type: string
      type: object
      example: null
    EntryDay_notes_inner:
      description: |
        Notes are the main building blocks of entries. Each note corresponds roughly to a paragraph.
      discriminator:
        mapping:
          assay_run: '#/components/schemas/AssayRunNotePart'
          box_creation_table: '#/components/schemas/BoxCreationTableNotePart'
          code: '#/components/schemas/SimpleNotePart'
          external_file: '#/components/schemas/ExternalFileNotePart'
          list_bullet: '#/components/schemas/SimpleNotePart'
          list_checkbox: '#/components/schemas/CheckboxNotePart'
          list_number: '#/components/schemas/SimpleNotePart'
          mixture_prep_table: '#/components/schemas/MixturePrepTableNotePart'
          plate_creation_table: '#/components/schemas/PlateCreationTableNotePart'
          registration_table: '#/components/schemas/RegistrationTableNotePart'
          results_table: '#/components/schemas/ResultsTableNotePart'
          table: '#/components/schemas/TableNotePart'
          text: '#/components/schemas/SimpleNotePart'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/SimpleNotePart'
      - $ref: '#/components/schemas/TableNotePart'
      - $ref: '#/components/schemas/CheckboxNotePart'
      - $ref: '#/components/schemas/ExternalFileNotePart'
      - $ref: '#/components/schemas/AssayRunNotePart'
      - $ref: '#/components/schemas/ResultsTableNotePart'
      - $ref: '#/components/schemas/RegistrationTableNotePart'
      - $ref: '#/components/schemas/PlateCreationTableNotePart'
      - $ref: '#/components/schemas/BoxCreationTableNotePart'
      - $ref: '#/components/schemas/MixturePrepTableNotePart'
      type: object
    EntrySchemaDetailed_allOf:
      properties:
        type:
          enum:
          - entry
          readOnly: true
          type: string
      type: object
      example: null
    EntryTableCell_link:
      allOf:
      - $ref: '#/components/schemas/EntryLink'
      description: |
        A Link Resource if this cell contained a hyperlink. Otherwise, link will be omitted from the cell object. (Note: storage and user types are not yet supported.)
    EntryTemplate_creator:
      allOf:
      - $ref: '#/components/schemas/UserSummary'
      description: UserSummary Resource of the user who created the template
      readOnly: true
    EntryTemplateDay_notes_inner:
      description: |
        Notes are the main building blocks of entries. Each note corresponds roughly to a paragraph.
      oneOf:
      - $ref: '#/components/schemas/SimpleNotePart'
      - $ref: '#/components/schemas/TableNotePart'
      - $ref: '#/components/schemas/CheckboxNotePart'
      - $ref: '#/components/schemas/ExternalFileNotePart'
      - $ref: '#/components/schemas/AssayRunNotePart'
      - $ref: '#/components/schemas/LookupTableNotePart'
      - $ref: '#/components/schemas/ResultsTableNotePart'
      - $ref: '#/components/schemas/RegistrationTableNotePart'
      - $ref: '#/components/schemas/PlateCreationTableNotePart'
      - $ref: '#/components/schemas/BoxCreationTableNotePart'
      - $ref: '#/components/schemas/MixturePrepTableNotePart'
      type: object
    EntryUpdatedFieldsEvent_allOf:
      properties:
        entry:
          $ref: '#/components/schemas/Entry'
        eventType:
          enum:
          - v2.entry.updated.fields
          type: string
      type: object
      example: null
    EntryUpdatedReviewRecordEvent_allOf:
      properties:
        entry:
          $ref: '#/components/schemas/Entry'
        eventType:
          enum:
          - v2.entry.updated.reviewRecord
          type: string
      type: object
      example: null
    EventBase_schema:
      nullable: true
      properties:
        id:
          type: string
        name:
          type: string
      type: object
    ExportsAsyncTask_allOf_response:
      properties:
        downloadURL:
          format: uri
          type: string
      type: object
      example: null
    ExportsAsyncTask_allOf:
      properties:
        response:
          $ref: '#/components/schemas/ExportsAsyncTask_allOf_response'
      type: object
      example: null
    ExternalFileNotePart_allOf:
      properties:
        externalFileId:
          description: |
            The ID of the external file. Use the 'Get an external file' endpoint to retrieve metadata about it.
          type: string
        links:
          description: |
            Array of links referenced in the caption via an @-mention, hyperlink, or the drag-n-dropped preview attached to the note.
          items:
            $ref: '#/components/schemas/EntryLink'
          type: array
        text:
          description: The caption of the file attachment.
          type: string
        type:
          enum:
          - external_file
          type: string
      type: object
      example: null
    Feature_allOf:
      properties:
        id:
          description: The id of the feature
          example: feat_4YVqX98z
          type: string
        matchType:
          description: The match type of the feature. Used to determine how auto-annotate
            matches are made.
          enum:
          - nucleotide
          - protein
          type: string
      example: null
    FeatureCreate_allOf:
      properties:
        matchType:
          description: The match type of the feature. Used to determine how auto-annotate
            matches are made.
          enum:
          - nucleotide
          - protein
          type: string
      example: null
    FeatureLibrariesPaginatedList_allOf:
      properties:
        featureLibraries:
          items:
            $ref: '#/components/schemas/FeatureLibrary'
          type: array
      example: null
    FeatureLibrary_allOf:
      properties:
        createdAt:
          description: DateTime the Feature Library was created
          format: date-time
          type: string
        id:
          description: The id of the feature library
          example: featlib_6ZVdX98t
          type: string
        modifiedAt:
          description: DateTime the Feature Library was last modified
          format: date-time
          type: string
        owner:
          anyOf:
          - $ref: '#/components/schemas/Organization'
          - $ref: '#/components/schemas/UserSummary'
        webURL:
          description: The Benchling web UI url to view the Feature Library
          format: uri
          type: string
      example: null
    FeatureLibraryCreate_allOf:
      properties:
        organizationId:
          description: |
            The organization that will own the feature library. The requesting user must be an administrator of the organization. If unspecified and the organization allows personal ownables, then the requesting user will own the feature library
          example: ent_a0SApq3z
          type: string
      example: null
    FeaturesPaginatedList_allOf:
      properties:
        features:
          description: List of features for the page
          items:
            $ref: '#/components/schemas/Feature'
          type: array
      example: null
    Field_value:
      description: |
        For single link fields, use the id of the item you want to link (eg. "seq_jdf8BV24").
        For multi-link fields, use an array of ids of the items you want to link (eg. ["seq_jdf8BV24"])
      nullable: true
      oneOf:
      - type: string
      - type: boolean
      - type: number
      - type: object
      - items:
          type: string
        type: array
    FieldAppConfigItem_allOf:
      properties:
        type:
          enum:
          - field
          example: field
          type: string
        value:
          example: tsf_e59a3b23
          nullable: true
          type: string
      example: null
    FindMatchingRegionsAsyncTask_allOf_response_aaSequenceMatches:
      properties:
        matchingAASequenceIds:
          items:
            type: string
          type: array
        targetAASequenceId:
          type: string
      type: object
      example: null
    FindMatchingRegionsAsyncTask_allOf_response:
      properties:
        aaSequenceMatches:
          items:
            $ref: '#/components/schemas/FindMatchingRegionsAsyncTask_allOf_response_aaSequenceMatches'
          type: array
      type: object
      example: null
    FindMatchingRegionsAsyncTask_allOf:
      properties:
        response:
          $ref: '#/components/schemas/FindMatchingRegionsAsyncTask_allOf_response'
      type: object
      example: null
    FloatAppConfigItem_allOf:
      properties:
        type:
          enum:
          - float
          example: float
          type: string
        value:
          example: 1.0
          format: float
          nullable: true
          type: number
      example: null
    FloatFieldDefinition_allOf:
      properties:
        decimalPrecision:
          nullable: true
          type: number
        legalTextDropdownId:
          nullable: true
          type: string
        numericMax:
          nullable: true
          type: number
        numericMin:
          nullable: true
          type: number
        type:
          enum:
          - float
          type: string
      type: object
      example: null
    ForbiddenError_error:
      properties:
        invalidId:
          type: string
        message:
          type: string
        type:
          type: string
        userMessage:
          type: string
      type: object
    GenericApiIdentifiedAppConfigItem_allOf:
      properties:
        type:
          enum:
          - container_schema
          - plate_schema
          - location_schema
          - box_schema
          - run_schema
          - result_schema
          - request_schema
          - entry_schema
          - workflow_task_schema
          - dropdown
          - dropdown_option
          - registry
          - folder
          - entry
          - worklist
          - project
          - workflow_task_status
          - dna_sequence
          - dna_oligo
          - aa_sequence
          - custom_entity
          - mixture
          - molecule
          - rna_oligo
          - rna_sequence
          - box
          - container
          - location
          - plate
          type: string
        value:
          nullable: true
          type: string
      example: null
    GenericEntity_creator:
      allOf:
      - $ref: '#/components/schemas/UserSummary'
      - description: UserSummary of the user who created the request
        readOnly: true
    Ingredient_componentEntity:
      allOf:
      - $ref: '#/components/schemas/EntityLabels'
      - description: The entity that uniquely identifies this component.
    Ingredient_componentLotContainer:
      allOf:
      - $ref: '#/components/schemas/ContainerLabels'
      description: The container representing the component lot for this ingredient.
        This is only present if the mixture schema supports component lots in "storage"
        format.
      nullable: true
    Ingredient_componentLotEntity:
      allOf:
      - $ref: '#/components/schemas/EntityLabels'
      description: The entity representing the component lot for this ingredient.
        This is only present if the mixture schema supports component lots in "storage"
        format.
      nullable: true
    IntegerAppConfigItem_allOf:
      properties:
        type:
          enum:
          - integer
          example: integer
          type: string
        value:
          nullable: true
          type: integer
      example: null
    IntegerFieldDefinition_allOf:
      properties:
        numericMax:
          nullable: true
          type: number
        numericMin:
          nullable: true
          type: number
        type:
          enum:
          - integer
          type: string
      type: object
      example: null
    JsonAppConfigItem_allOf:
      properties:
        type:
          enum:
          - json
          example: json
          type: string
        value:
          example: "{\"abc\": \"123\"}"
          nullable: true
          type: string
      example: null
    LabAutomationBenchlingAppErrors_topLevelErrors_inner:
      example:
        errorMessage: errorMessage
      properties:
        errorMessage:
          type: string
      type: object
    LinkedAppConfigResourceMixin_linkedResource:
      allOf:
      - $ref: '#/components/schemas/LinkedAppConfigResource'
      nullable: true
    LocationSchema_allOf:
      properties:
        type:
          enum:
          - location
          readOnly: true
          type: string
      type: object
      example: null
    LookupTableNotePart_allOf:
      properties:
        type:
          enum:
          - lookup_table
          type: string
      type: object
      example: null
    Mixture_schema:
      allOf:
      - $ref: '#/components/schemas/SchemaSummary'
      example:
        id: ts_EM122lfJ
        name: Prep
    MixtureBulkUpdate_allOf:
      properties:
        id:
          example: ingr_3jshUi
          type: string
      required:
      - id
      type: object
      example: null
    MixturePrepTableNotePart_allOf:
      properties:
        mixtureSchemaId:
          example: ts_eGNPfqCX
          type: string
        type:
          enum:
          - mixture_prep_table
          type: string
      type: object
      example: null
    MixtureWithEntityType_allOf:
      properties:
        entityType:
          enum:
          - mixture
          type: string
      type: object
      example: null
    MoleculeBaseRequest_chemicalStructure:
      allOf:
      - $ref: '#/components/schemas/MoleculeStructure'
      description: |
        Chemical structure of the Molecule.
    MoleculeUpdate_allOf:
      properties:
        entityRegistryId:
          type: string
      type: object
      example: null
    MoleculesPaginatedList_allOf:
      properties:
        molecules:
          items:
            $ref: '#/components/schemas/Molecule'
          type: array
      example: null
    MultipleContainersTransfer_allOf:
      properties:
        destinationContainerId:
          description: ID of container that will be transferred into.
          type: string
        finalQuantity:
          $ref: '#/components/schemas/ContainerQuantity'
        finalVolume:
          $ref: '#/components/schemas/DeprecatedContainerVolumeForInput'
        sourceConcentration:
          description: |
            Concentration at which to transfer entities or batches. Not applicable for container-to-container transfers (the concentration of the source container’s contents will be used).
          type: object
      required:
      - destinationContainerId
      type: object
      example: null
    NotFoundError_error_allOf:
      properties:
        invalidId:
          type: string
        type:
          enum:
          - invalid_request_error
          type: string
    NotFoundError_error:
      allOf:
      - $ref: '#/components/schemas/BaseError'
      - $ref: '#/components/schemas/NotFoundError_error_allOf'
    NucleotideAlignment_allOf:
      properties:
        alignedSequences:
          items:
            $ref: '#/components/schemas/AlignedNucleotideSequence'
          type: array
      type: object
      example: null
    NucleotideAlignmentBase_files_inner:
      oneOf:
      - $ref: '#/components/schemas/DnaAlignmentBase_files_inner_oneOf'
      - $ref: '#/components/schemas/NucleotideAlignmentFile'
    NucleotideAlignmentsPaginatedList_allOf:
      properties:
        alignments:
          items:
            $ref: '#/components/schemas/NucleotideAlignmentSummary'
          type: array
      example: null
    OAuthBadRequestError_error_allOf:
      properties:
        type:
          enum:
          - invalid_request
          - invalid_grant
          - unauthorized_client
          - unsupported_grant_type
          type: string
    OAuthBadRequestError_error:
      allOf:
      - $ref: '#/components/schemas/BaseError'
      - $ref: '#/components/schemas/OAuthBadRequestError_error_allOf'
    OAuthUnauthorizedError_error_allOf:
      properties:
        type:
          enum:
          - invalid_client
          type: string
    OAuthUnauthorizedError_error:
      allOf:
      - $ref: '#/components/schemas/BaseError'
      - $ref: '#/components/schemas/OAuthUnauthorizedError_error_allOf'
    OligosBulkGet_oligos_inner:
      anyOf:
      - $ref: '#/components/schemas/DnaOligo'
      - $ref: '#/components/schemas/RnaOligo'
    OligosPaginatedList_allOf:
      properties:
        oligos:
          items:
            $ref: '#/components/schemas/Oligo'
          type: array
      example: null
    OrganizationsPaginatedList_allOf:
      properties:
        organizations:
          items:
            $ref: '#/components/schemas/Organization'
          type: array
      example: null
    Plate_wells_value:
      oneOf:
      - $ref: '#/components/schemas/Well'
      - $ref: '#/components/schemas/InaccessibleResource'
    PlateCreate_wells_value:
      example:
        barcode: barcode
      properties:
        barcode:
          type: string
      type: object
    PlateCreationTableNotePart_allOf:
      properties:
        plateSchemaId:
          example: pltsch_LRIuH0yJ
          type: string
        type:
          enum:
          - plate_creation_table
          type: string
      type: object
      example: null
    PlateSchema_allOf:
      properties:
        containerSchema:
          $ref: '#/components/schemas/BoxSchema_allOf_containerSchema'
        height:
          type: number
        plateType:
          type: string
        type:
          enum:
          - plate
          readOnly: true
          type: string
        width:
          type: number
      type: object
      example: null
    Project_owner:
      anyOf:
      - $ref: '#/components/schemas/Organization'
      - $ref: '#/components/schemas/UserSummary'
    RegisteredEntitiesList_entities_inner:
      discriminator:
        mapping:
          aa_sequence: '#/components/schemas/AaSequenceWithEntityType'
          custom_entity: '#/components/schemas/CustomEntityWithEntityType'
          dna_oligo: '#/components/schemas/DnaOligoWithEntityType'
          dna_sequence: '#/components/schemas/DnaSequenceWithEntityType'
          mixture: '#/components/schemas/MixtureWithEntityType'
          rna_oligo: '#/components/schemas/RnaOligoWithEntityType'
        propertyName: entityType
      oneOf:
      - $ref: '#/components/schemas/DnaSequenceWithEntityType'
      - $ref: '#/components/schemas/CustomEntityWithEntityType'
      - $ref: '#/components/schemas/AaSequenceWithEntityType'
      - $ref: '#/components/schemas/MixtureWithEntityType'
      - $ref: '#/components/schemas/DnaOligoWithEntityType'
      - $ref: '#/components/schemas/RnaOligoWithEntityType'
    RegistrationTableNotePart_allOf:
      properties:
        entitySchemaId:
          example: ts_hMbJPSA8
          type: string
        type:
          enum:
          - registration_table
          type: string
      type: object
      example: null
    RegistrySchema_allOf:
      properties:
        prefix:
          type: string
        registryId:
          type: string
      type: object
      example: null
    Request_allOf:
      properties:
        apiURL:
          description: The canonical url of the Request in the API.
          example: https://benchling.com/api/v2/requests/req_dnn2JtWq
          format: uri
          readOnly: true
          type: string
        assignees:
          description: Array of assignees
          items:
            oneOf:
            - $ref: '#/components/schemas/RequestUserAssignee'
            - $ref: '#/components/schemas/RequestTeamAssignee'
          readOnly: true
          type: array
        createdAt:
          description: Date and time the request was created
          example: 2017-04-23 01:30:50.970926
          format: isoformat
          readOnly: true
          type: string
        creator:
          allOf:
          - $ref: '#/components/schemas/UserSummary'
          - description: UserSummary of the user who created the request
          - readOnly: true
        displayId:
          description: User-friendly ID of the request
          example: VP1
          readOnly: true
          type: string
        fields:
          additionalProperties:
            $ref: '#/components/schemas/Field'
          type: object
        id:
          description: Unique ID for the request
          example: req_JekfeyVS
          readOnly: true
          type: string
        projectId:
          description: The ID of the project to which the request belongs.
          example: src_29pt8Ida
          type: string
        requestStatus:
          $ref: '#/components/schemas/RequestStatus'
        requestor:
          allOf:
          - $ref: '#/components/schemas/UserSummary'
          - description: UserSummary of the user making the request
          - readOnly: true
        sampleGroups:
          items:
            $ref: '#/components/schemas/RequestSampleGroup'
          type: array
        scheduledOn:
          description: "Date the request is scheduled to be executed on, in YYYY-MM-DD\
            \ format."
          example: 2019-09-12
          format: date
          nullable: true
          type: string
        schema:
          allOf:
          - $ref: '#/components/schemas/SchemaSummary'
          - description: SchemaSummary for the request
            example:
              id: assaysch_3IF58QOf
              name: Vector Production
            readOnly: true
          title: SchemaProperty
        tasks:
          items:
            $ref: '#/components/schemas/RequestTask'
          type: array
        webURL:
          description: URL of the request
          example: https://benchling.com/requests/req_JekfeyVS
          format: uri
          readOnly: true
          type: string
      example: null
    RequestCreate_allOf:
      properties:
        schemaId:
          description: ID of the request's schema.
          example: assaysch_3IF58QOf
          type: string
          writeOnly: true
      required:
      - fields
      - projectId
      - sampleGroups
      - samples
      - schemaId
      example: null
    RequestCreatedEvent_allOf:
      properties:
        eventType:
          enum:
          - v2.request.created
          type: string
        request:
          $ref: '#/components/schemas/Request'
      type: object
      example: null
    RequestFulfillment_sampleGroup:
      allOf:
      - $ref: '#/components/schemas/SampleGroup'
      description: "The request sample group this fulfillment was executed upon, if\
        \ any."
      nullable: true
    RequestResponse_samples_inner_batch:
      allOf:
      - $ref: '#/components/schemas/RequestResponseSamplesItemBatch'
      description: "The sample, if it is a batch resource. Null otherwise."
      nullable: true
    RequestResponse_samples_inner_entity:
      allOf:
      - $ref: '#/components/schemas/RequestResponseSamplesItemEntity'
      description: "The sample, if it is an entity resource. Null otherwise."
      nullable: true
    RequestResponse_samples_inner:
      example:
        batch: null
        entity: null
        status: COMPLETED
      properties:
        batch:
          $ref: '#/components/schemas/RequestResponse_samples_inner_batch'
        entity:
          $ref: '#/components/schemas/RequestResponse_samples_inner_entity'
        status:
          description: "The status of the sample, based on the status of the stage\
            \ run that generated it."
          enum:
          - COMPLETED
          - DISCARDED
          type: string
      type: object
    RequestSampleGroupSamples_value:
      oneOf:
      - $ref: '#/components/schemas/RequestSampleWithEntity'
      - $ref: '#/components/schemas/RequestSampleWithBatch'
    RequestSchema_allOf_organization:
      description: |
        The organization that owns the schema.
      properties:
        handle:
          type: string
        id:
          type: string
        name:
          type: string
      type: object
      example: null
    RequestSchema_allOf:
      properties:
        modifiedAt:
          description: DateTime the Request Schema was last modified
          example: 2017-04-18T05:55:48.685345Z
          format: date-time
          type: string
        organization:
          $ref: '#/components/schemas/RequestSchema_allOf_organization'
        systemName:
          type: string
        type:
          enum:
          - request
          readOnly: true
          type: string
      type: object
      example: null
    RequestTaskSchema_allOf:
      properties:
        modifiedAt:
          description: DateTime the Request Task Schema was last modified
          example: 2017-04-18T05:55:48.685345Z
          format: date-time
          type: string
        organization:
          $ref: '#/components/schemas/RequestSchema_allOf_organization'
        systemName:
          type: string
        type:
          enum:
          - request_task
          readOnly: true
          type: string
      type: object
      example: null
    RequestUpdate_allOf:
      properties:
        requestStatus:
          $ref: '#/components/schemas/RequestStatus'
      example: null
    RequestUpdatedFieldsEvent_allOf:
      properties:
        eventType:
          enum:
          - v2.request.updated.fields
          type: string
        request:
          $ref: '#/components/schemas/Request'
      type: object
      example: null
    RequestWriteBase_allOf:
      properties:
        assignees:
          description: Array of assignees
          items:
            oneOf:
            - $ref: '#/components/schemas/RequestWriteUserAssignee'
            - $ref: '#/components/schemas/RequestWriteTeamAssignee'
          type: array
          writeOnly: true
        fields:
          allOf:
          - $ref: '#/components/schemas/Fields'
          description: The request's fields
        projectId:
          description: The ID of the project to which the request belongs.
          example: src_29pt8Ida
          type: string
        requestorId:
          description: |
            ID of the user making the request. If unspecified, the requestor is the request creator.
          example: ent_a0SApq3z
          nullable: true
          type: string
          writeOnly: true
        sampleGroups:
          items:
            $ref: '#/components/schemas/RequestSampleGroupCreate'
          type: array
        scheduledOn:
          description: "Date the request is scheduled to be executed on, in YYYY-MM-DD\
            \ format."
          example: 2019-09-12
          format: date
          type: string
          writeOnly: true
      example: null
    RequestsPaginatedList_allOf:
      properties:
        nextToken:
          type: string
      example: null
    ResultsTableNotePart_allOf:
      properties:
        assayResultSchemaId:
          example: assaysch_msh1Ly6g
          type: string
        type:
          enum:
          - results_table
          type: string
      type: object
      example: null
    RnaAnnotation_allOf:
      properties:
        end:
          type: integer
        start:
          type: integer
        strand:
          example: 1
          maximum: 1
          minimum: 0
          type: integer
        type:
          type: string
      type: object
      example: null
    RnaOligo_allOf:
      properties:
        apiURL:
          example: https://benchling.com/api/v2/rna-oligos/seq_bhuDUw9D
          type: string
        bases:
          example: ACUUUUU
          type: string
        nucleotideType:
          example: RNA
          type: string
      example: null
    RnaOligoWithEntityType_allOf:
      properties:
        entityType:
          enum:
          - rna_oligo
          type: string
      type: object
      example: null
    RnaOligosPaginatedList_allOf:
      properties:
        rnaOligos:
          items:
            $ref: '#/components/schemas/RnaOligo'
          type: array
      example: null
    Schema_fieldDefinitions_inner:
      oneOf:
      - $ref: '#/components/schemas/SimpleFieldDefinition'
      - $ref: '#/components/schemas/IntegerFieldDefinition'
      - $ref: '#/components/schemas/FloatFieldDefinition'
      - $ref: '#/components/schemas/DropdownFieldDefinition'
      - $ref: '#/components/schemas/SchemaLinkFieldDefinition'
    SchemaLinkFieldDefinition_allOf:
      properties:
        schemaId:
          nullable: true
          type: string
        type:
          enum:
          - entity_link
          - entry_link
          - part_link
          - translation_link
          - batch_link
          - storage_link
          - assay_request_link
          - assay_result_link
          - assay_run_link
          type: string
      type: object
      example: null
    SecureTextAppConfigItem_allOf:
      properties:
        type:
          enum:
          - secure_text
          example: secure_text
          type: string
        value:
          example: <encryptedtext/>
          nullable: true
          type: string
      example: null
    SimpleFieldDefinition_allOf:
      properties:
        type:
          enum:
          - dna_sequence_link
          - aa_sequence_link
          - custom_entity_link
          - mixture_link
          - blob_link
          - text
          - long_text
          - boolean
          - datetime
          - date
          - json
          type: string
      type: object
      example: null
    SimpleNotePart_allOf:
      properties:
        links:
          description: |
            Array of links referenced in text via an @-mention, hyperlink, or the drag-n-dropped preview attached to the note.
          items:
            $ref: '#/components/schemas/EntryLink'
          type: array
        text:
          description: The textual contents of the note.
          type: string
        type:
          enum:
          - text
          - code
          - list_bullet
          - list_number
          type: string
      type: object
      example: null
    StageEntry_creator:
      allOf:
      - $ref: '#/components/schemas/UserSummary'
      description: UserSummary Resource of the user who created the stage entry
      readOnly: true
    StageEntryUpdatedFieldsEvent_allOf:
      properties:
        eventType:
          enum:
          - v2-alpha.stageEntry.updated.fields
          type: string
        stageEntry:
          $ref: '#/components/schemas/StageEntry'
      type: object
      example: null
    StageEntryUpdatedReviewRecordEvent_allOf:
      properties:
        entry:
          $ref: '#/components/schemas/StageEntry'
        eventType:
          enum:
          - v2-alpha.stageEntry.updated.reviewRecord
          type: string
      type: object
      example: null
    TableNotePart_allOf:
      properties:
        links:
          description: |
            Array of links referenced in the caption via an @-mention, hyperlink, or the drag-n-dropped preview attached to the note.
          items:
            $ref: '#/components/schemas/EntryLink'
          type: array
        table:
          allOf:
          - $ref: '#/components/schemas/EntryTable'
          type: object
        text:
          description: The caption of the table.
          type: string
        type:
          enum:
          - table
          type: string
      type: object
      example: null
    Team_allOf:
      properties:
        organization:
          $ref: '#/components/schemas/OrganizationSummary'
      example: null
    TeamsPaginatedList_allOf:
      properties:
        teams:
          items:
            $ref: '#/components/schemas/Team'
          type: array
      example: null
    TextAppConfigItem_allOf:
      properties:
        type:
          enum:
          - text
          example: text
          type: string
        value:
          example: user configured text
          nullable: true
          type: string
      example: null
    TransfersAsyncTask_allOf_response:
      properties:
        destinationContainers:
          items:
            $ref: '#/components/schemas/Container'
          type: array
      type: object
      example: null
    TransfersAsyncTask_allOf:
      properties:
        response:
          $ref: '#/components/schemas/TransfersAsyncTask_allOf_response'
      type: object
      example: null
    Translation_allOf_regions:
      properties:
        end:
          type: integer
        start:
          type: integer
      type: object
      example: null
    Translation_allOf:
      properties:
        aminoAcids:
          readOnly: true
          type: string
        end:
          type: integer
        geneticCode:
          description: The genetic code to use when translating the nucleotide sequence
            into amino acids.
          enum:
          - STANDARD
          - VERTEBRATE_MITOCHONDRIAL
          - YEAST_MITOCHONDRIAL
          - MOLD_PROTOZOAN_COELENTERATE_MITOCHONDRIAL_MYCOPLASMA_SPIROPLASMA
          - INVERTEBRATE_MITOCHONDRIAL
          - CILIATE_DASYCLADACEAN_HEXAMITA_NUCLEAR
          - ECHINODERM_FLATWORM_MITOCHONDRIAL
          - EUPLOTID_NUCLEAR
          - BACTERIAL_ARCHAEAL_PLANT_PLASTID
          - ALTERNATIVE_YEAST_NUCLEAR
          - ASCIDIAN_MITOCHONDRIAL
          - ALTERNATIVE_FLATWORM_MITOCHONDRIAL
          - CHLOROPHYCEAN_MITOCHONDRIAL
          - TREMATODE_MITOCHONDRIAL
          - SCENEDESMUS_OBLIQUUS_MITOCHONDRIAL
          - THRAUSTOCHYTRIUM_MITOCHONDRIAL
          - RHABDOPLEURIDAE_MITOCHONDRIAL
          - CANDIDATE_DIVISION_SR1_GRACILIBACTERIA
          - PACHYSOLEN_TANNOPHILUS_NUCLEAR
          - MESODINIUM_NUCLEAR
          - PERITRICH_NUCLEAR
          - CEPHALODISCIDAE_MITOCHONDRIAL_UAA_TYR
          type: string
        regions:
          items:
            $ref: '#/components/schemas/Translation_allOf_regions'
          type: array
        start:
          type: integer
        strand:
          example: 1
          type: integer
      type: object
      example: null
    User_allOf:
      properties:
        email:
          type: string
        isSuspended:
          type: boolean
        passwordLastChangedAt:
          nullable: true
          type: string
      example: null
    UsersPaginatedList_allOf:
      properties:
        users:
          items:
            $ref: '#/components/schemas/User'
          type: array
      example: null
    WorkflowOutput_allOf:
      properties:
        creationOrigin:
          $ref: '#/components/schemas/CreationOrigin'
        fields:
          additionalProperties:
            $ref: '#/components/schemas/Field'
          type: object
        task:
          $ref: '#/components/schemas/WorkflowTaskSummary'
        webURL:
          description: URL of the workflow output
          format: uri
          readOnly: true
          type: string
        workflowTaskGroup:
          $ref: '#/components/schemas/WorkflowTaskGroupSummary'
      example: null
    WorkflowOutputBulkUpdate_allOf:
      properties:
        workflowOutputId:
          description: The ID of the workflow output
          example: wfout_5cJLQKVF
          type: string
      example: null
    WorkflowOutputCreate_allOf:
      properties:
        workflowTaskId:
          description: The ID of the workflow task this output belogns to
          example: wftask_OnnsW08k
          type: string
      required:
      - workflowTaskId
      example: null
    WorkflowOutputCreatedEvent_allOf:
      properties:
        eventType:
          enum:
          - v2.workflowOutput.created
          type: string
        workflowOutput:
          $ref: '#/components/schemas/WorkflowOutput'
      type: object
      example: null
    WorkflowOutputUpdatedFieldsEvent_allOf:
      properties:
        eventType:
          enum:
          - v2.workflowOutput.updated.fields
          type: string
        workflowOutput:
          $ref: '#/components/schemas/WorkflowOutput'
      type: object
      example: null
    WorkflowTask_allOf:
      properties:
        executionType:
          description: The method by which the task of the workflow is executed
          enum:
          - DIRECT
          - ENTRY
          type: string
      example: null
    WorkflowTaskBase_allOf:
      properties:
        assignee:
          allOf:
          - $ref: '#/components/schemas/UserSummary'
          nullable: true
        clonedFrom:
          allOf:
          - $ref: '#/components/schemas/WorkflowTaskSummary'
          nullable: true
        creationOrigin:
          $ref: '#/components/schemas/CreationOrigin'
        creator:
          $ref: '#/components/schemas/UserSummary'
        executionOrigin:
          allOf:
          - $ref: '#/components/schemas/WorkflowTaskExecutionOrigin'
          nullable: true
        fields:
          additionalProperties:
            $ref: '#/components/schemas/Field'
          type: object
        outputs:
          items:
            $ref: '#/components/schemas/WorkflowOutputSummary'
          type: array
        scheduledOn:
          description: The date on which the task is scheduled to be executed
          example: 2020-08-01
          format: date
          nullable: true
          type: string
        status:
          $ref: '#/components/schemas/WorkflowTaskStatus'
        webURL:
          description: URL of the workflow task
          format: uri
          readOnly: true
          type: string
        workflowTaskGroup:
          $ref: '#/components/schemas/WorkflowTaskGroupSummary'
      example: null
    WorkflowTaskBulkUpdate_allOf:
      properties:
        workflowTaskId:
          description: The workflow task ID
          example: wftask_OnnsW08k
          type: string
      example: null
    WorkflowTaskCreate_allOf:
      properties:
        workflowTaskGroupId:
          description: The workflow ID
          example: prs_giVNQcTL
          type: string
      required:
      - workflowTaskGroupId
      example: null
    WorkflowTaskCreatedEvent_allOf:
      properties:
        eventType:
          enum:
          - v2.workflowTask.created
          type: string
        workflowTask:
          $ref: '#/components/schemas/WorkflowTask'
      type: object
      example: null
    WorkflowTaskGroup_allOf:
      properties:
        executionType:
          description: The method by which the workflow is executed
          enum:
          - DIRECT
          - ENTRY
          type: string
      example: null
    WorkflowTaskGroupBase_allOf:
      properties:
        creationOrigin:
          $ref: '#/components/schemas/CreationOrigin'
        creator:
          $ref: '#/components/schemas/UserSummary'
        folder:
          $ref: '#/components/schemas/Folder'
        outputs:
          description: The outputs of the workflow task group
          items:
            $ref: '#/components/schemas/WorkflowOutputSummary'
          type: array
        responsibleTeam:
          allOf:
          - $ref: '#/components/schemas/TeamSummary'
          nullable: true
        watchers:
          description: The users watching the workflow task group
          items:
            $ref: '#/components/schemas/UserSummary'
          type: array
        webURL:
          description: URL of the workflow task group
          format: uri
          readOnly: true
          type: string
        workflowTaskSchema:
          $ref: '#/components/schemas/WorkflowTaskSchemaSummary'
        workflowTasks:
          description: The input tasks to the workflow task group
          items:
            $ref: '#/components/schemas/WorkflowTaskSummary'
          type: array
      example: null
    WorkflowTaskGroupCreate_allOf:
      properties:
        schemaId:
          description: The workflow task schema of tasks in this task group
          example: prstsch_KnR9iVum
          type: string
      required:
      - folderId
      - schemaId
      example: null
    WorkflowTaskGroupCreatedEvent_allOf:
      properties:
        eventType:
          enum:
          - v2.workflowTaskGroup.created
          type: string
        workflowTaskGroup:
          $ref: '#/components/schemas/WorkflowTaskGroup'
      type: object
      example: null
    WorkflowTaskGroupUpdatedWatchersEvent_allOf:
      properties:
        eventType:
          enum:
          - v2.workflowTaskGroup.updated.watchers
          type: string
        workflowTaskGroup:
          $ref: '#/components/schemas/WorkflowTaskGroup'
      type: object
      example: null
    WorkflowTaskSchema_allOf:
      properties:
        executionType:
          description: The method by which instances of this schema are executed
          enum:
          - DIRECT
          - ENTRY
          type: string
      example: null
    WorkflowTaskSchemaBase_allOf:
      properties:
        canSetAssigneeOnTaskCreation:
          description: Whether or not tasks of this schema can be created with a non-null
            assignee.
          type: boolean
        defaultCreationFolderId:
          description: ID of the default folder for creating workflow task groups
          nullable: true
          type: string
        defaultEntryExecutionFolderId:
          description: ID of the default folder for workflow task execution entries
          nullable: true
          type: string
        defaultResponsibleTeam:
          allOf:
          - $ref: '#/components/schemas/TeamSummary'
          nullable: true
        entryTemplateId:
          description: The ID of the template of the entries tasks of this schema
            will be executed into.
          example: tmpl_27b8fb
          nullable: true
          type: string
        prefix:
          description: The prefix for the displayId of tasks of this schema.
          type: string
        statusLifecycle:
          $ref: '#/components/schemas/WorkflowTaskStatusLifecycle'
        taskGroupPrefix:
          description: The prefix for the displayId of task groups containing tasks
            of this schema
          type: string
        workflowOutputSchema:
          allOf:
          - $ref: '#/components/schemas/WorkflowOutputSchema'
          nullable: true
      example: null
    WorkflowTaskUpdate_allOf:
      properties:
        statusId:
          example: wfts_VFvwv7JV
          type: string
      example: null
    WorkflowTaskUpdatedAssigneeEvent_allOf:
      properties:
        eventType:
          enum:
          - v2.workflowTask.updated.assignee
          type: string
        workflowTask:
          $ref: '#/components/schemas/WorkflowTask'
      type: object
      example: null
    WorkflowTaskUpdatedFieldsEvent_allOf:
      properties:
        eventType:
          enum:
          - v2.workflowTask.updated.fields
          type: string
        workflowTask:
          $ref: '#/components/schemas/WorkflowTask'
      type: object
      example: null
    WorkflowTaskUpdatedScheduledOnEvent_allOf:
      properties:
        eventType:
          enum:
          - v2.workflowTask.updated.scheduledOn
          type: string
        workflowTask:
          $ref: '#/components/schemas/WorkflowTask'
      type: object
      example: null
    WorkflowTaskUpdatedStatusEvent_allOf:
      properties:
        eventType:
          enum:
          - v2.workflowTask.updated.status
          type: string
        workflowTask:
          $ref: '#/components/schemas/WorkflowTask'
      type: object
      example: null
    listWorkflowTasks_scheduledOn_parameter_anyOf:
      enum:
      - "null"
      type: string
      example: null
  securitySchemes:
    basicApiKeyAuth:
      description: Use issued API key for standard access to the API
      scheme: basic
      type: http
    basicClientIdSecretAuth:
      description: Auth used as part of client credentials OAuth flow prior to receiving
        a bearer token.
      scheme: basic
      type: http
    oAuth:
      description: OAuth2 Client Credentials flow intended for service access
      flows:
        clientCredentials:
          scopes: {}
          tokenUrl: /api/v2/token
      type: oauth2
