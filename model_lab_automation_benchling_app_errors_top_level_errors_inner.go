/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// LabAutomationBenchlingAppErrorsTopLevelErrorsInner struct for LabAutomationBenchlingAppErrorsTopLevelErrorsInner
type LabAutomationBenchlingAppErrorsTopLevelErrorsInner struct {
	ErrorMessage *string `json:"errorMessage,omitempty"`
}

// NewLabAutomationBenchlingAppErrorsTopLevelErrorsInner instantiates a new LabAutomationBenchlingAppErrorsTopLevelErrorsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLabAutomationBenchlingAppErrorsTopLevelErrorsInner() *LabAutomationBenchlingAppErrorsTopLevelErrorsInner {
	this := LabAutomationBenchlingAppErrorsTopLevelErrorsInner{}
	return &this
}

// NewLabAutomationBenchlingAppErrorsTopLevelErrorsInnerWithDefaults instantiates a new LabAutomationBenchlingAppErrorsTopLevelErrorsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLabAutomationBenchlingAppErrorsTopLevelErrorsInnerWithDefaults() *LabAutomationBenchlingAppErrorsTopLevelErrorsInner {
	this := LabAutomationBenchlingAppErrorsTopLevelErrorsInner{}
	return &this
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise.
func (o *LabAutomationBenchlingAppErrorsTopLevelErrorsInner) GetErrorMessage() string {
	if o == nil || isNil(o.ErrorMessage) {
		var ret string
		return ret
	}
	return *o.ErrorMessage
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LabAutomationBenchlingAppErrorsTopLevelErrorsInner) GetErrorMessageOk() (*string, bool) {
	if o == nil || isNil(o.ErrorMessage) {
    return nil, false
	}
	return o.ErrorMessage, true
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *LabAutomationBenchlingAppErrorsTopLevelErrorsInner) HasErrorMessage() bool {
	if o != nil && !isNil(o.ErrorMessage) {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given string and assigns it to the ErrorMessage field.
func (o *LabAutomationBenchlingAppErrorsTopLevelErrorsInner) SetErrorMessage(v string) {
	o.ErrorMessage = &v
}

func (o LabAutomationBenchlingAppErrorsTopLevelErrorsInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ErrorMessage) {
		toSerialize["errorMessage"] = o.ErrorMessage
	}
	return json.Marshal(toSerialize)
}

type NullableLabAutomationBenchlingAppErrorsTopLevelErrorsInner struct {
	value *LabAutomationBenchlingAppErrorsTopLevelErrorsInner
	isSet bool
}

func (v NullableLabAutomationBenchlingAppErrorsTopLevelErrorsInner) Get() *LabAutomationBenchlingAppErrorsTopLevelErrorsInner {
	return v.value
}

func (v *NullableLabAutomationBenchlingAppErrorsTopLevelErrorsInner) Set(val *LabAutomationBenchlingAppErrorsTopLevelErrorsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableLabAutomationBenchlingAppErrorsTopLevelErrorsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableLabAutomationBenchlingAppErrorsTopLevelErrorsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLabAutomationBenchlingAppErrorsTopLevelErrorsInner(val *LabAutomationBenchlingAppErrorsTopLevelErrorsInner) *NullableLabAutomationBenchlingAppErrorsTopLevelErrorsInner {
	return &NullableLabAutomationBenchlingAppErrorsTopLevelErrorsInner{value: val, isSet: true}
}

func (v NullableLabAutomationBenchlingAppErrorsTopLevelErrorsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLabAutomationBenchlingAppErrorsTopLevelErrorsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


