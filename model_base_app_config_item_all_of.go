/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// BaseAppConfigItemAllOf struct for BaseAppConfigItemAllOf
type BaseAppConfigItemAllOf struct {
	Description *string `json:"description,omitempty"`
	RequiredConfig *bool `json:"requiredConfig,omitempty"`
}

// NewBaseAppConfigItemAllOf instantiates a new BaseAppConfigItemAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBaseAppConfigItemAllOf() *BaseAppConfigItemAllOf {
	this := BaseAppConfigItemAllOf{}
	return &this
}

// NewBaseAppConfigItemAllOfWithDefaults instantiates a new BaseAppConfigItemAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBaseAppConfigItemAllOfWithDefaults() *BaseAppConfigItemAllOf {
	this := BaseAppConfigItemAllOf{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *BaseAppConfigItemAllOf) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseAppConfigItemAllOf) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *BaseAppConfigItemAllOf) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *BaseAppConfigItemAllOf) SetDescription(v string) {
	o.Description = &v
}

// GetRequiredConfig returns the RequiredConfig field value if set, zero value otherwise.
func (o *BaseAppConfigItemAllOf) GetRequiredConfig() bool {
	if o == nil || isNil(o.RequiredConfig) {
		var ret bool
		return ret
	}
	return *o.RequiredConfig
}

// GetRequiredConfigOk returns a tuple with the RequiredConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseAppConfigItemAllOf) GetRequiredConfigOk() (*bool, bool) {
	if o == nil || isNil(o.RequiredConfig) {
    return nil, false
	}
	return o.RequiredConfig, true
}

// HasRequiredConfig returns a boolean if a field has been set.
func (o *BaseAppConfigItemAllOf) HasRequiredConfig() bool {
	if o != nil && !isNil(o.RequiredConfig) {
		return true
	}

	return false
}

// SetRequiredConfig gets a reference to the given bool and assigns it to the RequiredConfig field.
func (o *BaseAppConfigItemAllOf) SetRequiredConfig(v bool) {
	o.RequiredConfig = &v
}

func (o BaseAppConfigItemAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !isNil(o.RequiredConfig) {
		toSerialize["requiredConfig"] = o.RequiredConfig
	}
	return json.Marshal(toSerialize)
}

type NullableBaseAppConfigItemAllOf struct {
	value *BaseAppConfigItemAllOf
	isSet bool
}

func (v NullableBaseAppConfigItemAllOf) Get() *BaseAppConfigItemAllOf {
	return v.value
}

func (v *NullableBaseAppConfigItemAllOf) Set(val *BaseAppConfigItemAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableBaseAppConfigItemAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableBaseAppConfigItemAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBaseAppConfigItemAllOf(val *BaseAppConfigItemAllOf) *NullableBaseAppConfigItemAllOf {
	return &NullableBaseAppConfigItemAllOf{value: val, isSet: true}
}

func (v NullableBaseAppConfigItemAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBaseAppConfigItemAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


