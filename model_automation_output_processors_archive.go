/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// AutomationOutputProcessorsArchive struct for AutomationOutputProcessorsArchive
type AutomationOutputProcessorsArchive struct {
	// Array of automation output processor IDs
	AutomationOutputProcessorIds []string `json:"automationOutputProcessorIds"`
	// The reason that the output processors are being archived. Accepted reasons may differ based on tenant configuration. 
	Reason *string `json:"reason,omitempty"`
}

// NewAutomationOutputProcessorsArchive instantiates a new AutomationOutputProcessorsArchive object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAutomationOutputProcessorsArchive(automationOutputProcessorIds []string) *AutomationOutputProcessorsArchive {
	this := AutomationOutputProcessorsArchive{}
	this.AutomationOutputProcessorIds = automationOutputProcessorIds
	return &this
}

// NewAutomationOutputProcessorsArchiveWithDefaults instantiates a new AutomationOutputProcessorsArchive object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAutomationOutputProcessorsArchiveWithDefaults() *AutomationOutputProcessorsArchive {
	this := AutomationOutputProcessorsArchive{}
	return &this
}

// GetAutomationOutputProcessorIds returns the AutomationOutputProcessorIds field value
func (o *AutomationOutputProcessorsArchive) GetAutomationOutputProcessorIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.AutomationOutputProcessorIds
}

// GetAutomationOutputProcessorIdsOk returns a tuple with the AutomationOutputProcessorIds field value
// and a boolean to check if the value has been set.
func (o *AutomationOutputProcessorsArchive) GetAutomationOutputProcessorIdsOk() ([]string, bool) {
	if o == nil {
    return nil, false
	}
	return o.AutomationOutputProcessorIds, true
}

// SetAutomationOutputProcessorIds sets field value
func (o *AutomationOutputProcessorsArchive) SetAutomationOutputProcessorIds(v []string) {
	o.AutomationOutputProcessorIds = v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *AutomationOutputProcessorsArchive) GetReason() string {
	if o == nil || isNil(o.Reason) {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutomationOutputProcessorsArchive) GetReasonOk() (*string, bool) {
	if o == nil || isNil(o.Reason) {
    return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *AutomationOutputProcessorsArchive) HasReason() bool {
	if o != nil && !isNil(o.Reason) {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *AutomationOutputProcessorsArchive) SetReason(v string) {
	o.Reason = &v
}

func (o AutomationOutputProcessorsArchive) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["automationOutputProcessorIds"] = o.AutomationOutputProcessorIds
	}
	if !isNil(o.Reason) {
		toSerialize["reason"] = o.Reason
	}
	return json.Marshal(toSerialize)
}

type NullableAutomationOutputProcessorsArchive struct {
	value *AutomationOutputProcessorsArchive
	isSet bool
}

func (v NullableAutomationOutputProcessorsArchive) Get() *AutomationOutputProcessorsArchive {
	return v.value
}

func (v *NullableAutomationOutputProcessorsArchive) Set(val *AutomationOutputProcessorsArchive) {
	v.value = val
	v.isSet = true
}

func (v NullableAutomationOutputProcessorsArchive) IsSet() bool {
	return v.isSet
}

func (v *NullableAutomationOutputProcessorsArchive) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutomationOutputProcessorsArchive(val *AutomationOutputProcessorsArchive) *NullableAutomationOutputProcessorsArchive {
	return &NullableAutomationOutputProcessorsArchive{value: val, isSet: true}
}

func (v NullableAutomationOutputProcessorsArchive) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutomationOutputProcessorsArchive) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


