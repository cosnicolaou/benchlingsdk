/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// PrintLabels struct for PrintLabels
type PrintLabels struct {
	// List of IDs of containers that will have labels printed (one label will be printed per container). 
	ContainerIds []string `json:"containerIds"`
	// ID of label template to use (same template will be used for all labels printed). 
	LabelTemplateId string `json:"labelTemplateId"`
	// ID of printer to use (same printer will be used for all labels printed). 
	PrinterId string `json:"printerId"`
}

// NewPrintLabels instantiates a new PrintLabels object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrintLabels(containerIds []string, labelTemplateId string, printerId string) *PrintLabels {
	this := PrintLabels{}
	this.ContainerIds = containerIds
	this.LabelTemplateId = labelTemplateId
	this.PrinterId = printerId
	return &this
}

// NewPrintLabelsWithDefaults instantiates a new PrintLabels object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrintLabelsWithDefaults() *PrintLabels {
	this := PrintLabels{}
	return &this
}

// GetContainerIds returns the ContainerIds field value
func (o *PrintLabels) GetContainerIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ContainerIds
}

// GetContainerIdsOk returns a tuple with the ContainerIds field value
// and a boolean to check if the value has been set.
func (o *PrintLabels) GetContainerIdsOk() ([]string, bool) {
	if o == nil {
    return nil, false
	}
	return o.ContainerIds, true
}

// SetContainerIds sets field value
func (o *PrintLabels) SetContainerIds(v []string) {
	o.ContainerIds = v
}

// GetLabelTemplateId returns the LabelTemplateId field value
func (o *PrintLabels) GetLabelTemplateId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LabelTemplateId
}

// GetLabelTemplateIdOk returns a tuple with the LabelTemplateId field value
// and a boolean to check if the value has been set.
func (o *PrintLabels) GetLabelTemplateIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.LabelTemplateId, true
}

// SetLabelTemplateId sets field value
func (o *PrintLabels) SetLabelTemplateId(v string) {
	o.LabelTemplateId = v
}

// GetPrinterId returns the PrinterId field value
func (o *PrintLabels) GetPrinterId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PrinterId
}

// GetPrinterIdOk returns a tuple with the PrinterId field value
// and a boolean to check if the value has been set.
func (o *PrintLabels) GetPrinterIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.PrinterId, true
}

// SetPrinterId sets field value
func (o *PrintLabels) SetPrinterId(v string) {
	o.PrinterId = v
}

func (o PrintLabels) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["containerIds"] = o.ContainerIds
	}
	if true {
		toSerialize["labelTemplateId"] = o.LabelTemplateId
	}
	if true {
		toSerialize["printerId"] = o.PrinterId
	}
	return json.Marshal(toSerialize)
}

type NullablePrintLabels struct {
	value *PrintLabels
	isSet bool
}

func (v NullablePrintLabels) Get() *PrintLabels {
	return v.value
}

func (v *NullablePrintLabels) Set(val *PrintLabels) {
	v.value = val
	v.isSet = true
}

func (v NullablePrintLabels) IsSet() bool {
	return v.isSet
}

func (v *NullablePrintLabels) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrintLabels(val *PrintLabels) *NullablePrintLabels {
	return &NullablePrintLabels{value: val, isSet: true}
}

func (v NullablePrintLabels) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrintLabels) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


