/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// BoxesArchivalChange IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of boxes along with any IDs of containers that were archived / unarchived. 
type BoxesArchivalChange struct {
	BoxIds []string `json:"boxIds,omitempty"`
	ContainerIds []string `json:"containerIds,omitempty"`
}

// NewBoxesArchivalChange instantiates a new BoxesArchivalChange object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBoxesArchivalChange() *BoxesArchivalChange {
	this := BoxesArchivalChange{}
	return &this
}

// NewBoxesArchivalChangeWithDefaults instantiates a new BoxesArchivalChange object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBoxesArchivalChangeWithDefaults() *BoxesArchivalChange {
	this := BoxesArchivalChange{}
	return &this
}

// GetBoxIds returns the BoxIds field value if set, zero value otherwise.
func (o *BoxesArchivalChange) GetBoxIds() []string {
	if o == nil || isNil(o.BoxIds) {
		var ret []string
		return ret
	}
	return o.BoxIds
}

// GetBoxIdsOk returns a tuple with the BoxIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BoxesArchivalChange) GetBoxIdsOk() ([]string, bool) {
	if o == nil || isNil(o.BoxIds) {
    return nil, false
	}
	return o.BoxIds, true
}

// HasBoxIds returns a boolean if a field has been set.
func (o *BoxesArchivalChange) HasBoxIds() bool {
	if o != nil && !isNil(o.BoxIds) {
		return true
	}

	return false
}

// SetBoxIds gets a reference to the given []string and assigns it to the BoxIds field.
func (o *BoxesArchivalChange) SetBoxIds(v []string) {
	o.BoxIds = v
}

// GetContainerIds returns the ContainerIds field value if set, zero value otherwise.
func (o *BoxesArchivalChange) GetContainerIds() []string {
	if o == nil || isNil(o.ContainerIds) {
		var ret []string
		return ret
	}
	return o.ContainerIds
}

// GetContainerIdsOk returns a tuple with the ContainerIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BoxesArchivalChange) GetContainerIdsOk() ([]string, bool) {
	if o == nil || isNil(o.ContainerIds) {
    return nil, false
	}
	return o.ContainerIds, true
}

// HasContainerIds returns a boolean if a field has been set.
func (o *BoxesArchivalChange) HasContainerIds() bool {
	if o != nil && !isNil(o.ContainerIds) {
		return true
	}

	return false
}

// SetContainerIds gets a reference to the given []string and assigns it to the ContainerIds field.
func (o *BoxesArchivalChange) SetContainerIds(v []string) {
	o.ContainerIds = v
}

func (o BoxesArchivalChange) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.BoxIds) {
		toSerialize["boxIds"] = o.BoxIds
	}
	if !isNil(o.ContainerIds) {
		toSerialize["containerIds"] = o.ContainerIds
	}
	return json.Marshal(toSerialize)
}

type NullableBoxesArchivalChange struct {
	value *BoxesArchivalChange
	isSet bool
}

func (v NullableBoxesArchivalChange) Get() *BoxesArchivalChange {
	return v.value
}

func (v *NullableBoxesArchivalChange) Set(val *BoxesArchivalChange) {
	v.value = val
	v.isSet = true
}

func (v NullableBoxesArchivalChange) IsSet() bool {
	return v.isSet
}

func (v *NullableBoxesArchivalChange) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBoxesArchivalChange(val *BoxesArchivalChange) *NullableBoxesArchivalChange {
	return &NullableBoxesArchivalChange{value: val, isSet: true}
}

func (v NullableBoxesArchivalChange) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBoxesArchivalChange) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


