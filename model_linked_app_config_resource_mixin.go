/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// LinkedAppConfigResourceMixin struct for LinkedAppConfigResourceMixin
type LinkedAppConfigResourceMixin struct {
	LinkedResource NullableLinkedAppConfigResourceMixinLinkedResource `json:"linkedResource,omitempty"`
}

// NewLinkedAppConfigResourceMixin instantiates a new LinkedAppConfigResourceMixin object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinkedAppConfigResourceMixin() *LinkedAppConfigResourceMixin {
	this := LinkedAppConfigResourceMixin{}
	return &this
}

// NewLinkedAppConfigResourceMixinWithDefaults instantiates a new LinkedAppConfigResourceMixin object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinkedAppConfigResourceMixinWithDefaults() *LinkedAppConfigResourceMixin {
	this := LinkedAppConfigResourceMixin{}
	return &this
}

// GetLinkedResource returns the LinkedResource field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LinkedAppConfigResourceMixin) GetLinkedResource() LinkedAppConfigResourceMixinLinkedResource {
	if o == nil || isNil(o.LinkedResource.Get()) {
		var ret LinkedAppConfigResourceMixinLinkedResource
		return ret
	}
	return *o.LinkedResource.Get()
}

// GetLinkedResourceOk returns a tuple with the LinkedResource field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LinkedAppConfigResourceMixin) GetLinkedResourceOk() (*LinkedAppConfigResourceMixinLinkedResource, bool) {
	if o == nil {
    return nil, false
	}
	return o.LinkedResource.Get(), o.LinkedResource.IsSet()
}

// HasLinkedResource returns a boolean if a field has been set.
func (o *LinkedAppConfigResourceMixin) HasLinkedResource() bool {
	if o != nil && o.LinkedResource.IsSet() {
		return true
	}

	return false
}

// SetLinkedResource gets a reference to the given NullableLinkedAppConfigResourceMixinLinkedResource and assigns it to the LinkedResource field.
func (o *LinkedAppConfigResourceMixin) SetLinkedResource(v LinkedAppConfigResourceMixinLinkedResource) {
	o.LinkedResource.Set(&v)
}
// SetLinkedResourceNil sets the value for LinkedResource to be an explicit nil
func (o *LinkedAppConfigResourceMixin) SetLinkedResourceNil() {
	o.LinkedResource.Set(nil)
}

// UnsetLinkedResource ensures that no value is present for LinkedResource, not even an explicit nil
func (o *LinkedAppConfigResourceMixin) UnsetLinkedResource() {
	o.LinkedResource.Unset()
}

func (o LinkedAppConfigResourceMixin) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LinkedResource.IsSet() {
		toSerialize["linkedResource"] = o.LinkedResource.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableLinkedAppConfigResourceMixin struct {
	value *LinkedAppConfigResourceMixin
	isSet bool
}

func (v NullableLinkedAppConfigResourceMixin) Get() *LinkedAppConfigResourceMixin {
	return v.value
}

func (v *NullableLinkedAppConfigResourceMixin) Set(val *LinkedAppConfigResourceMixin) {
	v.value = val
	v.isSet = true
}

func (v NullableLinkedAppConfigResourceMixin) IsSet() bool {
	return v.isSet
}

func (v *NullableLinkedAppConfigResourceMixin) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinkedAppConfigResourceMixin(val *LinkedAppConfigResourceMixin) *NullableLinkedAppConfigResourceMixin {
	return &NullableLinkedAppConfigResourceMixin{value: val, isSet: true}
}

func (v NullableLinkedAppConfigResourceMixin) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinkedAppConfigResourceMixin) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


