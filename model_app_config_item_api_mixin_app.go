/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// AppConfigItemApiMixinApp struct for AppConfigItemApiMixinApp
type AppConfigItemApiMixinApp struct {
	// The id of the Benchling app to which this configuration item belongs
	Id *string `json:"id,omitempty"`
}

// NewAppConfigItemApiMixinApp instantiates a new AppConfigItemApiMixinApp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppConfigItemApiMixinApp() *AppConfigItemApiMixinApp {
	this := AppConfigItemApiMixinApp{}
	return &this
}

// NewAppConfigItemApiMixinAppWithDefaults instantiates a new AppConfigItemApiMixinApp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppConfigItemApiMixinAppWithDefaults() *AppConfigItemApiMixinApp {
	this := AppConfigItemApiMixinApp{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AppConfigItemApiMixinApp) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppConfigItemApiMixinApp) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AppConfigItemApiMixinApp) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AppConfigItemApiMixinApp) SetId(v string) {
	o.Id = &v
}

func (o AppConfigItemApiMixinApp) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	return json.Marshal(toSerialize)
}

type NullableAppConfigItemApiMixinApp struct {
	value *AppConfigItemApiMixinApp
	isSet bool
}

func (v NullableAppConfigItemApiMixinApp) Get() *AppConfigItemApiMixinApp {
	return v.value
}

func (v *NullableAppConfigItemApiMixinApp) Set(val *AppConfigItemApiMixinApp) {
	v.value = val
	v.isSet = true
}

func (v NullableAppConfigItemApiMixinApp) IsSet() bool {
	return v.isSet
}

func (v *NullableAppConfigItemApiMixinApp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppConfigItemApiMixinApp(val *AppConfigItemApiMixinApp) *NullableAppConfigItemApiMixinApp {
	return &NullableAppConfigItemApiMixinApp{value: val, isSet: true}
}

func (v NullableAppConfigItemApiMixinApp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppConfigItemApiMixinApp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


