/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// RequestSampleWithEntity struct for RequestSampleWithEntity
type RequestSampleWithEntity struct {
	ContainerId *string `json:"containerId,omitempty"`
	EntityId string `json:"entityId"`
}

// NewRequestSampleWithEntity instantiates a new RequestSampleWithEntity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequestSampleWithEntity(entityId string) *RequestSampleWithEntity {
	this := RequestSampleWithEntity{}
	this.EntityId = entityId
	return &this
}

// NewRequestSampleWithEntityWithDefaults instantiates a new RequestSampleWithEntity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequestSampleWithEntityWithDefaults() *RequestSampleWithEntity {
	this := RequestSampleWithEntity{}
	return &this
}

// GetContainerId returns the ContainerId field value if set, zero value otherwise.
func (o *RequestSampleWithEntity) GetContainerId() string {
	if o == nil || isNil(o.ContainerId) {
		var ret string
		return ret
	}
	return *o.ContainerId
}

// GetContainerIdOk returns a tuple with the ContainerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestSampleWithEntity) GetContainerIdOk() (*string, bool) {
	if o == nil || isNil(o.ContainerId) {
    return nil, false
	}
	return o.ContainerId, true
}

// HasContainerId returns a boolean if a field has been set.
func (o *RequestSampleWithEntity) HasContainerId() bool {
	if o != nil && !isNil(o.ContainerId) {
		return true
	}

	return false
}

// SetContainerId gets a reference to the given string and assigns it to the ContainerId field.
func (o *RequestSampleWithEntity) SetContainerId(v string) {
	o.ContainerId = &v
}

// GetEntityId returns the EntityId field value
func (o *RequestSampleWithEntity) GetEntityId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntityId
}

// GetEntityIdOk returns a tuple with the EntityId field value
// and a boolean to check if the value has been set.
func (o *RequestSampleWithEntity) GetEntityIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.EntityId, true
}

// SetEntityId sets field value
func (o *RequestSampleWithEntity) SetEntityId(v string) {
	o.EntityId = v
}

func (o RequestSampleWithEntity) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ContainerId) {
		toSerialize["containerId"] = o.ContainerId
	}
	if true {
		toSerialize["entityId"] = o.EntityId
	}
	return json.Marshal(toSerialize)
}

type NullableRequestSampleWithEntity struct {
	value *RequestSampleWithEntity
	isSet bool
}

func (v NullableRequestSampleWithEntity) Get() *RequestSampleWithEntity {
	return v.value
}

func (v *NullableRequestSampleWithEntity) Set(val *RequestSampleWithEntity) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestSampleWithEntity) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestSampleWithEntity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestSampleWithEntity(val *RequestSampleWithEntity) *NullableRequestSampleWithEntity {
	return &NullableRequestSampleWithEntity{value: val, isSet: true}
}

func (v NullableRequestSampleWithEntity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestSampleWithEntity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


