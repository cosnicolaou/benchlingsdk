/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// MultipleContainersTransfersList struct for MultipleContainersTransfersList
type MultipleContainersTransfersList struct {
	Transfers []MultipleContainersTransfer `json:"transfers"`
}

// NewMultipleContainersTransfersList instantiates a new MultipleContainersTransfersList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMultipleContainersTransfersList(transfers []MultipleContainersTransfer) *MultipleContainersTransfersList {
	this := MultipleContainersTransfersList{}
	this.Transfers = transfers
	return &this
}

// NewMultipleContainersTransfersListWithDefaults instantiates a new MultipleContainersTransfersList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMultipleContainersTransfersListWithDefaults() *MultipleContainersTransfersList {
	this := MultipleContainersTransfersList{}
	return &this
}

// GetTransfers returns the Transfers field value
func (o *MultipleContainersTransfersList) GetTransfers() []MultipleContainersTransfer {
	if o == nil {
		var ret []MultipleContainersTransfer
		return ret
	}

	return o.Transfers
}

// GetTransfersOk returns a tuple with the Transfers field value
// and a boolean to check if the value has been set.
func (o *MultipleContainersTransfersList) GetTransfersOk() ([]MultipleContainersTransfer, bool) {
	if o == nil {
    return nil, false
	}
	return o.Transfers, true
}

// SetTransfers sets field value
func (o *MultipleContainersTransfersList) SetTransfers(v []MultipleContainersTransfer) {
	o.Transfers = v
}

func (o MultipleContainersTransfersList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["transfers"] = o.Transfers
	}
	return json.Marshal(toSerialize)
}

type NullableMultipleContainersTransfersList struct {
	value *MultipleContainersTransfersList
	isSet bool
}

func (v NullableMultipleContainersTransfersList) Get() *MultipleContainersTransfersList {
	return v.value
}

func (v *NullableMultipleContainersTransfersList) Set(val *MultipleContainersTransfersList) {
	v.value = val
	v.isSet = true
}

func (v NullableMultipleContainersTransfersList) IsSet() bool {
	return v.isSet
}

func (v *NullableMultipleContainersTransfersList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMultipleContainersTransfersList(val *MultipleContainersTransfersList) *NullableMultipleContainersTransfersList {
	return &NullableMultipleContainersTransfersList{value: val, isSet: true}
}

func (v NullableMultipleContainersTransfersList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMultipleContainersTransfersList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


