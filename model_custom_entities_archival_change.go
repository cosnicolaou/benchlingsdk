/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// CustomEntitiesArchivalChange IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of custom entities along with any IDs of batches that were archived (or unarchived). 
type CustomEntitiesArchivalChange struct {
	BatchIds []string `json:"batchIds,omitempty"`
	CustomEntityIds []string `json:"customEntityIds,omitempty"`
}

// NewCustomEntitiesArchivalChange instantiates a new CustomEntitiesArchivalChange object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomEntitiesArchivalChange() *CustomEntitiesArchivalChange {
	this := CustomEntitiesArchivalChange{}
	return &this
}

// NewCustomEntitiesArchivalChangeWithDefaults instantiates a new CustomEntitiesArchivalChange object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomEntitiesArchivalChangeWithDefaults() *CustomEntitiesArchivalChange {
	this := CustomEntitiesArchivalChange{}
	return &this
}

// GetBatchIds returns the BatchIds field value if set, zero value otherwise.
func (o *CustomEntitiesArchivalChange) GetBatchIds() []string {
	if o == nil || isNil(o.BatchIds) {
		var ret []string
		return ret
	}
	return o.BatchIds
}

// GetBatchIdsOk returns a tuple with the BatchIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomEntitiesArchivalChange) GetBatchIdsOk() ([]string, bool) {
	if o == nil || isNil(o.BatchIds) {
    return nil, false
	}
	return o.BatchIds, true
}

// HasBatchIds returns a boolean if a field has been set.
func (o *CustomEntitiesArchivalChange) HasBatchIds() bool {
	if o != nil && !isNil(o.BatchIds) {
		return true
	}

	return false
}

// SetBatchIds gets a reference to the given []string and assigns it to the BatchIds field.
func (o *CustomEntitiesArchivalChange) SetBatchIds(v []string) {
	o.BatchIds = v
}

// GetCustomEntityIds returns the CustomEntityIds field value if set, zero value otherwise.
func (o *CustomEntitiesArchivalChange) GetCustomEntityIds() []string {
	if o == nil || isNil(o.CustomEntityIds) {
		var ret []string
		return ret
	}
	return o.CustomEntityIds
}

// GetCustomEntityIdsOk returns a tuple with the CustomEntityIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomEntitiesArchivalChange) GetCustomEntityIdsOk() ([]string, bool) {
	if o == nil || isNil(o.CustomEntityIds) {
    return nil, false
	}
	return o.CustomEntityIds, true
}

// HasCustomEntityIds returns a boolean if a field has been set.
func (o *CustomEntitiesArchivalChange) HasCustomEntityIds() bool {
	if o != nil && !isNil(o.CustomEntityIds) {
		return true
	}

	return false
}

// SetCustomEntityIds gets a reference to the given []string and assigns it to the CustomEntityIds field.
func (o *CustomEntitiesArchivalChange) SetCustomEntityIds(v []string) {
	o.CustomEntityIds = v
}

func (o CustomEntitiesArchivalChange) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.BatchIds) {
		toSerialize["batchIds"] = o.BatchIds
	}
	if !isNil(o.CustomEntityIds) {
		toSerialize["customEntityIds"] = o.CustomEntityIds
	}
	return json.Marshal(toSerialize)
}

type NullableCustomEntitiesArchivalChange struct {
	value *CustomEntitiesArchivalChange
	isSet bool
}

func (v NullableCustomEntitiesArchivalChange) Get() *CustomEntitiesArchivalChange {
	return v.value
}

func (v *NullableCustomEntitiesArchivalChange) Set(val *CustomEntitiesArchivalChange) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomEntitiesArchivalChange) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomEntitiesArchivalChange) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomEntitiesArchivalChange(val *CustomEntitiesArchivalChange) *NullableCustomEntitiesArchivalChange {
	return &NullableCustomEntitiesArchivalChange{value: val, isSet: true}
}

func (v NullableCustomEntitiesArchivalChange) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomEntitiesArchivalChange) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


