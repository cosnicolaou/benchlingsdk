/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// WorkflowTaskExecutionOrigin The context into which a task was executed
type WorkflowTaskExecutionOrigin struct {
	EntryId NullableString `json:"entryId,omitempty"`
	OriginModalUuid NullableString `json:"originModalUuid,omitempty"`
	Type *string `json:"type,omitempty"`
}

// NewWorkflowTaskExecutionOrigin instantiates a new WorkflowTaskExecutionOrigin object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowTaskExecutionOrigin() *WorkflowTaskExecutionOrigin {
	this := WorkflowTaskExecutionOrigin{}
	return &this
}

// NewWorkflowTaskExecutionOriginWithDefaults instantiates a new WorkflowTaskExecutionOrigin object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowTaskExecutionOriginWithDefaults() *WorkflowTaskExecutionOrigin {
	this := WorkflowTaskExecutionOrigin{}
	return &this
}

// GetEntryId returns the EntryId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkflowTaskExecutionOrigin) GetEntryId() string {
	if o == nil || isNil(o.EntryId.Get()) {
		var ret string
		return ret
	}
	return *o.EntryId.Get()
}

// GetEntryIdOk returns a tuple with the EntryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkflowTaskExecutionOrigin) GetEntryIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.EntryId.Get(), o.EntryId.IsSet()
}

// HasEntryId returns a boolean if a field has been set.
func (o *WorkflowTaskExecutionOrigin) HasEntryId() bool {
	if o != nil && o.EntryId.IsSet() {
		return true
	}

	return false
}

// SetEntryId gets a reference to the given NullableString and assigns it to the EntryId field.
func (o *WorkflowTaskExecutionOrigin) SetEntryId(v string) {
	o.EntryId.Set(&v)
}
// SetEntryIdNil sets the value for EntryId to be an explicit nil
func (o *WorkflowTaskExecutionOrigin) SetEntryIdNil() {
	o.EntryId.Set(nil)
}

// UnsetEntryId ensures that no value is present for EntryId, not even an explicit nil
func (o *WorkflowTaskExecutionOrigin) UnsetEntryId() {
	o.EntryId.Unset()
}

// GetOriginModalUuid returns the OriginModalUuid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkflowTaskExecutionOrigin) GetOriginModalUuid() string {
	if o == nil || isNil(o.OriginModalUuid.Get()) {
		var ret string
		return ret
	}
	return *o.OriginModalUuid.Get()
}

// GetOriginModalUuidOk returns a tuple with the OriginModalUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkflowTaskExecutionOrigin) GetOriginModalUuidOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.OriginModalUuid.Get(), o.OriginModalUuid.IsSet()
}

// HasOriginModalUuid returns a boolean if a field has been set.
func (o *WorkflowTaskExecutionOrigin) HasOriginModalUuid() bool {
	if o != nil && o.OriginModalUuid.IsSet() {
		return true
	}

	return false
}

// SetOriginModalUuid gets a reference to the given NullableString and assigns it to the OriginModalUuid field.
func (o *WorkflowTaskExecutionOrigin) SetOriginModalUuid(v string) {
	o.OriginModalUuid.Set(&v)
}
// SetOriginModalUuidNil sets the value for OriginModalUuid to be an explicit nil
func (o *WorkflowTaskExecutionOrigin) SetOriginModalUuidNil() {
	o.OriginModalUuid.Set(nil)
}

// UnsetOriginModalUuid ensures that no value is present for OriginModalUuid, not even an explicit nil
func (o *WorkflowTaskExecutionOrigin) UnsetOriginModalUuid() {
	o.OriginModalUuid.Unset()
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *WorkflowTaskExecutionOrigin) GetType() string {
	if o == nil || isNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowTaskExecutionOrigin) GetTypeOk() (*string, bool) {
	if o == nil || isNil(o.Type) {
    return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *WorkflowTaskExecutionOrigin) HasType() bool {
	if o != nil && !isNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *WorkflowTaskExecutionOrigin) SetType(v string) {
	o.Type = &v
}

func (o WorkflowTaskExecutionOrigin) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EntryId.IsSet() {
		toSerialize["entryId"] = o.EntryId.Get()
	}
	if o.OriginModalUuid.IsSet() {
		toSerialize["originModalUuid"] = o.OriginModalUuid.Get()
	}
	if !isNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableWorkflowTaskExecutionOrigin struct {
	value *WorkflowTaskExecutionOrigin
	isSet bool
}

func (v NullableWorkflowTaskExecutionOrigin) Get() *WorkflowTaskExecutionOrigin {
	return v.value
}

func (v *NullableWorkflowTaskExecutionOrigin) Set(val *WorkflowTaskExecutionOrigin) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowTaskExecutionOrigin) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowTaskExecutionOrigin) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowTaskExecutionOrigin(val *WorkflowTaskExecutionOrigin) *NullableWorkflowTaskExecutionOrigin {
	return &NullableWorkflowTaskExecutionOrigin{value: val, isSet: true}
}

func (v NullableWorkflowTaskExecutionOrigin) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowTaskExecutionOrigin) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


