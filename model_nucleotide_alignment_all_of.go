/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// NucleotideAlignmentAllOf struct for NucleotideAlignmentAllOf
type NucleotideAlignmentAllOf struct {
	AlignedSequences []AlignedNucleotideSequence `json:"alignedSequences,omitempty"`
}

// NewNucleotideAlignmentAllOf instantiates a new NucleotideAlignmentAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNucleotideAlignmentAllOf() *NucleotideAlignmentAllOf {
	this := NucleotideAlignmentAllOf{}
	return &this
}

// NewNucleotideAlignmentAllOfWithDefaults instantiates a new NucleotideAlignmentAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNucleotideAlignmentAllOfWithDefaults() *NucleotideAlignmentAllOf {
	this := NucleotideAlignmentAllOf{}
	return &this
}

// GetAlignedSequences returns the AlignedSequences field value if set, zero value otherwise.
func (o *NucleotideAlignmentAllOf) GetAlignedSequences() []AlignedNucleotideSequence {
	if o == nil || isNil(o.AlignedSequences) {
		var ret []AlignedNucleotideSequence
		return ret
	}
	return o.AlignedSequences
}

// GetAlignedSequencesOk returns a tuple with the AlignedSequences field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NucleotideAlignmentAllOf) GetAlignedSequencesOk() ([]AlignedNucleotideSequence, bool) {
	if o == nil || isNil(o.AlignedSequences) {
    return nil, false
	}
	return o.AlignedSequences, true
}

// HasAlignedSequences returns a boolean if a field has been set.
func (o *NucleotideAlignmentAllOf) HasAlignedSequences() bool {
	if o != nil && !isNil(o.AlignedSequences) {
		return true
	}

	return false
}

// SetAlignedSequences gets a reference to the given []AlignedNucleotideSequence and assigns it to the AlignedSequences field.
func (o *NucleotideAlignmentAllOf) SetAlignedSequences(v []AlignedNucleotideSequence) {
	o.AlignedSequences = v
}

func (o NucleotideAlignmentAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AlignedSequences) {
		toSerialize["alignedSequences"] = o.AlignedSequences
	}
	return json.Marshal(toSerialize)
}

type NullableNucleotideAlignmentAllOf struct {
	value *NucleotideAlignmentAllOf
	isSet bool
}

func (v NullableNucleotideAlignmentAllOf) Get() *NucleotideAlignmentAllOf {
	return v.value
}

func (v *NullableNucleotideAlignmentAllOf) Set(val *NucleotideAlignmentAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableNucleotideAlignmentAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableNucleotideAlignmentAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNucleotideAlignmentAllOf(val *NucleotideAlignmentAllOf) *NullableNucleotideAlignmentAllOf {
	return &NullableNucleotideAlignmentAllOf{value: val, isSet: true}
}

func (v NullableNucleotideAlignmentAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNucleotideAlignmentAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


