/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// ContainersPaginatedList struct for ContainersPaginatedList
type ContainersPaginatedList struct {
	Containers []Container `json:"containers,omitempty"`
	NextToken *string `json:"nextToken,omitempty"`
}

// NewContainersPaginatedList instantiates a new ContainersPaginatedList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContainersPaginatedList() *ContainersPaginatedList {
	this := ContainersPaginatedList{}
	return &this
}

// NewContainersPaginatedListWithDefaults instantiates a new ContainersPaginatedList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContainersPaginatedListWithDefaults() *ContainersPaginatedList {
	this := ContainersPaginatedList{}
	return &this
}

// GetContainers returns the Containers field value if set, zero value otherwise.
func (o *ContainersPaginatedList) GetContainers() []Container {
	if o == nil || isNil(o.Containers) {
		var ret []Container
		return ret
	}
	return o.Containers
}

// GetContainersOk returns a tuple with the Containers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainersPaginatedList) GetContainersOk() ([]Container, bool) {
	if o == nil || isNil(o.Containers) {
    return nil, false
	}
	return o.Containers, true
}

// HasContainers returns a boolean if a field has been set.
func (o *ContainersPaginatedList) HasContainers() bool {
	if o != nil && !isNil(o.Containers) {
		return true
	}

	return false
}

// SetContainers gets a reference to the given []Container and assigns it to the Containers field.
func (o *ContainersPaginatedList) SetContainers(v []Container) {
	o.Containers = v
}

// GetNextToken returns the NextToken field value if set, zero value otherwise.
func (o *ContainersPaginatedList) GetNextToken() string {
	if o == nil || isNil(o.NextToken) {
		var ret string
		return ret
	}
	return *o.NextToken
}

// GetNextTokenOk returns a tuple with the NextToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainersPaginatedList) GetNextTokenOk() (*string, bool) {
	if o == nil || isNil(o.NextToken) {
    return nil, false
	}
	return o.NextToken, true
}

// HasNextToken returns a boolean if a field has been set.
func (o *ContainersPaginatedList) HasNextToken() bool {
	if o != nil && !isNil(o.NextToken) {
		return true
	}

	return false
}

// SetNextToken gets a reference to the given string and assigns it to the NextToken field.
func (o *ContainersPaginatedList) SetNextToken(v string) {
	o.NextToken = &v
}

func (o ContainersPaginatedList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Containers) {
		toSerialize["containers"] = o.Containers
	}
	if !isNil(o.NextToken) {
		toSerialize["nextToken"] = o.NextToken
	}
	return json.Marshal(toSerialize)
}

type NullableContainersPaginatedList struct {
	value *ContainersPaginatedList
	isSet bool
}

func (v NullableContainersPaginatedList) Get() *ContainersPaginatedList {
	return v.value
}

func (v *NullableContainersPaginatedList) Set(val *ContainersPaginatedList) {
	v.value = val
	v.isSet = true
}

func (v NullableContainersPaginatedList) IsSet() bool {
	return v.isSet
}

func (v *NullableContainersPaginatedList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainersPaginatedList(val *ContainersPaginatedList) *NullableContainersPaginatedList {
	return &NullableContainersPaginatedList{value: val, isSet: true}
}

func (v NullableContainersPaginatedList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainersPaginatedList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


