/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// WorkflowTaskStatusLifecycleTransition struct for WorkflowTaskStatusLifecycleTransition
type WorkflowTaskStatusLifecycleTransition struct {
	From *WorkflowTaskStatus `json:"from,omitempty"`
	To *WorkflowTaskStatus `json:"to,omitempty"`
}

// NewWorkflowTaskStatusLifecycleTransition instantiates a new WorkflowTaskStatusLifecycleTransition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowTaskStatusLifecycleTransition() *WorkflowTaskStatusLifecycleTransition {
	this := WorkflowTaskStatusLifecycleTransition{}
	return &this
}

// NewWorkflowTaskStatusLifecycleTransitionWithDefaults instantiates a new WorkflowTaskStatusLifecycleTransition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowTaskStatusLifecycleTransitionWithDefaults() *WorkflowTaskStatusLifecycleTransition {
	this := WorkflowTaskStatusLifecycleTransition{}
	return &this
}

// GetFrom returns the From field value if set, zero value otherwise.
func (o *WorkflowTaskStatusLifecycleTransition) GetFrom() WorkflowTaskStatus {
	if o == nil || isNil(o.From) {
		var ret WorkflowTaskStatus
		return ret
	}
	return *o.From
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowTaskStatusLifecycleTransition) GetFromOk() (*WorkflowTaskStatus, bool) {
	if o == nil || isNil(o.From) {
    return nil, false
	}
	return o.From, true
}

// HasFrom returns a boolean if a field has been set.
func (o *WorkflowTaskStatusLifecycleTransition) HasFrom() bool {
	if o != nil && !isNil(o.From) {
		return true
	}

	return false
}

// SetFrom gets a reference to the given WorkflowTaskStatus and assigns it to the From field.
func (o *WorkflowTaskStatusLifecycleTransition) SetFrom(v WorkflowTaskStatus) {
	o.From = &v
}

// GetTo returns the To field value if set, zero value otherwise.
func (o *WorkflowTaskStatusLifecycleTransition) GetTo() WorkflowTaskStatus {
	if o == nil || isNil(o.To) {
		var ret WorkflowTaskStatus
		return ret
	}
	return *o.To
}

// GetToOk returns a tuple with the To field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowTaskStatusLifecycleTransition) GetToOk() (*WorkflowTaskStatus, bool) {
	if o == nil || isNil(o.To) {
    return nil, false
	}
	return o.To, true
}

// HasTo returns a boolean if a field has been set.
func (o *WorkflowTaskStatusLifecycleTransition) HasTo() bool {
	if o != nil && !isNil(o.To) {
		return true
	}

	return false
}

// SetTo gets a reference to the given WorkflowTaskStatus and assigns it to the To field.
func (o *WorkflowTaskStatusLifecycleTransition) SetTo(v WorkflowTaskStatus) {
	o.To = &v
}

func (o WorkflowTaskStatusLifecycleTransition) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.From) {
		toSerialize["from"] = o.From
	}
	if !isNil(o.To) {
		toSerialize["to"] = o.To
	}
	return json.Marshal(toSerialize)
}

type NullableWorkflowTaskStatusLifecycleTransition struct {
	value *WorkflowTaskStatusLifecycleTransition
	isSet bool
}

func (v NullableWorkflowTaskStatusLifecycleTransition) Get() *WorkflowTaskStatusLifecycleTransition {
	return v.value
}

func (v *NullableWorkflowTaskStatusLifecycleTransition) Set(val *WorkflowTaskStatusLifecycleTransition) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowTaskStatusLifecycleTransition) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowTaskStatusLifecycleTransition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowTaskStatusLifecycleTransition(val *WorkflowTaskStatusLifecycleTransition) *NullableWorkflowTaskStatusLifecycleTransition {
	return &NullableWorkflowTaskStatusLifecycleTransition{value: val, isSet: true}
}

func (v NullableWorkflowTaskStatusLifecycleTransition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowTaskStatusLifecycleTransition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


