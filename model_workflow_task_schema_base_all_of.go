/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// WorkflowTaskSchemaBaseAllOf struct for WorkflowTaskSchemaBaseAllOf
type WorkflowTaskSchemaBaseAllOf struct {
	// Whether or not tasks of this schema can be created with a non-null assignee.
	CanSetAssigneeOnTaskCreation *bool `json:"canSetAssigneeOnTaskCreation,omitempty"`
	// ID of the default folder for creating workflow task groups
	DefaultCreationFolderId NullableString `json:"defaultCreationFolderId,omitempty"`
	// ID of the default folder for workflow task execution entries
	DefaultEntryExecutionFolderId NullableString `json:"defaultEntryExecutionFolderId,omitempty"`
	DefaultResponsibleTeam NullableTeamSummary `json:"defaultResponsibleTeam,omitempty"`
	// The ID of the template of the entries tasks of this schema will be executed into.
	EntryTemplateId NullableString `json:"entryTemplateId,omitempty"`
	// The prefix for the displayId of tasks of this schema.
	Prefix *string `json:"prefix,omitempty"`
	StatusLifecycle *WorkflowTaskStatusLifecycle `json:"statusLifecycle,omitempty"`
	// The prefix for the displayId of task groups containing tasks of this schema
	TaskGroupPrefix *string `json:"taskGroupPrefix,omitempty"`
	WorkflowOutputSchema NullableWorkflowOutputSchema `json:"workflowOutputSchema,omitempty"`
}

// NewWorkflowTaskSchemaBaseAllOf instantiates a new WorkflowTaskSchemaBaseAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowTaskSchemaBaseAllOf() *WorkflowTaskSchemaBaseAllOf {
	this := WorkflowTaskSchemaBaseAllOf{}
	return &this
}

// NewWorkflowTaskSchemaBaseAllOfWithDefaults instantiates a new WorkflowTaskSchemaBaseAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowTaskSchemaBaseAllOfWithDefaults() *WorkflowTaskSchemaBaseAllOf {
	this := WorkflowTaskSchemaBaseAllOf{}
	return &this
}

// GetCanSetAssigneeOnTaskCreation returns the CanSetAssigneeOnTaskCreation field value if set, zero value otherwise.
func (o *WorkflowTaskSchemaBaseAllOf) GetCanSetAssigneeOnTaskCreation() bool {
	if o == nil || isNil(o.CanSetAssigneeOnTaskCreation) {
		var ret bool
		return ret
	}
	return *o.CanSetAssigneeOnTaskCreation
}

// GetCanSetAssigneeOnTaskCreationOk returns a tuple with the CanSetAssigneeOnTaskCreation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowTaskSchemaBaseAllOf) GetCanSetAssigneeOnTaskCreationOk() (*bool, bool) {
	if o == nil || isNil(o.CanSetAssigneeOnTaskCreation) {
    return nil, false
	}
	return o.CanSetAssigneeOnTaskCreation, true
}

// HasCanSetAssigneeOnTaskCreation returns a boolean if a field has been set.
func (o *WorkflowTaskSchemaBaseAllOf) HasCanSetAssigneeOnTaskCreation() bool {
	if o != nil && !isNil(o.CanSetAssigneeOnTaskCreation) {
		return true
	}

	return false
}

// SetCanSetAssigneeOnTaskCreation gets a reference to the given bool and assigns it to the CanSetAssigneeOnTaskCreation field.
func (o *WorkflowTaskSchemaBaseAllOf) SetCanSetAssigneeOnTaskCreation(v bool) {
	o.CanSetAssigneeOnTaskCreation = &v
}

// GetDefaultCreationFolderId returns the DefaultCreationFolderId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkflowTaskSchemaBaseAllOf) GetDefaultCreationFolderId() string {
	if o == nil || isNil(o.DefaultCreationFolderId.Get()) {
		var ret string
		return ret
	}
	return *o.DefaultCreationFolderId.Get()
}

// GetDefaultCreationFolderIdOk returns a tuple with the DefaultCreationFolderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkflowTaskSchemaBaseAllOf) GetDefaultCreationFolderIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.DefaultCreationFolderId.Get(), o.DefaultCreationFolderId.IsSet()
}

// HasDefaultCreationFolderId returns a boolean if a field has been set.
func (o *WorkflowTaskSchemaBaseAllOf) HasDefaultCreationFolderId() bool {
	if o != nil && o.DefaultCreationFolderId.IsSet() {
		return true
	}

	return false
}

// SetDefaultCreationFolderId gets a reference to the given NullableString and assigns it to the DefaultCreationFolderId field.
func (o *WorkflowTaskSchemaBaseAllOf) SetDefaultCreationFolderId(v string) {
	o.DefaultCreationFolderId.Set(&v)
}
// SetDefaultCreationFolderIdNil sets the value for DefaultCreationFolderId to be an explicit nil
func (o *WorkflowTaskSchemaBaseAllOf) SetDefaultCreationFolderIdNil() {
	o.DefaultCreationFolderId.Set(nil)
}

// UnsetDefaultCreationFolderId ensures that no value is present for DefaultCreationFolderId, not even an explicit nil
func (o *WorkflowTaskSchemaBaseAllOf) UnsetDefaultCreationFolderId() {
	o.DefaultCreationFolderId.Unset()
}

// GetDefaultEntryExecutionFolderId returns the DefaultEntryExecutionFolderId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkflowTaskSchemaBaseAllOf) GetDefaultEntryExecutionFolderId() string {
	if o == nil || isNil(o.DefaultEntryExecutionFolderId.Get()) {
		var ret string
		return ret
	}
	return *o.DefaultEntryExecutionFolderId.Get()
}

// GetDefaultEntryExecutionFolderIdOk returns a tuple with the DefaultEntryExecutionFolderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkflowTaskSchemaBaseAllOf) GetDefaultEntryExecutionFolderIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.DefaultEntryExecutionFolderId.Get(), o.DefaultEntryExecutionFolderId.IsSet()
}

// HasDefaultEntryExecutionFolderId returns a boolean if a field has been set.
func (o *WorkflowTaskSchemaBaseAllOf) HasDefaultEntryExecutionFolderId() bool {
	if o != nil && o.DefaultEntryExecutionFolderId.IsSet() {
		return true
	}

	return false
}

// SetDefaultEntryExecutionFolderId gets a reference to the given NullableString and assigns it to the DefaultEntryExecutionFolderId field.
func (o *WorkflowTaskSchemaBaseAllOf) SetDefaultEntryExecutionFolderId(v string) {
	o.DefaultEntryExecutionFolderId.Set(&v)
}
// SetDefaultEntryExecutionFolderIdNil sets the value for DefaultEntryExecutionFolderId to be an explicit nil
func (o *WorkflowTaskSchemaBaseAllOf) SetDefaultEntryExecutionFolderIdNil() {
	o.DefaultEntryExecutionFolderId.Set(nil)
}

// UnsetDefaultEntryExecutionFolderId ensures that no value is present for DefaultEntryExecutionFolderId, not even an explicit nil
func (o *WorkflowTaskSchemaBaseAllOf) UnsetDefaultEntryExecutionFolderId() {
	o.DefaultEntryExecutionFolderId.Unset()
}

// GetDefaultResponsibleTeam returns the DefaultResponsibleTeam field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkflowTaskSchemaBaseAllOf) GetDefaultResponsibleTeam() TeamSummary {
	if o == nil || isNil(o.DefaultResponsibleTeam.Get()) {
		var ret TeamSummary
		return ret
	}
	return *o.DefaultResponsibleTeam.Get()
}

// GetDefaultResponsibleTeamOk returns a tuple with the DefaultResponsibleTeam field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkflowTaskSchemaBaseAllOf) GetDefaultResponsibleTeamOk() (*TeamSummary, bool) {
	if o == nil {
    return nil, false
	}
	return o.DefaultResponsibleTeam.Get(), o.DefaultResponsibleTeam.IsSet()
}

// HasDefaultResponsibleTeam returns a boolean if a field has been set.
func (o *WorkflowTaskSchemaBaseAllOf) HasDefaultResponsibleTeam() bool {
	if o != nil && o.DefaultResponsibleTeam.IsSet() {
		return true
	}

	return false
}

// SetDefaultResponsibleTeam gets a reference to the given NullableTeamSummary and assigns it to the DefaultResponsibleTeam field.
func (o *WorkflowTaskSchemaBaseAllOf) SetDefaultResponsibleTeam(v TeamSummary) {
	o.DefaultResponsibleTeam.Set(&v)
}
// SetDefaultResponsibleTeamNil sets the value for DefaultResponsibleTeam to be an explicit nil
func (o *WorkflowTaskSchemaBaseAllOf) SetDefaultResponsibleTeamNil() {
	o.DefaultResponsibleTeam.Set(nil)
}

// UnsetDefaultResponsibleTeam ensures that no value is present for DefaultResponsibleTeam, not even an explicit nil
func (o *WorkflowTaskSchemaBaseAllOf) UnsetDefaultResponsibleTeam() {
	o.DefaultResponsibleTeam.Unset()
}

// GetEntryTemplateId returns the EntryTemplateId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkflowTaskSchemaBaseAllOf) GetEntryTemplateId() string {
	if o == nil || isNil(o.EntryTemplateId.Get()) {
		var ret string
		return ret
	}
	return *o.EntryTemplateId.Get()
}

// GetEntryTemplateIdOk returns a tuple with the EntryTemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkflowTaskSchemaBaseAllOf) GetEntryTemplateIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.EntryTemplateId.Get(), o.EntryTemplateId.IsSet()
}

// HasEntryTemplateId returns a boolean if a field has been set.
func (o *WorkflowTaskSchemaBaseAllOf) HasEntryTemplateId() bool {
	if o != nil && o.EntryTemplateId.IsSet() {
		return true
	}

	return false
}

// SetEntryTemplateId gets a reference to the given NullableString and assigns it to the EntryTemplateId field.
func (o *WorkflowTaskSchemaBaseAllOf) SetEntryTemplateId(v string) {
	o.EntryTemplateId.Set(&v)
}
// SetEntryTemplateIdNil sets the value for EntryTemplateId to be an explicit nil
func (o *WorkflowTaskSchemaBaseAllOf) SetEntryTemplateIdNil() {
	o.EntryTemplateId.Set(nil)
}

// UnsetEntryTemplateId ensures that no value is present for EntryTemplateId, not even an explicit nil
func (o *WorkflowTaskSchemaBaseAllOf) UnsetEntryTemplateId() {
	o.EntryTemplateId.Unset()
}

// GetPrefix returns the Prefix field value if set, zero value otherwise.
func (o *WorkflowTaskSchemaBaseAllOf) GetPrefix() string {
	if o == nil || isNil(o.Prefix) {
		var ret string
		return ret
	}
	return *o.Prefix
}

// GetPrefixOk returns a tuple with the Prefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowTaskSchemaBaseAllOf) GetPrefixOk() (*string, bool) {
	if o == nil || isNil(o.Prefix) {
    return nil, false
	}
	return o.Prefix, true
}

// HasPrefix returns a boolean if a field has been set.
func (o *WorkflowTaskSchemaBaseAllOf) HasPrefix() bool {
	if o != nil && !isNil(o.Prefix) {
		return true
	}

	return false
}

// SetPrefix gets a reference to the given string and assigns it to the Prefix field.
func (o *WorkflowTaskSchemaBaseAllOf) SetPrefix(v string) {
	o.Prefix = &v
}

// GetStatusLifecycle returns the StatusLifecycle field value if set, zero value otherwise.
func (o *WorkflowTaskSchemaBaseAllOf) GetStatusLifecycle() WorkflowTaskStatusLifecycle {
	if o == nil || isNil(o.StatusLifecycle) {
		var ret WorkflowTaskStatusLifecycle
		return ret
	}
	return *o.StatusLifecycle
}

// GetStatusLifecycleOk returns a tuple with the StatusLifecycle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowTaskSchemaBaseAllOf) GetStatusLifecycleOk() (*WorkflowTaskStatusLifecycle, bool) {
	if o == nil || isNil(o.StatusLifecycle) {
    return nil, false
	}
	return o.StatusLifecycle, true
}

// HasStatusLifecycle returns a boolean if a field has been set.
func (o *WorkflowTaskSchemaBaseAllOf) HasStatusLifecycle() bool {
	if o != nil && !isNil(o.StatusLifecycle) {
		return true
	}

	return false
}

// SetStatusLifecycle gets a reference to the given WorkflowTaskStatusLifecycle and assigns it to the StatusLifecycle field.
func (o *WorkflowTaskSchemaBaseAllOf) SetStatusLifecycle(v WorkflowTaskStatusLifecycle) {
	o.StatusLifecycle = &v
}

// GetTaskGroupPrefix returns the TaskGroupPrefix field value if set, zero value otherwise.
func (o *WorkflowTaskSchemaBaseAllOf) GetTaskGroupPrefix() string {
	if o == nil || isNil(o.TaskGroupPrefix) {
		var ret string
		return ret
	}
	return *o.TaskGroupPrefix
}

// GetTaskGroupPrefixOk returns a tuple with the TaskGroupPrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowTaskSchemaBaseAllOf) GetTaskGroupPrefixOk() (*string, bool) {
	if o == nil || isNil(o.TaskGroupPrefix) {
    return nil, false
	}
	return o.TaskGroupPrefix, true
}

// HasTaskGroupPrefix returns a boolean if a field has been set.
func (o *WorkflowTaskSchemaBaseAllOf) HasTaskGroupPrefix() bool {
	if o != nil && !isNil(o.TaskGroupPrefix) {
		return true
	}

	return false
}

// SetTaskGroupPrefix gets a reference to the given string and assigns it to the TaskGroupPrefix field.
func (o *WorkflowTaskSchemaBaseAllOf) SetTaskGroupPrefix(v string) {
	o.TaskGroupPrefix = &v
}

// GetWorkflowOutputSchema returns the WorkflowOutputSchema field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkflowTaskSchemaBaseAllOf) GetWorkflowOutputSchema() WorkflowOutputSchema {
	if o == nil || isNil(o.WorkflowOutputSchema.Get()) {
		var ret WorkflowOutputSchema
		return ret
	}
	return *o.WorkflowOutputSchema.Get()
}

// GetWorkflowOutputSchemaOk returns a tuple with the WorkflowOutputSchema field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkflowTaskSchemaBaseAllOf) GetWorkflowOutputSchemaOk() (*WorkflowOutputSchema, bool) {
	if o == nil {
    return nil, false
	}
	return o.WorkflowOutputSchema.Get(), o.WorkflowOutputSchema.IsSet()
}

// HasWorkflowOutputSchema returns a boolean if a field has been set.
func (o *WorkflowTaskSchemaBaseAllOf) HasWorkflowOutputSchema() bool {
	if o != nil && o.WorkflowOutputSchema.IsSet() {
		return true
	}

	return false
}

// SetWorkflowOutputSchema gets a reference to the given NullableWorkflowOutputSchema and assigns it to the WorkflowOutputSchema field.
func (o *WorkflowTaskSchemaBaseAllOf) SetWorkflowOutputSchema(v WorkflowOutputSchema) {
	o.WorkflowOutputSchema.Set(&v)
}
// SetWorkflowOutputSchemaNil sets the value for WorkflowOutputSchema to be an explicit nil
func (o *WorkflowTaskSchemaBaseAllOf) SetWorkflowOutputSchemaNil() {
	o.WorkflowOutputSchema.Set(nil)
}

// UnsetWorkflowOutputSchema ensures that no value is present for WorkflowOutputSchema, not even an explicit nil
func (o *WorkflowTaskSchemaBaseAllOf) UnsetWorkflowOutputSchema() {
	o.WorkflowOutputSchema.Unset()
}

func (o WorkflowTaskSchemaBaseAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.CanSetAssigneeOnTaskCreation) {
		toSerialize["canSetAssigneeOnTaskCreation"] = o.CanSetAssigneeOnTaskCreation
	}
	if o.DefaultCreationFolderId.IsSet() {
		toSerialize["defaultCreationFolderId"] = o.DefaultCreationFolderId.Get()
	}
	if o.DefaultEntryExecutionFolderId.IsSet() {
		toSerialize["defaultEntryExecutionFolderId"] = o.DefaultEntryExecutionFolderId.Get()
	}
	if o.DefaultResponsibleTeam.IsSet() {
		toSerialize["defaultResponsibleTeam"] = o.DefaultResponsibleTeam.Get()
	}
	if o.EntryTemplateId.IsSet() {
		toSerialize["entryTemplateId"] = o.EntryTemplateId.Get()
	}
	if !isNil(o.Prefix) {
		toSerialize["prefix"] = o.Prefix
	}
	if !isNil(o.StatusLifecycle) {
		toSerialize["statusLifecycle"] = o.StatusLifecycle
	}
	if !isNil(o.TaskGroupPrefix) {
		toSerialize["taskGroupPrefix"] = o.TaskGroupPrefix
	}
	if o.WorkflowOutputSchema.IsSet() {
		toSerialize["workflowOutputSchema"] = o.WorkflowOutputSchema.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableWorkflowTaskSchemaBaseAllOf struct {
	value *WorkflowTaskSchemaBaseAllOf
	isSet bool
}

func (v NullableWorkflowTaskSchemaBaseAllOf) Get() *WorkflowTaskSchemaBaseAllOf {
	return v.value
}

func (v *NullableWorkflowTaskSchemaBaseAllOf) Set(val *WorkflowTaskSchemaBaseAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowTaskSchemaBaseAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowTaskSchemaBaseAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowTaskSchemaBaseAllOf(val *WorkflowTaskSchemaBaseAllOf) *NullableWorkflowTaskSchemaBaseAllOf {
	return &NullableWorkflowTaskSchemaBaseAllOf{value: val, isSet: true}
}

func (v NullableWorkflowTaskSchemaBaseAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowTaskSchemaBaseAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


