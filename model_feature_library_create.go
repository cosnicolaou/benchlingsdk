/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// FeatureLibraryCreate Inputs for creating a feature library
type FeatureLibraryCreate struct {
	// The description for the feature library
	Description string `json:"description"`
	// The name of the feature library
	Name string `json:"name"`
	// The organization that will own the feature library. The requesting user must be an administrator of the organization. If unspecified and the organization allows personal ownables, then the requesting user will own the feature library 
	OrganizationId *string `json:"organizationId,omitempty"`
}

// NewFeatureLibraryCreate instantiates a new FeatureLibraryCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFeatureLibraryCreate(description string, name string) *FeatureLibraryCreate {
	this := FeatureLibraryCreate{}
	this.Description = description
	this.Name = name
	return &this
}

// NewFeatureLibraryCreateWithDefaults instantiates a new FeatureLibraryCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFeatureLibraryCreateWithDefaults() *FeatureLibraryCreate {
	this := FeatureLibraryCreate{}
	return &this
}

// GetDescription returns the Description field value
func (o *FeatureLibraryCreate) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *FeatureLibraryCreate) GetDescriptionOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *FeatureLibraryCreate) SetDescription(v string) {
	o.Description = v
}

// GetName returns the Name field value
func (o *FeatureLibraryCreate) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *FeatureLibraryCreate) GetNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *FeatureLibraryCreate) SetName(v string) {
	o.Name = v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *FeatureLibraryCreate) GetOrganizationId() string {
	if o == nil || isNil(o.OrganizationId) {
		var ret string
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeatureLibraryCreate) GetOrganizationIdOk() (*string, bool) {
	if o == nil || isNil(o.OrganizationId) {
    return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *FeatureLibraryCreate) HasOrganizationId() bool {
	if o != nil && !isNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *FeatureLibraryCreate) SetOrganizationId(v string) {
	o.OrganizationId = &v
}

func (o FeatureLibraryCreate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.OrganizationId) {
		toSerialize["organizationId"] = o.OrganizationId
	}
	return json.Marshal(toSerialize)
}

type NullableFeatureLibraryCreate struct {
	value *FeatureLibraryCreate
	isSet bool
}

func (v NullableFeatureLibraryCreate) Get() *FeatureLibraryCreate {
	return v.value
}

func (v *NullableFeatureLibraryCreate) Set(val *FeatureLibraryCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableFeatureLibraryCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableFeatureLibraryCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFeatureLibraryCreate(val *FeatureLibraryCreate) *NullableFeatureLibraryCreate {
	return &NullableFeatureLibraryCreate{value: val, isSet: true}
}

func (v NullableFeatureLibraryCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFeatureLibraryCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


