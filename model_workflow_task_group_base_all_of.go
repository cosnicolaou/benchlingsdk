/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// WorkflowTaskGroupBaseAllOf struct for WorkflowTaskGroupBaseAllOf
type WorkflowTaskGroupBaseAllOf struct {
	CreationOrigin *CreationOrigin `json:"creationOrigin,omitempty"`
	Creator *UserSummary `json:"creator,omitempty"`
	Folder *Folder `json:"folder,omitempty"`
	// The outputs of the workflow task group
	Outputs []WorkflowOutputSummary `json:"outputs,omitempty"`
	ResponsibleTeam NullableTeamSummary `json:"responsibleTeam,omitempty"`
	// The users watching the workflow task group
	Watchers []UserSummary `json:"watchers,omitempty"`
	// URL of the workflow task group
	WebURL *string `json:"webURL,omitempty"`
	WorkflowTaskSchema *WorkflowTaskSchemaSummary `json:"workflowTaskSchema,omitempty"`
	// The input tasks to the workflow task group
	WorkflowTasks []WorkflowTaskSummary `json:"workflowTasks,omitempty"`
}

// NewWorkflowTaskGroupBaseAllOf instantiates a new WorkflowTaskGroupBaseAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowTaskGroupBaseAllOf() *WorkflowTaskGroupBaseAllOf {
	this := WorkflowTaskGroupBaseAllOf{}
	return &this
}

// NewWorkflowTaskGroupBaseAllOfWithDefaults instantiates a new WorkflowTaskGroupBaseAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowTaskGroupBaseAllOfWithDefaults() *WorkflowTaskGroupBaseAllOf {
	this := WorkflowTaskGroupBaseAllOf{}
	return &this
}

// GetCreationOrigin returns the CreationOrigin field value if set, zero value otherwise.
func (o *WorkflowTaskGroupBaseAllOf) GetCreationOrigin() CreationOrigin {
	if o == nil || isNil(o.CreationOrigin) {
		var ret CreationOrigin
		return ret
	}
	return *o.CreationOrigin
}

// GetCreationOriginOk returns a tuple with the CreationOrigin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowTaskGroupBaseAllOf) GetCreationOriginOk() (*CreationOrigin, bool) {
	if o == nil || isNil(o.CreationOrigin) {
    return nil, false
	}
	return o.CreationOrigin, true
}

// HasCreationOrigin returns a boolean if a field has been set.
func (o *WorkflowTaskGroupBaseAllOf) HasCreationOrigin() bool {
	if o != nil && !isNil(o.CreationOrigin) {
		return true
	}

	return false
}

// SetCreationOrigin gets a reference to the given CreationOrigin and assigns it to the CreationOrigin field.
func (o *WorkflowTaskGroupBaseAllOf) SetCreationOrigin(v CreationOrigin) {
	o.CreationOrigin = &v
}

// GetCreator returns the Creator field value if set, zero value otherwise.
func (o *WorkflowTaskGroupBaseAllOf) GetCreator() UserSummary {
	if o == nil || isNil(o.Creator) {
		var ret UserSummary
		return ret
	}
	return *o.Creator
}

// GetCreatorOk returns a tuple with the Creator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowTaskGroupBaseAllOf) GetCreatorOk() (*UserSummary, bool) {
	if o == nil || isNil(o.Creator) {
    return nil, false
	}
	return o.Creator, true
}

// HasCreator returns a boolean if a field has been set.
func (o *WorkflowTaskGroupBaseAllOf) HasCreator() bool {
	if o != nil && !isNil(o.Creator) {
		return true
	}

	return false
}

// SetCreator gets a reference to the given UserSummary and assigns it to the Creator field.
func (o *WorkflowTaskGroupBaseAllOf) SetCreator(v UserSummary) {
	o.Creator = &v
}

// GetFolder returns the Folder field value if set, zero value otherwise.
func (o *WorkflowTaskGroupBaseAllOf) GetFolder() Folder {
	if o == nil || isNil(o.Folder) {
		var ret Folder
		return ret
	}
	return *o.Folder
}

// GetFolderOk returns a tuple with the Folder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowTaskGroupBaseAllOf) GetFolderOk() (*Folder, bool) {
	if o == nil || isNil(o.Folder) {
    return nil, false
	}
	return o.Folder, true
}

// HasFolder returns a boolean if a field has been set.
func (o *WorkflowTaskGroupBaseAllOf) HasFolder() bool {
	if o != nil && !isNil(o.Folder) {
		return true
	}

	return false
}

// SetFolder gets a reference to the given Folder and assigns it to the Folder field.
func (o *WorkflowTaskGroupBaseAllOf) SetFolder(v Folder) {
	o.Folder = &v
}

// GetOutputs returns the Outputs field value if set, zero value otherwise.
func (o *WorkflowTaskGroupBaseAllOf) GetOutputs() []WorkflowOutputSummary {
	if o == nil || isNil(o.Outputs) {
		var ret []WorkflowOutputSummary
		return ret
	}
	return o.Outputs
}

// GetOutputsOk returns a tuple with the Outputs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowTaskGroupBaseAllOf) GetOutputsOk() ([]WorkflowOutputSummary, bool) {
	if o == nil || isNil(o.Outputs) {
    return nil, false
	}
	return o.Outputs, true
}

// HasOutputs returns a boolean if a field has been set.
func (o *WorkflowTaskGroupBaseAllOf) HasOutputs() bool {
	if o != nil && !isNil(o.Outputs) {
		return true
	}

	return false
}

// SetOutputs gets a reference to the given []WorkflowOutputSummary and assigns it to the Outputs field.
func (o *WorkflowTaskGroupBaseAllOf) SetOutputs(v []WorkflowOutputSummary) {
	o.Outputs = v
}

// GetResponsibleTeam returns the ResponsibleTeam field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkflowTaskGroupBaseAllOf) GetResponsibleTeam() TeamSummary {
	if o == nil || isNil(o.ResponsibleTeam.Get()) {
		var ret TeamSummary
		return ret
	}
	return *o.ResponsibleTeam.Get()
}

// GetResponsibleTeamOk returns a tuple with the ResponsibleTeam field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkflowTaskGroupBaseAllOf) GetResponsibleTeamOk() (*TeamSummary, bool) {
	if o == nil {
    return nil, false
	}
	return o.ResponsibleTeam.Get(), o.ResponsibleTeam.IsSet()
}

// HasResponsibleTeam returns a boolean if a field has been set.
func (o *WorkflowTaskGroupBaseAllOf) HasResponsibleTeam() bool {
	if o != nil && o.ResponsibleTeam.IsSet() {
		return true
	}

	return false
}

// SetResponsibleTeam gets a reference to the given NullableTeamSummary and assigns it to the ResponsibleTeam field.
func (o *WorkflowTaskGroupBaseAllOf) SetResponsibleTeam(v TeamSummary) {
	o.ResponsibleTeam.Set(&v)
}
// SetResponsibleTeamNil sets the value for ResponsibleTeam to be an explicit nil
func (o *WorkflowTaskGroupBaseAllOf) SetResponsibleTeamNil() {
	o.ResponsibleTeam.Set(nil)
}

// UnsetResponsibleTeam ensures that no value is present for ResponsibleTeam, not even an explicit nil
func (o *WorkflowTaskGroupBaseAllOf) UnsetResponsibleTeam() {
	o.ResponsibleTeam.Unset()
}

// GetWatchers returns the Watchers field value if set, zero value otherwise.
func (o *WorkflowTaskGroupBaseAllOf) GetWatchers() []UserSummary {
	if o == nil || isNil(o.Watchers) {
		var ret []UserSummary
		return ret
	}
	return o.Watchers
}

// GetWatchersOk returns a tuple with the Watchers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowTaskGroupBaseAllOf) GetWatchersOk() ([]UserSummary, bool) {
	if o == nil || isNil(o.Watchers) {
    return nil, false
	}
	return o.Watchers, true
}

// HasWatchers returns a boolean if a field has been set.
func (o *WorkflowTaskGroupBaseAllOf) HasWatchers() bool {
	if o != nil && !isNil(o.Watchers) {
		return true
	}

	return false
}

// SetWatchers gets a reference to the given []UserSummary and assigns it to the Watchers field.
func (o *WorkflowTaskGroupBaseAllOf) SetWatchers(v []UserSummary) {
	o.Watchers = v
}

// GetWebURL returns the WebURL field value if set, zero value otherwise.
func (o *WorkflowTaskGroupBaseAllOf) GetWebURL() string {
	if o == nil || isNil(o.WebURL) {
		var ret string
		return ret
	}
	return *o.WebURL
}

// GetWebURLOk returns a tuple with the WebURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowTaskGroupBaseAllOf) GetWebURLOk() (*string, bool) {
	if o == nil || isNil(o.WebURL) {
    return nil, false
	}
	return o.WebURL, true
}

// HasWebURL returns a boolean if a field has been set.
func (o *WorkflowTaskGroupBaseAllOf) HasWebURL() bool {
	if o != nil && !isNil(o.WebURL) {
		return true
	}

	return false
}

// SetWebURL gets a reference to the given string and assigns it to the WebURL field.
func (o *WorkflowTaskGroupBaseAllOf) SetWebURL(v string) {
	o.WebURL = &v
}

// GetWorkflowTaskSchema returns the WorkflowTaskSchema field value if set, zero value otherwise.
func (o *WorkflowTaskGroupBaseAllOf) GetWorkflowTaskSchema() WorkflowTaskSchemaSummary {
	if o == nil || isNil(o.WorkflowTaskSchema) {
		var ret WorkflowTaskSchemaSummary
		return ret
	}
	return *o.WorkflowTaskSchema
}

// GetWorkflowTaskSchemaOk returns a tuple with the WorkflowTaskSchema field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowTaskGroupBaseAllOf) GetWorkflowTaskSchemaOk() (*WorkflowTaskSchemaSummary, bool) {
	if o == nil || isNil(o.WorkflowTaskSchema) {
    return nil, false
	}
	return o.WorkflowTaskSchema, true
}

// HasWorkflowTaskSchema returns a boolean if a field has been set.
func (o *WorkflowTaskGroupBaseAllOf) HasWorkflowTaskSchema() bool {
	if o != nil && !isNil(o.WorkflowTaskSchema) {
		return true
	}

	return false
}

// SetWorkflowTaskSchema gets a reference to the given WorkflowTaskSchemaSummary and assigns it to the WorkflowTaskSchema field.
func (o *WorkflowTaskGroupBaseAllOf) SetWorkflowTaskSchema(v WorkflowTaskSchemaSummary) {
	o.WorkflowTaskSchema = &v
}

// GetWorkflowTasks returns the WorkflowTasks field value if set, zero value otherwise.
func (o *WorkflowTaskGroupBaseAllOf) GetWorkflowTasks() []WorkflowTaskSummary {
	if o == nil || isNil(o.WorkflowTasks) {
		var ret []WorkflowTaskSummary
		return ret
	}
	return o.WorkflowTasks
}

// GetWorkflowTasksOk returns a tuple with the WorkflowTasks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowTaskGroupBaseAllOf) GetWorkflowTasksOk() ([]WorkflowTaskSummary, bool) {
	if o == nil || isNil(o.WorkflowTasks) {
    return nil, false
	}
	return o.WorkflowTasks, true
}

// HasWorkflowTasks returns a boolean if a field has been set.
func (o *WorkflowTaskGroupBaseAllOf) HasWorkflowTasks() bool {
	if o != nil && !isNil(o.WorkflowTasks) {
		return true
	}

	return false
}

// SetWorkflowTasks gets a reference to the given []WorkflowTaskSummary and assigns it to the WorkflowTasks field.
func (o *WorkflowTaskGroupBaseAllOf) SetWorkflowTasks(v []WorkflowTaskSummary) {
	o.WorkflowTasks = v
}

func (o WorkflowTaskGroupBaseAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.CreationOrigin) {
		toSerialize["creationOrigin"] = o.CreationOrigin
	}
	if !isNil(o.Creator) {
		toSerialize["creator"] = o.Creator
	}
	if !isNil(o.Folder) {
		toSerialize["folder"] = o.Folder
	}
	if !isNil(o.Outputs) {
		toSerialize["outputs"] = o.Outputs
	}
	if o.ResponsibleTeam.IsSet() {
		toSerialize["responsibleTeam"] = o.ResponsibleTeam.Get()
	}
	if !isNil(o.Watchers) {
		toSerialize["watchers"] = o.Watchers
	}
	if !isNil(o.WebURL) {
		toSerialize["webURL"] = o.WebURL
	}
	if !isNil(o.WorkflowTaskSchema) {
		toSerialize["workflowTaskSchema"] = o.WorkflowTaskSchema
	}
	if !isNil(o.WorkflowTasks) {
		toSerialize["workflowTasks"] = o.WorkflowTasks
	}
	return json.Marshal(toSerialize)
}

type NullableWorkflowTaskGroupBaseAllOf struct {
	value *WorkflowTaskGroupBaseAllOf
	isSet bool
}

func (v NullableWorkflowTaskGroupBaseAllOf) Get() *WorkflowTaskGroupBaseAllOf {
	return v.value
}

func (v *NullableWorkflowTaskGroupBaseAllOf) Set(val *WorkflowTaskGroupBaseAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowTaskGroupBaseAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowTaskGroupBaseAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowTaskGroupBaseAllOf(val *WorkflowTaskGroupBaseAllOf) *NullableWorkflowTaskGroupBaseAllOf {
	return &NullableWorkflowTaskGroupBaseAllOf{value: val, isSet: true}
}

func (v NullableWorkflowTaskGroupBaseAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowTaskGroupBaseAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


