/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// DnaOligosUnarchive The request body for unarchiving DNA Oligos. 
type DnaOligosUnarchive struct {
	DnaOligoIds []string `json:"dnaOligoIds"`
}

// NewDnaOligosUnarchive instantiates a new DnaOligosUnarchive object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDnaOligosUnarchive(dnaOligoIds []string) *DnaOligosUnarchive {
	this := DnaOligosUnarchive{}
	this.DnaOligoIds = dnaOligoIds
	return &this
}

// NewDnaOligosUnarchiveWithDefaults instantiates a new DnaOligosUnarchive object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDnaOligosUnarchiveWithDefaults() *DnaOligosUnarchive {
	this := DnaOligosUnarchive{}
	return &this
}

// GetDnaOligoIds returns the DnaOligoIds field value
func (o *DnaOligosUnarchive) GetDnaOligoIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.DnaOligoIds
}

// GetDnaOligoIdsOk returns a tuple with the DnaOligoIds field value
// and a boolean to check if the value has been set.
func (o *DnaOligosUnarchive) GetDnaOligoIdsOk() ([]string, bool) {
	if o == nil {
    return nil, false
	}
	return o.DnaOligoIds, true
}

// SetDnaOligoIds sets field value
func (o *DnaOligosUnarchive) SetDnaOligoIds(v []string) {
	o.DnaOligoIds = v
}

func (o DnaOligosUnarchive) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["dnaOligoIds"] = o.DnaOligoIds
	}
	return json.Marshal(toSerialize)
}

type NullableDnaOligosUnarchive struct {
	value *DnaOligosUnarchive
	isSet bool
}

func (v NullableDnaOligosUnarchive) Get() *DnaOligosUnarchive {
	return v.value
}

func (v *NullableDnaOligosUnarchive) Set(val *DnaOligosUnarchive) {
	v.value = val
	v.isSet = true
}

func (v NullableDnaOligosUnarchive) IsSet() bool {
	return v.isSet
}

func (v *NullableDnaOligosUnarchive) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDnaOligosUnarchive(val *DnaOligosUnarchive) *NullableDnaOligosUnarchive {
	return &NullableDnaOligosUnarchive{value: val, isSet: true}
}

func (v NullableDnaOligosUnarchive) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDnaOligosUnarchive) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


