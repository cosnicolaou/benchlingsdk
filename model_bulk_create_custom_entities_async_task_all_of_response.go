/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// BulkCreateCustomEntitiesAsyncTaskAllOfResponse struct for BulkCreateCustomEntitiesAsyncTaskAllOfResponse
type BulkCreateCustomEntitiesAsyncTaskAllOfResponse struct {
	CustomEntities []CustomEntity `json:"customEntities,omitempty"`
}

// NewBulkCreateCustomEntitiesAsyncTaskAllOfResponse instantiates a new BulkCreateCustomEntitiesAsyncTaskAllOfResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkCreateCustomEntitiesAsyncTaskAllOfResponse() *BulkCreateCustomEntitiesAsyncTaskAllOfResponse {
	this := BulkCreateCustomEntitiesAsyncTaskAllOfResponse{}
	return &this
}

// NewBulkCreateCustomEntitiesAsyncTaskAllOfResponseWithDefaults instantiates a new BulkCreateCustomEntitiesAsyncTaskAllOfResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkCreateCustomEntitiesAsyncTaskAllOfResponseWithDefaults() *BulkCreateCustomEntitiesAsyncTaskAllOfResponse {
	this := BulkCreateCustomEntitiesAsyncTaskAllOfResponse{}
	return &this
}

// GetCustomEntities returns the CustomEntities field value if set, zero value otherwise.
func (o *BulkCreateCustomEntitiesAsyncTaskAllOfResponse) GetCustomEntities() []CustomEntity {
	if o == nil || isNil(o.CustomEntities) {
		var ret []CustomEntity
		return ret
	}
	return o.CustomEntities
}

// GetCustomEntitiesOk returns a tuple with the CustomEntities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkCreateCustomEntitiesAsyncTaskAllOfResponse) GetCustomEntitiesOk() ([]CustomEntity, bool) {
	if o == nil || isNil(o.CustomEntities) {
    return nil, false
	}
	return o.CustomEntities, true
}

// HasCustomEntities returns a boolean if a field has been set.
func (o *BulkCreateCustomEntitiesAsyncTaskAllOfResponse) HasCustomEntities() bool {
	if o != nil && !isNil(o.CustomEntities) {
		return true
	}

	return false
}

// SetCustomEntities gets a reference to the given []CustomEntity and assigns it to the CustomEntities field.
func (o *BulkCreateCustomEntitiesAsyncTaskAllOfResponse) SetCustomEntities(v []CustomEntity) {
	o.CustomEntities = v
}

func (o BulkCreateCustomEntitiesAsyncTaskAllOfResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.CustomEntities) {
		toSerialize["customEntities"] = o.CustomEntities
	}
	return json.Marshal(toSerialize)
}

type NullableBulkCreateCustomEntitiesAsyncTaskAllOfResponse struct {
	value *BulkCreateCustomEntitiesAsyncTaskAllOfResponse
	isSet bool
}

func (v NullableBulkCreateCustomEntitiesAsyncTaskAllOfResponse) Get() *BulkCreateCustomEntitiesAsyncTaskAllOfResponse {
	return v.value
}

func (v *NullableBulkCreateCustomEntitiesAsyncTaskAllOfResponse) Set(val *BulkCreateCustomEntitiesAsyncTaskAllOfResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkCreateCustomEntitiesAsyncTaskAllOfResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkCreateCustomEntitiesAsyncTaskAllOfResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkCreateCustomEntitiesAsyncTaskAllOfResponse(val *BulkCreateCustomEntitiesAsyncTaskAllOfResponse) *NullableBulkCreateCustomEntitiesAsyncTaskAllOfResponse {
	return &NullableBulkCreateCustomEntitiesAsyncTaskAllOfResponse{value: val, isSet: true}
}

func (v NullableBulkCreateCustomEntitiesAsyncTaskAllOfResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkCreateCustomEntitiesAsyncTaskAllOfResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


