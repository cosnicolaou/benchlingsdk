/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// AaSequencesArchivalChange IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of AA sequences along with any IDs of batches that were archived / unarchived. 
type AaSequencesArchivalChange struct {
	AaSequenceIds []string `json:"aaSequenceIds,omitempty"`
	BatchIds []string `json:"batchIds,omitempty"`
}

// NewAaSequencesArchivalChange instantiates a new AaSequencesArchivalChange object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAaSequencesArchivalChange() *AaSequencesArchivalChange {
	this := AaSequencesArchivalChange{}
	return &this
}

// NewAaSequencesArchivalChangeWithDefaults instantiates a new AaSequencesArchivalChange object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAaSequencesArchivalChangeWithDefaults() *AaSequencesArchivalChange {
	this := AaSequencesArchivalChange{}
	return &this
}

// GetAaSequenceIds returns the AaSequenceIds field value if set, zero value otherwise.
func (o *AaSequencesArchivalChange) GetAaSequenceIds() []string {
	if o == nil || isNil(o.AaSequenceIds) {
		var ret []string
		return ret
	}
	return o.AaSequenceIds
}

// GetAaSequenceIdsOk returns a tuple with the AaSequenceIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AaSequencesArchivalChange) GetAaSequenceIdsOk() ([]string, bool) {
	if o == nil || isNil(o.AaSequenceIds) {
    return nil, false
	}
	return o.AaSequenceIds, true
}

// HasAaSequenceIds returns a boolean if a field has been set.
func (o *AaSequencesArchivalChange) HasAaSequenceIds() bool {
	if o != nil && !isNil(o.AaSequenceIds) {
		return true
	}

	return false
}

// SetAaSequenceIds gets a reference to the given []string and assigns it to the AaSequenceIds field.
func (o *AaSequencesArchivalChange) SetAaSequenceIds(v []string) {
	o.AaSequenceIds = v
}

// GetBatchIds returns the BatchIds field value if set, zero value otherwise.
func (o *AaSequencesArchivalChange) GetBatchIds() []string {
	if o == nil || isNil(o.BatchIds) {
		var ret []string
		return ret
	}
	return o.BatchIds
}

// GetBatchIdsOk returns a tuple with the BatchIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AaSequencesArchivalChange) GetBatchIdsOk() ([]string, bool) {
	if o == nil || isNil(o.BatchIds) {
    return nil, false
	}
	return o.BatchIds, true
}

// HasBatchIds returns a boolean if a field has been set.
func (o *AaSequencesArchivalChange) HasBatchIds() bool {
	if o != nil && !isNil(o.BatchIds) {
		return true
	}

	return false
}

// SetBatchIds gets a reference to the given []string and assigns it to the BatchIds field.
func (o *AaSequencesArchivalChange) SetBatchIds(v []string) {
	o.BatchIds = v
}

func (o AaSequencesArchivalChange) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AaSequenceIds) {
		toSerialize["aaSequenceIds"] = o.AaSequenceIds
	}
	if !isNil(o.BatchIds) {
		toSerialize["batchIds"] = o.BatchIds
	}
	return json.Marshal(toSerialize)
}

type NullableAaSequencesArchivalChange struct {
	value *AaSequencesArchivalChange
	isSet bool
}

func (v NullableAaSequencesArchivalChange) Get() *AaSequencesArchivalChange {
	return v.value
}

func (v *NullableAaSequencesArchivalChange) Set(val *AaSequencesArchivalChange) {
	v.value = val
	v.isSet = true
}

func (v NullableAaSequencesArchivalChange) IsSet() bool {
	return v.isSet
}

func (v *NullableAaSequencesArchivalChange) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAaSequencesArchivalChange(val *AaSequencesArchivalChange) *NullableAaSequencesArchivalChange {
	return &NullableAaSequencesArchivalChange{value: val, isSet: true}
}

func (v NullableAaSequencesArchivalChange) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAaSequencesArchivalChange) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


