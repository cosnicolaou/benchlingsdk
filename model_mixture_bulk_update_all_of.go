/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// MixtureBulkUpdateAllOf struct for MixtureBulkUpdateAllOf
type MixtureBulkUpdateAllOf struct {
	Id string `json:"id"`
}

// NewMixtureBulkUpdateAllOf instantiates a new MixtureBulkUpdateAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMixtureBulkUpdateAllOf(id string) *MixtureBulkUpdateAllOf {
	this := MixtureBulkUpdateAllOf{}
	this.Id = id
	return &this
}

// NewMixtureBulkUpdateAllOfWithDefaults instantiates a new MixtureBulkUpdateAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMixtureBulkUpdateAllOfWithDefaults() *MixtureBulkUpdateAllOf {
	this := MixtureBulkUpdateAllOf{}
	return &this
}

// GetId returns the Id field value
func (o *MixtureBulkUpdateAllOf) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *MixtureBulkUpdateAllOf) GetIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *MixtureBulkUpdateAllOf) SetId(v string) {
	o.Id = v
}

func (o MixtureBulkUpdateAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	return json.Marshal(toSerialize)
}

type NullableMixtureBulkUpdateAllOf struct {
	value *MixtureBulkUpdateAllOf
	isSet bool
}

func (v NullableMixtureBulkUpdateAllOf) Get() *MixtureBulkUpdateAllOf {
	return v.value
}

func (v *NullableMixtureBulkUpdateAllOf) Set(val *MixtureBulkUpdateAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableMixtureBulkUpdateAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableMixtureBulkUpdateAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMixtureBulkUpdateAllOf(val *MixtureBulkUpdateAllOf) *NullableMixtureBulkUpdateAllOf {
	return &NullableMixtureBulkUpdateAllOf{value: val, isSet: true}
}

func (v NullableMixtureBulkUpdateAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMixtureBulkUpdateAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


