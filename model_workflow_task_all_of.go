/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// WorkflowTaskAllOf struct for WorkflowTaskAllOf
type WorkflowTaskAllOf struct {
	// The method by which the task of the workflow is executed
	ExecutionType *string `json:"executionType,omitempty"`
}

// NewWorkflowTaskAllOf instantiates a new WorkflowTaskAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowTaskAllOf() *WorkflowTaskAllOf {
	this := WorkflowTaskAllOf{}
	return &this
}

// NewWorkflowTaskAllOfWithDefaults instantiates a new WorkflowTaskAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowTaskAllOfWithDefaults() *WorkflowTaskAllOf {
	this := WorkflowTaskAllOf{}
	return &this
}

// GetExecutionType returns the ExecutionType field value if set, zero value otherwise.
func (o *WorkflowTaskAllOf) GetExecutionType() string {
	if o == nil || isNil(o.ExecutionType) {
		var ret string
		return ret
	}
	return *o.ExecutionType
}

// GetExecutionTypeOk returns a tuple with the ExecutionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowTaskAllOf) GetExecutionTypeOk() (*string, bool) {
	if o == nil || isNil(o.ExecutionType) {
    return nil, false
	}
	return o.ExecutionType, true
}

// HasExecutionType returns a boolean if a field has been set.
func (o *WorkflowTaskAllOf) HasExecutionType() bool {
	if o != nil && !isNil(o.ExecutionType) {
		return true
	}

	return false
}

// SetExecutionType gets a reference to the given string and assigns it to the ExecutionType field.
func (o *WorkflowTaskAllOf) SetExecutionType(v string) {
	o.ExecutionType = &v
}

func (o WorkflowTaskAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ExecutionType) {
		toSerialize["executionType"] = o.ExecutionType
	}
	return json.Marshal(toSerialize)
}

type NullableWorkflowTaskAllOf struct {
	value *WorkflowTaskAllOf
	isSet bool
}

func (v NullableWorkflowTaskAllOf) Get() *WorkflowTaskAllOf {
	return v.value
}

func (v *NullableWorkflowTaskAllOf) Set(val *WorkflowTaskAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowTaskAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowTaskAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowTaskAllOf(val *WorkflowTaskAllOf) *NullableWorkflowTaskAllOf {
	return &NullableWorkflowTaskAllOf{value: val, isSet: true}
}

func (v NullableWorkflowTaskAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowTaskAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


