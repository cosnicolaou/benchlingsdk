/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// FeatureBulkCreate struct for FeatureBulkCreate
type FeatureBulkCreate struct {
	// The color of the annotations generated by the feature. Must be a valid hex string
	Color *string `json:"color,omitempty"`
	// The id of the feature library the feature belongs to
	FeatureLibraryId string `json:"featureLibraryId"`
	// The type of feature, like gene, promoter, etc. Note: This is an arbitrary string, not an enum 
	FeatureType NullableString `json:"featureType"`
	// The name of the feature
	Name string `json:"name"`
	// The pattern used for matching during auto-annotation.
	Pattern string `json:"pattern"`
	// The match type of the feature. Used to determine how auto-annotate matches are made.
	MatchType string `json:"matchType"`
}

// NewFeatureBulkCreate instantiates a new FeatureBulkCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFeatureBulkCreate(featureLibraryId string, featureType NullableString, name string, pattern string, matchType string) *FeatureBulkCreate {
	this := FeatureBulkCreate{}
	this.FeatureLibraryId = featureLibraryId
	this.FeatureType = featureType
	this.Name = name
	this.Pattern = pattern
	this.MatchType = matchType
	return &this
}

// NewFeatureBulkCreateWithDefaults instantiates a new FeatureBulkCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFeatureBulkCreateWithDefaults() *FeatureBulkCreate {
	this := FeatureBulkCreate{}
	return &this
}

// GetColor returns the Color field value if set, zero value otherwise.
func (o *FeatureBulkCreate) GetColor() string {
	if o == nil || isNil(o.Color) {
		var ret string
		return ret
	}
	return *o.Color
}

// GetColorOk returns a tuple with the Color field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeatureBulkCreate) GetColorOk() (*string, bool) {
	if o == nil || isNil(o.Color) {
    return nil, false
	}
	return o.Color, true
}

// HasColor returns a boolean if a field has been set.
func (o *FeatureBulkCreate) HasColor() bool {
	if o != nil && !isNil(o.Color) {
		return true
	}

	return false
}

// SetColor gets a reference to the given string and assigns it to the Color field.
func (o *FeatureBulkCreate) SetColor(v string) {
	o.Color = &v
}

// GetFeatureLibraryId returns the FeatureLibraryId field value
func (o *FeatureBulkCreate) GetFeatureLibraryId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FeatureLibraryId
}

// GetFeatureLibraryIdOk returns a tuple with the FeatureLibraryId field value
// and a boolean to check if the value has been set.
func (o *FeatureBulkCreate) GetFeatureLibraryIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.FeatureLibraryId, true
}

// SetFeatureLibraryId sets field value
func (o *FeatureBulkCreate) SetFeatureLibraryId(v string) {
	o.FeatureLibraryId = v
}

// GetFeatureType returns the FeatureType field value
// If the value is explicit nil, the zero value for string will be returned
func (o *FeatureBulkCreate) GetFeatureType() string {
	if o == nil || o.FeatureType.Get() == nil {
		var ret string
		return ret
	}

	return *o.FeatureType.Get()
}

// GetFeatureTypeOk returns a tuple with the FeatureType field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FeatureBulkCreate) GetFeatureTypeOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.FeatureType.Get(), o.FeatureType.IsSet()
}

// SetFeatureType sets field value
func (o *FeatureBulkCreate) SetFeatureType(v string) {
	o.FeatureType.Set(&v)
}

// GetName returns the Name field value
func (o *FeatureBulkCreate) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *FeatureBulkCreate) GetNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *FeatureBulkCreate) SetName(v string) {
	o.Name = v
}

// GetPattern returns the Pattern field value
func (o *FeatureBulkCreate) GetPattern() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Pattern
}

// GetPatternOk returns a tuple with the Pattern field value
// and a boolean to check if the value has been set.
func (o *FeatureBulkCreate) GetPatternOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Pattern, true
}

// SetPattern sets field value
func (o *FeatureBulkCreate) SetPattern(v string) {
	o.Pattern = v
}

// GetMatchType returns the MatchType field value
func (o *FeatureBulkCreate) GetMatchType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MatchType
}

// GetMatchTypeOk returns a tuple with the MatchType field value
// and a boolean to check if the value has been set.
func (o *FeatureBulkCreate) GetMatchTypeOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.MatchType, true
}

// SetMatchType sets field value
func (o *FeatureBulkCreate) SetMatchType(v string) {
	o.MatchType = v
}

func (o FeatureBulkCreate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Color) {
		toSerialize["color"] = o.Color
	}
	if true {
		toSerialize["featureLibraryId"] = o.FeatureLibraryId
	}
	if true {
		toSerialize["featureType"] = o.FeatureType.Get()
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["pattern"] = o.Pattern
	}
	if true {
		toSerialize["matchType"] = o.MatchType
	}
	return json.Marshal(toSerialize)
}

type NullableFeatureBulkCreate struct {
	value *FeatureBulkCreate
	isSet bool
}

func (v NullableFeatureBulkCreate) Get() *FeatureBulkCreate {
	return v.value
}

func (v *NullableFeatureBulkCreate) Set(val *FeatureBulkCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableFeatureBulkCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableFeatureBulkCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFeatureBulkCreate(val *FeatureBulkCreate) *NullableFeatureBulkCreate {
	return &NullableFeatureBulkCreate{value: val, isSet: true}
}

func (v NullableFeatureBulkCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFeatureBulkCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


