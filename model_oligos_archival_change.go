/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// OligosArchivalChange IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of Oligos along with any IDs of batches that were archived / unarchived. 
type OligosArchivalChange struct {
	BatchIds []string `json:"batchIds,omitempty"`
	OligoIds []string `json:"oligoIds,omitempty"`
}

// NewOligosArchivalChange instantiates a new OligosArchivalChange object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOligosArchivalChange() *OligosArchivalChange {
	this := OligosArchivalChange{}
	return &this
}

// NewOligosArchivalChangeWithDefaults instantiates a new OligosArchivalChange object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOligosArchivalChangeWithDefaults() *OligosArchivalChange {
	this := OligosArchivalChange{}
	return &this
}

// GetBatchIds returns the BatchIds field value if set, zero value otherwise.
func (o *OligosArchivalChange) GetBatchIds() []string {
	if o == nil || isNil(o.BatchIds) {
		var ret []string
		return ret
	}
	return o.BatchIds
}

// GetBatchIdsOk returns a tuple with the BatchIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OligosArchivalChange) GetBatchIdsOk() ([]string, bool) {
	if o == nil || isNil(o.BatchIds) {
    return nil, false
	}
	return o.BatchIds, true
}

// HasBatchIds returns a boolean if a field has been set.
func (o *OligosArchivalChange) HasBatchIds() bool {
	if o != nil && !isNil(o.BatchIds) {
		return true
	}

	return false
}

// SetBatchIds gets a reference to the given []string and assigns it to the BatchIds field.
func (o *OligosArchivalChange) SetBatchIds(v []string) {
	o.BatchIds = v
}

// GetOligoIds returns the OligoIds field value if set, zero value otherwise.
func (o *OligosArchivalChange) GetOligoIds() []string {
	if o == nil || isNil(o.OligoIds) {
		var ret []string
		return ret
	}
	return o.OligoIds
}

// GetOligoIdsOk returns a tuple with the OligoIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OligosArchivalChange) GetOligoIdsOk() ([]string, bool) {
	if o == nil || isNil(o.OligoIds) {
    return nil, false
	}
	return o.OligoIds, true
}

// HasOligoIds returns a boolean if a field has been set.
func (o *OligosArchivalChange) HasOligoIds() bool {
	if o != nil && !isNil(o.OligoIds) {
		return true
	}

	return false
}

// SetOligoIds gets a reference to the given []string and assigns it to the OligoIds field.
func (o *OligosArchivalChange) SetOligoIds(v []string) {
	o.OligoIds = v
}

func (o OligosArchivalChange) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.BatchIds) {
		toSerialize["batchIds"] = o.BatchIds
	}
	if !isNil(o.OligoIds) {
		toSerialize["oligoIds"] = o.OligoIds
	}
	return json.Marshal(toSerialize)
}

type NullableOligosArchivalChange struct {
	value *OligosArchivalChange
	isSet bool
}

func (v NullableOligosArchivalChange) Get() *OligosArchivalChange {
	return v.value
}

func (v *NullableOligosArchivalChange) Set(val *OligosArchivalChange) {
	v.value = val
	v.isSet = true
}

func (v NullableOligosArchivalChange) IsSet() bool {
	return v.isSet
}

func (v *NullableOligosArchivalChange) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOligosArchivalChange(val *OligosArchivalChange) *NullableOligosArchivalChange {
	return &NullableOligosArchivalChange{value: val, isSet: true}
}

func (v NullableOligosArchivalChange) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOligosArchivalChange) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


