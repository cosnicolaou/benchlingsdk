/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// DropdownOptionsArchivalChange IDs of all items that were archived or unarchived. 
type DropdownOptionsArchivalChange struct {
	DropdownOptionIds []string `json:"dropdownOptionIds,omitempty"`
}

// NewDropdownOptionsArchivalChange instantiates a new DropdownOptionsArchivalChange object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDropdownOptionsArchivalChange() *DropdownOptionsArchivalChange {
	this := DropdownOptionsArchivalChange{}
	return &this
}

// NewDropdownOptionsArchivalChangeWithDefaults instantiates a new DropdownOptionsArchivalChange object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDropdownOptionsArchivalChangeWithDefaults() *DropdownOptionsArchivalChange {
	this := DropdownOptionsArchivalChange{}
	return &this
}

// GetDropdownOptionIds returns the DropdownOptionIds field value if set, zero value otherwise.
func (o *DropdownOptionsArchivalChange) GetDropdownOptionIds() []string {
	if o == nil || isNil(o.DropdownOptionIds) {
		var ret []string
		return ret
	}
	return o.DropdownOptionIds
}

// GetDropdownOptionIdsOk returns a tuple with the DropdownOptionIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DropdownOptionsArchivalChange) GetDropdownOptionIdsOk() ([]string, bool) {
	if o == nil || isNil(o.DropdownOptionIds) {
    return nil, false
	}
	return o.DropdownOptionIds, true
}

// HasDropdownOptionIds returns a boolean if a field has been set.
func (o *DropdownOptionsArchivalChange) HasDropdownOptionIds() bool {
	if o != nil && !isNil(o.DropdownOptionIds) {
		return true
	}

	return false
}

// SetDropdownOptionIds gets a reference to the given []string and assigns it to the DropdownOptionIds field.
func (o *DropdownOptionsArchivalChange) SetDropdownOptionIds(v []string) {
	o.DropdownOptionIds = v
}

func (o DropdownOptionsArchivalChange) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.DropdownOptionIds) {
		toSerialize["dropdownOptionIds"] = o.DropdownOptionIds
	}
	return json.Marshal(toSerialize)
}

type NullableDropdownOptionsArchivalChange struct {
	value *DropdownOptionsArchivalChange
	isSet bool
}

func (v NullableDropdownOptionsArchivalChange) Get() *DropdownOptionsArchivalChange {
	return v.value
}

func (v *NullableDropdownOptionsArchivalChange) Set(val *DropdownOptionsArchivalChange) {
	v.value = val
	v.isSet = true
}

func (v NullableDropdownOptionsArchivalChange) IsSet() bool {
	return v.isSet
}

func (v *NullableDropdownOptionsArchivalChange) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDropdownOptionsArchivalChange(val *DropdownOptionsArchivalChange) *NullableDropdownOptionsArchivalChange {
	return &NullableDropdownOptionsArchivalChange{value: val, isSet: true}
}

func (v NullableDropdownOptionsArchivalChange) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDropdownOptionsArchivalChange) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


