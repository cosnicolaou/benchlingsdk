/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
	"time"
)

// StageEntry A notebook entry used for execution of one or more stage runs in a legacy workflow.
type StageEntry struct {
	// The canonical url of the Stage Entry in the API.
	ApiURL *string `json:"apiURL,omitempty"`
	// Array of UserSummary Resources of the authors of the stage entry. This defaults to the creator but can be manually changed. 
	Authors []UserSummary `json:"authors,omitempty"`
	// DateTime the stage entry was created at
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	Creator *StageEntryCreator `json:"creator,omitempty"`
	CustomFields *map[string]CustomField `json:"customFields,omitempty"`
	// User-friendly ID of the stage entry
	DisplayId *string `json:"displayId,omitempty"`
	Fields *map[string]Field `json:"fields,omitempty"`
	// ID of the folder that contains the stage entry
	FolderId *string `json:"folderId,omitempty"`
	// ID of the stage entry
	Id *string `json:"id,omitempty"`
	// DateTime the stage entry was last modified
	ModifiedAt *string `json:"modifiedAt,omitempty"`
	// Title of the stage entry
	Name *string `json:"name,omitempty"`
	// Review record if set
	ReviewRecord map[string]interface{} `json:"reviewRecord,omitempty"`
	Schema NullableSchemaProperty4 `json:"schema,omitempty"`
	// URL of the stage entry
	WebURL *string `json:"webURL,omitempty"`
	// ID of the parent workflow
	WorkflowId *string `json:"workflowId,omitempty"`
	// ID of the associated workflow stage
	WorkflowStageId *string `json:"workflowStageId,omitempty"`
}

// NewStageEntry instantiates a new StageEntry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStageEntry() *StageEntry {
	this := StageEntry{}
	return &this
}

// NewStageEntryWithDefaults instantiates a new StageEntry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStageEntryWithDefaults() *StageEntry {
	this := StageEntry{}
	return &this
}

// GetApiURL returns the ApiURL field value if set, zero value otherwise.
func (o *StageEntry) GetApiURL() string {
	if o == nil || isNil(o.ApiURL) {
		var ret string
		return ret
	}
	return *o.ApiURL
}

// GetApiURLOk returns a tuple with the ApiURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StageEntry) GetApiURLOk() (*string, bool) {
	if o == nil || isNil(o.ApiURL) {
    return nil, false
	}
	return o.ApiURL, true
}

// HasApiURL returns a boolean if a field has been set.
func (o *StageEntry) HasApiURL() bool {
	if o != nil && !isNil(o.ApiURL) {
		return true
	}

	return false
}

// SetApiURL gets a reference to the given string and assigns it to the ApiURL field.
func (o *StageEntry) SetApiURL(v string) {
	o.ApiURL = &v
}

// GetAuthors returns the Authors field value if set, zero value otherwise.
func (o *StageEntry) GetAuthors() []UserSummary {
	if o == nil || isNil(o.Authors) {
		var ret []UserSummary
		return ret
	}
	return o.Authors
}

// GetAuthorsOk returns a tuple with the Authors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StageEntry) GetAuthorsOk() ([]UserSummary, bool) {
	if o == nil || isNil(o.Authors) {
    return nil, false
	}
	return o.Authors, true
}

// HasAuthors returns a boolean if a field has been set.
func (o *StageEntry) HasAuthors() bool {
	if o != nil && !isNil(o.Authors) {
		return true
	}

	return false
}

// SetAuthors gets a reference to the given []UserSummary and assigns it to the Authors field.
func (o *StageEntry) SetAuthors(v []UserSummary) {
	o.Authors = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *StageEntry) GetCreatedAt() time.Time {
	if o == nil || isNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StageEntry) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.CreatedAt) {
    return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *StageEntry) HasCreatedAt() bool {
	if o != nil && !isNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *StageEntry) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetCreator returns the Creator field value if set, zero value otherwise.
func (o *StageEntry) GetCreator() StageEntryCreator {
	if o == nil || isNil(o.Creator) {
		var ret StageEntryCreator
		return ret
	}
	return *o.Creator
}

// GetCreatorOk returns a tuple with the Creator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StageEntry) GetCreatorOk() (*StageEntryCreator, bool) {
	if o == nil || isNil(o.Creator) {
    return nil, false
	}
	return o.Creator, true
}

// HasCreator returns a boolean if a field has been set.
func (o *StageEntry) HasCreator() bool {
	if o != nil && !isNil(o.Creator) {
		return true
	}

	return false
}

// SetCreator gets a reference to the given StageEntryCreator and assigns it to the Creator field.
func (o *StageEntry) SetCreator(v StageEntryCreator) {
	o.Creator = &v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *StageEntry) GetCustomFields() map[string]CustomField {
	if o == nil || isNil(o.CustomFields) {
		var ret map[string]CustomField
		return ret
	}
	return *o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StageEntry) GetCustomFieldsOk() (*map[string]CustomField, bool) {
	if o == nil || isNil(o.CustomFields) {
    return nil, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *StageEntry) HasCustomFields() bool {
	if o != nil && !isNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]CustomField and assigns it to the CustomFields field.
func (o *StageEntry) SetCustomFields(v map[string]CustomField) {
	o.CustomFields = &v
}

// GetDisplayId returns the DisplayId field value if set, zero value otherwise.
func (o *StageEntry) GetDisplayId() string {
	if o == nil || isNil(o.DisplayId) {
		var ret string
		return ret
	}
	return *o.DisplayId
}

// GetDisplayIdOk returns a tuple with the DisplayId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StageEntry) GetDisplayIdOk() (*string, bool) {
	if o == nil || isNil(o.DisplayId) {
    return nil, false
	}
	return o.DisplayId, true
}

// HasDisplayId returns a boolean if a field has been set.
func (o *StageEntry) HasDisplayId() bool {
	if o != nil && !isNil(o.DisplayId) {
		return true
	}

	return false
}

// SetDisplayId gets a reference to the given string and assigns it to the DisplayId field.
func (o *StageEntry) SetDisplayId(v string) {
	o.DisplayId = &v
}

// GetFields returns the Fields field value if set, zero value otherwise.
func (o *StageEntry) GetFields() map[string]Field {
	if o == nil || isNil(o.Fields) {
		var ret map[string]Field
		return ret
	}
	return *o.Fields
}

// GetFieldsOk returns a tuple with the Fields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StageEntry) GetFieldsOk() (*map[string]Field, bool) {
	if o == nil || isNil(o.Fields) {
    return nil, false
	}
	return o.Fields, true
}

// HasFields returns a boolean if a field has been set.
func (o *StageEntry) HasFields() bool {
	if o != nil && !isNil(o.Fields) {
		return true
	}

	return false
}

// SetFields gets a reference to the given map[string]Field and assigns it to the Fields field.
func (o *StageEntry) SetFields(v map[string]Field) {
	o.Fields = &v
}

// GetFolderId returns the FolderId field value if set, zero value otherwise.
func (o *StageEntry) GetFolderId() string {
	if o == nil || isNil(o.FolderId) {
		var ret string
		return ret
	}
	return *o.FolderId
}

// GetFolderIdOk returns a tuple with the FolderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StageEntry) GetFolderIdOk() (*string, bool) {
	if o == nil || isNil(o.FolderId) {
    return nil, false
	}
	return o.FolderId, true
}

// HasFolderId returns a boolean if a field has been set.
func (o *StageEntry) HasFolderId() bool {
	if o != nil && !isNil(o.FolderId) {
		return true
	}

	return false
}

// SetFolderId gets a reference to the given string and assigns it to the FolderId field.
func (o *StageEntry) SetFolderId(v string) {
	o.FolderId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *StageEntry) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StageEntry) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *StageEntry) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *StageEntry) SetId(v string) {
	o.Id = &v
}

// GetModifiedAt returns the ModifiedAt field value if set, zero value otherwise.
func (o *StageEntry) GetModifiedAt() string {
	if o == nil || isNil(o.ModifiedAt) {
		var ret string
		return ret
	}
	return *o.ModifiedAt
}

// GetModifiedAtOk returns a tuple with the ModifiedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StageEntry) GetModifiedAtOk() (*string, bool) {
	if o == nil || isNil(o.ModifiedAt) {
    return nil, false
	}
	return o.ModifiedAt, true
}

// HasModifiedAt returns a boolean if a field has been set.
func (o *StageEntry) HasModifiedAt() bool {
	if o != nil && !isNil(o.ModifiedAt) {
		return true
	}

	return false
}

// SetModifiedAt gets a reference to the given string and assigns it to the ModifiedAt field.
func (o *StageEntry) SetModifiedAt(v string) {
	o.ModifiedAt = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *StageEntry) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StageEntry) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *StageEntry) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *StageEntry) SetName(v string) {
	o.Name = &v
}

// GetReviewRecord returns the ReviewRecord field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *StageEntry) GetReviewRecord() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.ReviewRecord
}

// GetReviewRecordOk returns a tuple with the ReviewRecord field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StageEntry) GetReviewRecordOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.ReviewRecord) {
    return map[string]interface{}{}, false
	}
	return o.ReviewRecord, true
}

// HasReviewRecord returns a boolean if a field has been set.
func (o *StageEntry) HasReviewRecord() bool {
	if o != nil && isNil(o.ReviewRecord) {
		return true
	}

	return false
}

// SetReviewRecord gets a reference to the given map[string]interface{} and assigns it to the ReviewRecord field.
func (o *StageEntry) SetReviewRecord(v map[string]interface{}) {
	o.ReviewRecord = v
}

// GetSchema returns the Schema field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *StageEntry) GetSchema() SchemaProperty4 {
	if o == nil || isNil(o.Schema.Get()) {
		var ret SchemaProperty4
		return ret
	}
	return *o.Schema.Get()
}

// GetSchemaOk returns a tuple with the Schema field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StageEntry) GetSchemaOk() (*SchemaProperty4, bool) {
	if o == nil {
    return nil, false
	}
	return o.Schema.Get(), o.Schema.IsSet()
}

// HasSchema returns a boolean if a field has been set.
func (o *StageEntry) HasSchema() bool {
	if o != nil && o.Schema.IsSet() {
		return true
	}

	return false
}

// SetSchema gets a reference to the given NullableSchemaProperty4 and assigns it to the Schema field.
func (o *StageEntry) SetSchema(v SchemaProperty4) {
	o.Schema.Set(&v)
}
// SetSchemaNil sets the value for Schema to be an explicit nil
func (o *StageEntry) SetSchemaNil() {
	o.Schema.Set(nil)
}

// UnsetSchema ensures that no value is present for Schema, not even an explicit nil
func (o *StageEntry) UnsetSchema() {
	o.Schema.Unset()
}

// GetWebURL returns the WebURL field value if set, zero value otherwise.
func (o *StageEntry) GetWebURL() string {
	if o == nil || isNil(o.WebURL) {
		var ret string
		return ret
	}
	return *o.WebURL
}

// GetWebURLOk returns a tuple with the WebURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StageEntry) GetWebURLOk() (*string, bool) {
	if o == nil || isNil(o.WebURL) {
    return nil, false
	}
	return o.WebURL, true
}

// HasWebURL returns a boolean if a field has been set.
func (o *StageEntry) HasWebURL() bool {
	if o != nil && !isNil(o.WebURL) {
		return true
	}

	return false
}

// SetWebURL gets a reference to the given string and assigns it to the WebURL field.
func (o *StageEntry) SetWebURL(v string) {
	o.WebURL = &v
}

// GetWorkflowId returns the WorkflowId field value if set, zero value otherwise.
func (o *StageEntry) GetWorkflowId() string {
	if o == nil || isNil(o.WorkflowId) {
		var ret string
		return ret
	}
	return *o.WorkflowId
}

// GetWorkflowIdOk returns a tuple with the WorkflowId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StageEntry) GetWorkflowIdOk() (*string, bool) {
	if o == nil || isNil(o.WorkflowId) {
    return nil, false
	}
	return o.WorkflowId, true
}

// HasWorkflowId returns a boolean if a field has been set.
func (o *StageEntry) HasWorkflowId() bool {
	if o != nil && !isNil(o.WorkflowId) {
		return true
	}

	return false
}

// SetWorkflowId gets a reference to the given string and assigns it to the WorkflowId field.
func (o *StageEntry) SetWorkflowId(v string) {
	o.WorkflowId = &v
}

// GetWorkflowStageId returns the WorkflowStageId field value if set, zero value otherwise.
func (o *StageEntry) GetWorkflowStageId() string {
	if o == nil || isNil(o.WorkflowStageId) {
		var ret string
		return ret
	}
	return *o.WorkflowStageId
}

// GetWorkflowStageIdOk returns a tuple with the WorkflowStageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StageEntry) GetWorkflowStageIdOk() (*string, bool) {
	if o == nil || isNil(o.WorkflowStageId) {
    return nil, false
	}
	return o.WorkflowStageId, true
}

// HasWorkflowStageId returns a boolean if a field has been set.
func (o *StageEntry) HasWorkflowStageId() bool {
	if o != nil && !isNil(o.WorkflowStageId) {
		return true
	}

	return false
}

// SetWorkflowStageId gets a reference to the given string and assigns it to the WorkflowStageId field.
func (o *StageEntry) SetWorkflowStageId(v string) {
	o.WorkflowStageId = &v
}

func (o StageEntry) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ApiURL) {
		toSerialize["apiURL"] = o.ApiURL
	}
	if !isNil(o.Authors) {
		toSerialize["authors"] = o.Authors
	}
	if !isNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !isNil(o.Creator) {
		toSerialize["creator"] = o.Creator
	}
	if !isNil(o.CustomFields) {
		toSerialize["customFields"] = o.CustomFields
	}
	if !isNil(o.DisplayId) {
		toSerialize["displayId"] = o.DisplayId
	}
	if !isNil(o.Fields) {
		toSerialize["fields"] = o.Fields
	}
	if !isNil(o.FolderId) {
		toSerialize["folderId"] = o.FolderId
	}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.ModifiedAt) {
		toSerialize["modifiedAt"] = o.ModifiedAt
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if o.ReviewRecord != nil {
		toSerialize["reviewRecord"] = o.ReviewRecord
	}
	if o.Schema.IsSet() {
		toSerialize["schema"] = o.Schema.Get()
	}
	if !isNil(o.WebURL) {
		toSerialize["webURL"] = o.WebURL
	}
	if !isNil(o.WorkflowId) {
		toSerialize["workflowId"] = o.WorkflowId
	}
	if !isNil(o.WorkflowStageId) {
		toSerialize["workflowStageId"] = o.WorkflowStageId
	}
	return json.Marshal(toSerialize)
}

type NullableStageEntry struct {
	value *StageEntry
	isSet bool
}

func (v NullableStageEntry) Get() *StageEntry {
	return v.value
}

func (v *NullableStageEntry) Set(val *StageEntry) {
	v.value = val
	v.isSet = true
}

func (v NullableStageEntry) IsSet() bool {
	return v.isSet
}

func (v *NullableStageEntry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStageEntry(val *StageEntry) *NullableStageEntry {
	return &NullableStageEntry{value: val, isSet: true}
}

func (v NullableStageEntry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStageEntry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


