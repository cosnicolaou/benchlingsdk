/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// DeprecatedEntitySchemasList struct for DeprecatedEntitySchemasList
type DeprecatedEntitySchemasList struct {
	EntitySchemas []DeprecatedEntitySchema `json:"entitySchemas,omitempty"`
}

// NewDeprecatedEntitySchemasList instantiates a new DeprecatedEntitySchemasList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeprecatedEntitySchemasList() *DeprecatedEntitySchemasList {
	this := DeprecatedEntitySchemasList{}
	return &this
}

// NewDeprecatedEntitySchemasListWithDefaults instantiates a new DeprecatedEntitySchemasList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeprecatedEntitySchemasListWithDefaults() *DeprecatedEntitySchemasList {
	this := DeprecatedEntitySchemasList{}
	return &this
}

// GetEntitySchemas returns the EntitySchemas field value if set, zero value otherwise.
func (o *DeprecatedEntitySchemasList) GetEntitySchemas() []DeprecatedEntitySchema {
	if o == nil || isNil(o.EntitySchemas) {
		var ret []DeprecatedEntitySchema
		return ret
	}
	return o.EntitySchemas
}

// GetEntitySchemasOk returns a tuple with the EntitySchemas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeprecatedEntitySchemasList) GetEntitySchemasOk() ([]DeprecatedEntitySchema, bool) {
	if o == nil || isNil(o.EntitySchemas) {
    return nil, false
	}
	return o.EntitySchemas, true
}

// HasEntitySchemas returns a boolean if a field has been set.
func (o *DeprecatedEntitySchemasList) HasEntitySchemas() bool {
	if o != nil && !isNil(o.EntitySchemas) {
		return true
	}

	return false
}

// SetEntitySchemas gets a reference to the given []DeprecatedEntitySchema and assigns it to the EntitySchemas field.
func (o *DeprecatedEntitySchemasList) SetEntitySchemas(v []DeprecatedEntitySchema) {
	o.EntitySchemas = v
}

func (o DeprecatedEntitySchemasList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.EntitySchemas) {
		toSerialize["entitySchemas"] = o.EntitySchemas
	}
	return json.Marshal(toSerialize)
}

type NullableDeprecatedEntitySchemasList struct {
	value *DeprecatedEntitySchemasList
	isSet bool
}

func (v NullableDeprecatedEntitySchemasList) Get() *DeprecatedEntitySchemasList {
	return v.value
}

func (v *NullableDeprecatedEntitySchemasList) Set(val *DeprecatedEntitySchemasList) {
	v.value = val
	v.isSet = true
}

func (v NullableDeprecatedEntitySchemasList) IsSet() bool {
	return v.isSet
}

func (v *NullableDeprecatedEntitySchemasList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeprecatedEntitySchemasList(val *DeprecatedEntitySchemasList) *NullableDeprecatedEntitySchemasList {
	return &NullableDeprecatedEntitySchemasList{value: val, isSet: true}
}

func (v NullableDeprecatedEntitySchemasList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeprecatedEntitySchemasList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


