/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// RequestSampleGroupCreate struct for RequestSampleGroupCreate
type RequestSampleGroupCreate struct {
	// The key for each RequestSample should match one of the samplesSchema[n].name property in the request schema json. 
	Samples map[string]RequestSampleGroupSamplesValue `json:"samples"`
}

// NewRequestSampleGroupCreate instantiates a new RequestSampleGroupCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequestSampleGroupCreate(samples map[string]RequestSampleGroupSamplesValue) *RequestSampleGroupCreate {
	this := RequestSampleGroupCreate{}
	this.Samples = samples
	return &this
}

// NewRequestSampleGroupCreateWithDefaults instantiates a new RequestSampleGroupCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequestSampleGroupCreateWithDefaults() *RequestSampleGroupCreate {
	this := RequestSampleGroupCreate{}
	return &this
}

// GetSamples returns the Samples field value
func (o *RequestSampleGroupCreate) GetSamples() map[string]RequestSampleGroupSamplesValue {
	if o == nil {
		var ret map[string]RequestSampleGroupSamplesValue
		return ret
	}

	return o.Samples
}

// GetSamplesOk returns a tuple with the Samples field value
// and a boolean to check if the value has been set.
func (o *RequestSampleGroupCreate) GetSamplesOk() (*map[string]RequestSampleGroupSamplesValue, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Samples, true
}

// SetSamples sets field value
func (o *RequestSampleGroupCreate) SetSamples(v map[string]RequestSampleGroupSamplesValue) {
	o.Samples = v
}

func (o RequestSampleGroupCreate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["samples"] = o.Samples
	}
	return json.Marshal(toSerialize)
}

type NullableRequestSampleGroupCreate struct {
	value *RequestSampleGroupCreate
	isSet bool
}

func (v NullableRequestSampleGroupCreate) Get() *RequestSampleGroupCreate {
	return v.value
}

func (v *NullableRequestSampleGroupCreate) Set(val *RequestSampleGroupCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestSampleGroupCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestSampleGroupCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestSampleGroupCreate(val *RequestSampleGroupCreate) *NullableRequestSampleGroupCreate {
	return &NullableRequestSampleGroupCreate{value: val, isSet: true}
}

func (v NullableRequestSampleGroupCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestSampleGroupCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


