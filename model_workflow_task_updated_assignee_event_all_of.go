/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// WorkflowTaskUpdatedAssigneeEventAllOf struct for WorkflowTaskUpdatedAssigneeEventAllOf
type WorkflowTaskUpdatedAssigneeEventAllOf struct {
	EventType *string `json:"eventType,omitempty"`
	WorkflowTask *WorkflowTask `json:"workflowTask,omitempty"`
}

// NewWorkflowTaskUpdatedAssigneeEventAllOf instantiates a new WorkflowTaskUpdatedAssigneeEventAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowTaskUpdatedAssigneeEventAllOf() *WorkflowTaskUpdatedAssigneeEventAllOf {
	this := WorkflowTaskUpdatedAssigneeEventAllOf{}
	return &this
}

// NewWorkflowTaskUpdatedAssigneeEventAllOfWithDefaults instantiates a new WorkflowTaskUpdatedAssigneeEventAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowTaskUpdatedAssigneeEventAllOfWithDefaults() *WorkflowTaskUpdatedAssigneeEventAllOf {
	this := WorkflowTaskUpdatedAssigneeEventAllOf{}
	return &this
}

// GetEventType returns the EventType field value if set, zero value otherwise.
func (o *WorkflowTaskUpdatedAssigneeEventAllOf) GetEventType() string {
	if o == nil || isNil(o.EventType) {
		var ret string
		return ret
	}
	return *o.EventType
}

// GetEventTypeOk returns a tuple with the EventType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowTaskUpdatedAssigneeEventAllOf) GetEventTypeOk() (*string, bool) {
	if o == nil || isNil(o.EventType) {
    return nil, false
	}
	return o.EventType, true
}

// HasEventType returns a boolean if a field has been set.
func (o *WorkflowTaskUpdatedAssigneeEventAllOf) HasEventType() bool {
	if o != nil && !isNil(o.EventType) {
		return true
	}

	return false
}

// SetEventType gets a reference to the given string and assigns it to the EventType field.
func (o *WorkflowTaskUpdatedAssigneeEventAllOf) SetEventType(v string) {
	o.EventType = &v
}

// GetWorkflowTask returns the WorkflowTask field value if set, zero value otherwise.
func (o *WorkflowTaskUpdatedAssigneeEventAllOf) GetWorkflowTask() WorkflowTask {
	if o == nil || isNil(o.WorkflowTask) {
		var ret WorkflowTask
		return ret
	}
	return *o.WorkflowTask
}

// GetWorkflowTaskOk returns a tuple with the WorkflowTask field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowTaskUpdatedAssigneeEventAllOf) GetWorkflowTaskOk() (*WorkflowTask, bool) {
	if o == nil || isNil(o.WorkflowTask) {
    return nil, false
	}
	return o.WorkflowTask, true
}

// HasWorkflowTask returns a boolean if a field has been set.
func (o *WorkflowTaskUpdatedAssigneeEventAllOf) HasWorkflowTask() bool {
	if o != nil && !isNil(o.WorkflowTask) {
		return true
	}

	return false
}

// SetWorkflowTask gets a reference to the given WorkflowTask and assigns it to the WorkflowTask field.
func (o *WorkflowTaskUpdatedAssigneeEventAllOf) SetWorkflowTask(v WorkflowTask) {
	o.WorkflowTask = &v
}

func (o WorkflowTaskUpdatedAssigneeEventAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.EventType) {
		toSerialize["eventType"] = o.EventType
	}
	if !isNil(o.WorkflowTask) {
		toSerialize["workflowTask"] = o.WorkflowTask
	}
	return json.Marshal(toSerialize)
}

type NullableWorkflowTaskUpdatedAssigneeEventAllOf struct {
	value *WorkflowTaskUpdatedAssigneeEventAllOf
	isSet bool
}

func (v NullableWorkflowTaskUpdatedAssigneeEventAllOf) Get() *WorkflowTaskUpdatedAssigneeEventAllOf {
	return v.value
}

func (v *NullableWorkflowTaskUpdatedAssigneeEventAllOf) Set(val *WorkflowTaskUpdatedAssigneeEventAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowTaskUpdatedAssigneeEventAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowTaskUpdatedAssigneeEventAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowTaskUpdatedAssigneeEventAllOf(val *WorkflowTaskUpdatedAssigneeEventAllOf) *NullableWorkflowTaskUpdatedAssigneeEventAllOf {
	return &NullableWorkflowTaskUpdatedAssigneeEventAllOf{value: val, isSet: true}
}

func (v NullableWorkflowTaskUpdatedAssigneeEventAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowTaskUpdatedAssigneeEventAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


