/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// AutofillRnaSequences struct for AutofillRnaSequences
type AutofillRnaSequences struct {
	// Array of RNA sequence IDs.
	RnaSequenceIds []string `json:"rnaSequenceIds"`
}

// NewAutofillRnaSequences instantiates a new AutofillRnaSequences object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAutofillRnaSequences(rnaSequenceIds []string) *AutofillRnaSequences {
	this := AutofillRnaSequences{}
	this.RnaSequenceIds = rnaSequenceIds
	return &this
}

// NewAutofillRnaSequencesWithDefaults instantiates a new AutofillRnaSequences object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAutofillRnaSequencesWithDefaults() *AutofillRnaSequences {
	this := AutofillRnaSequences{}
	return &this
}

// GetRnaSequenceIds returns the RnaSequenceIds field value
func (o *AutofillRnaSequences) GetRnaSequenceIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.RnaSequenceIds
}

// GetRnaSequenceIdsOk returns a tuple with the RnaSequenceIds field value
// and a boolean to check if the value has been set.
func (o *AutofillRnaSequences) GetRnaSequenceIdsOk() ([]string, bool) {
	if o == nil {
    return nil, false
	}
	return o.RnaSequenceIds, true
}

// SetRnaSequenceIds sets field value
func (o *AutofillRnaSequences) SetRnaSequenceIds(v []string) {
	o.RnaSequenceIds = v
}

func (o AutofillRnaSequences) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["rnaSequenceIds"] = o.RnaSequenceIds
	}
	return json.Marshal(toSerialize)
}

type NullableAutofillRnaSequences struct {
	value *AutofillRnaSequences
	isSet bool
}

func (v NullableAutofillRnaSequences) Get() *AutofillRnaSequences {
	return v.value
}

func (v *NullableAutofillRnaSequences) Set(val *AutofillRnaSequences) {
	v.value = val
	v.isSet = true
}

func (v NullableAutofillRnaSequences) IsSet() bool {
	return v.isSet
}

func (v *NullableAutofillRnaSequences) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutofillRnaSequences(val *AutofillRnaSequences) *NullableAutofillRnaSequences {
	return &NullableAutofillRnaSequences{value: val, isSet: true}
}

func (v NullableAutofillRnaSequences) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutofillRnaSequences) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


