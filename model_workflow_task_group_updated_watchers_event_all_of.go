/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// WorkflowTaskGroupUpdatedWatchersEventAllOf struct for WorkflowTaskGroupUpdatedWatchersEventAllOf
type WorkflowTaskGroupUpdatedWatchersEventAllOf struct {
	EventType *string `json:"eventType,omitempty"`
	WorkflowTaskGroup *WorkflowTaskGroup `json:"workflowTaskGroup,omitempty"`
}

// NewWorkflowTaskGroupUpdatedWatchersEventAllOf instantiates a new WorkflowTaskGroupUpdatedWatchersEventAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowTaskGroupUpdatedWatchersEventAllOf() *WorkflowTaskGroupUpdatedWatchersEventAllOf {
	this := WorkflowTaskGroupUpdatedWatchersEventAllOf{}
	return &this
}

// NewWorkflowTaskGroupUpdatedWatchersEventAllOfWithDefaults instantiates a new WorkflowTaskGroupUpdatedWatchersEventAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowTaskGroupUpdatedWatchersEventAllOfWithDefaults() *WorkflowTaskGroupUpdatedWatchersEventAllOf {
	this := WorkflowTaskGroupUpdatedWatchersEventAllOf{}
	return &this
}

// GetEventType returns the EventType field value if set, zero value otherwise.
func (o *WorkflowTaskGroupUpdatedWatchersEventAllOf) GetEventType() string {
	if o == nil || isNil(o.EventType) {
		var ret string
		return ret
	}
	return *o.EventType
}

// GetEventTypeOk returns a tuple with the EventType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowTaskGroupUpdatedWatchersEventAllOf) GetEventTypeOk() (*string, bool) {
	if o == nil || isNil(o.EventType) {
    return nil, false
	}
	return o.EventType, true
}

// HasEventType returns a boolean if a field has been set.
func (o *WorkflowTaskGroupUpdatedWatchersEventAllOf) HasEventType() bool {
	if o != nil && !isNil(o.EventType) {
		return true
	}

	return false
}

// SetEventType gets a reference to the given string and assigns it to the EventType field.
func (o *WorkflowTaskGroupUpdatedWatchersEventAllOf) SetEventType(v string) {
	o.EventType = &v
}

// GetWorkflowTaskGroup returns the WorkflowTaskGroup field value if set, zero value otherwise.
func (o *WorkflowTaskGroupUpdatedWatchersEventAllOf) GetWorkflowTaskGroup() WorkflowTaskGroup {
	if o == nil || isNil(o.WorkflowTaskGroup) {
		var ret WorkflowTaskGroup
		return ret
	}
	return *o.WorkflowTaskGroup
}

// GetWorkflowTaskGroupOk returns a tuple with the WorkflowTaskGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowTaskGroupUpdatedWatchersEventAllOf) GetWorkflowTaskGroupOk() (*WorkflowTaskGroup, bool) {
	if o == nil || isNil(o.WorkflowTaskGroup) {
    return nil, false
	}
	return o.WorkflowTaskGroup, true
}

// HasWorkflowTaskGroup returns a boolean if a field has been set.
func (o *WorkflowTaskGroupUpdatedWatchersEventAllOf) HasWorkflowTaskGroup() bool {
	if o != nil && !isNil(o.WorkflowTaskGroup) {
		return true
	}

	return false
}

// SetWorkflowTaskGroup gets a reference to the given WorkflowTaskGroup and assigns it to the WorkflowTaskGroup field.
func (o *WorkflowTaskGroupUpdatedWatchersEventAllOf) SetWorkflowTaskGroup(v WorkflowTaskGroup) {
	o.WorkflowTaskGroup = &v
}

func (o WorkflowTaskGroupUpdatedWatchersEventAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.EventType) {
		toSerialize["eventType"] = o.EventType
	}
	if !isNil(o.WorkflowTaskGroup) {
		toSerialize["workflowTaskGroup"] = o.WorkflowTaskGroup
	}
	return json.Marshal(toSerialize)
}

type NullableWorkflowTaskGroupUpdatedWatchersEventAllOf struct {
	value *WorkflowTaskGroupUpdatedWatchersEventAllOf
	isSet bool
}

func (v NullableWorkflowTaskGroupUpdatedWatchersEventAllOf) Get() *WorkflowTaskGroupUpdatedWatchersEventAllOf {
	return v.value
}

func (v *NullableWorkflowTaskGroupUpdatedWatchersEventAllOf) Set(val *WorkflowTaskGroupUpdatedWatchersEventAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowTaskGroupUpdatedWatchersEventAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowTaskGroupUpdatedWatchersEventAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowTaskGroupUpdatedWatchersEventAllOf(val *WorkflowTaskGroupUpdatedWatchersEventAllOf) *NullableWorkflowTaskGroupUpdatedWatchersEventAllOf {
	return &NullableWorkflowTaskGroupUpdatedWatchersEventAllOf{value: val, isSet: true}
}

func (v NullableWorkflowTaskGroupUpdatedWatchersEventAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowTaskGroupUpdatedWatchersEventAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


