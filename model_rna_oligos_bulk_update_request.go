/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// RnaOligosBulkUpdateRequest struct for RnaOligosBulkUpdateRequest
type RnaOligosBulkUpdateRequest struct {
	RnaOligos []RnaOligoBulkUpdate `json:"rnaOligos,omitempty"`
}

// NewRnaOligosBulkUpdateRequest instantiates a new RnaOligosBulkUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRnaOligosBulkUpdateRequest() *RnaOligosBulkUpdateRequest {
	this := RnaOligosBulkUpdateRequest{}
	return &this
}

// NewRnaOligosBulkUpdateRequestWithDefaults instantiates a new RnaOligosBulkUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRnaOligosBulkUpdateRequestWithDefaults() *RnaOligosBulkUpdateRequest {
	this := RnaOligosBulkUpdateRequest{}
	return &this
}

// GetRnaOligos returns the RnaOligos field value if set, zero value otherwise.
func (o *RnaOligosBulkUpdateRequest) GetRnaOligos() []RnaOligoBulkUpdate {
	if o == nil || isNil(o.RnaOligos) {
		var ret []RnaOligoBulkUpdate
		return ret
	}
	return o.RnaOligos
}

// GetRnaOligosOk returns a tuple with the RnaOligos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RnaOligosBulkUpdateRequest) GetRnaOligosOk() ([]RnaOligoBulkUpdate, bool) {
	if o == nil || isNil(o.RnaOligos) {
    return nil, false
	}
	return o.RnaOligos, true
}

// HasRnaOligos returns a boolean if a field has been set.
func (o *RnaOligosBulkUpdateRequest) HasRnaOligos() bool {
	if o != nil && !isNil(o.RnaOligos) {
		return true
	}

	return false
}

// SetRnaOligos gets a reference to the given []RnaOligoBulkUpdate and assigns it to the RnaOligos field.
func (o *RnaOligosBulkUpdateRequest) SetRnaOligos(v []RnaOligoBulkUpdate) {
	o.RnaOligos = v
}

func (o RnaOligosBulkUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.RnaOligos) {
		toSerialize["rnaOligos"] = o.RnaOligos
	}
	return json.Marshal(toSerialize)
}

type NullableRnaOligosBulkUpdateRequest struct {
	value *RnaOligosBulkUpdateRequest
	isSet bool
}

func (v NullableRnaOligosBulkUpdateRequest) Get() *RnaOligosBulkUpdateRequest {
	return v.value
}

func (v *NullableRnaOligosBulkUpdateRequest) Set(val *RnaOligosBulkUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRnaOligosBulkUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRnaOligosBulkUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRnaOligosBulkUpdateRequest(val *RnaOligosBulkUpdateRequest) *NullableRnaOligosBulkUpdateRequest {
	return &NullableRnaOligosBulkUpdateRequest{value: val, isSet: true}
}

func (v NullableRnaOligosBulkUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRnaOligosBulkUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


