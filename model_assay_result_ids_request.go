/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// AssayResultIdsRequest struct for AssayResultIdsRequest
type AssayResultIdsRequest struct {
	AssayResultIds []string `json:"assayResultIds"`
}

// NewAssayResultIdsRequest instantiates a new AssayResultIdsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssayResultIdsRequest(assayResultIds []string) *AssayResultIdsRequest {
	this := AssayResultIdsRequest{}
	this.AssayResultIds = assayResultIds
	return &this
}

// NewAssayResultIdsRequestWithDefaults instantiates a new AssayResultIdsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssayResultIdsRequestWithDefaults() *AssayResultIdsRequest {
	this := AssayResultIdsRequest{}
	return &this
}

// GetAssayResultIds returns the AssayResultIds field value
func (o *AssayResultIdsRequest) GetAssayResultIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.AssayResultIds
}

// GetAssayResultIdsOk returns a tuple with the AssayResultIds field value
// and a boolean to check if the value has been set.
func (o *AssayResultIdsRequest) GetAssayResultIdsOk() ([]string, bool) {
	if o == nil {
    return nil, false
	}
	return o.AssayResultIds, true
}

// SetAssayResultIds sets field value
func (o *AssayResultIdsRequest) SetAssayResultIds(v []string) {
	o.AssayResultIds = v
}

func (o AssayResultIdsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["assayResultIds"] = o.AssayResultIds
	}
	return json.Marshal(toSerialize)
}

type NullableAssayResultIdsRequest struct {
	value *AssayResultIdsRequest
	isSet bool
}

func (v NullableAssayResultIdsRequest) Get() *AssayResultIdsRequest {
	return v.value
}

func (v *NullableAssayResultIdsRequest) Set(val *AssayResultIdsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAssayResultIdsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAssayResultIdsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssayResultIdsRequest(val *AssayResultIdsRequest) *NullableAssayResultIdsRequest {
	return &NullableAssayResultIdsRequest{value: val, isSet: true}
}

func (v NullableAssayResultIdsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssayResultIdsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


