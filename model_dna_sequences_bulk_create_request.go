/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// DnaSequencesBulkCreateRequest struct for DnaSequencesBulkCreateRequest
type DnaSequencesBulkCreateRequest struct {
	DnaSequences []DnaSequenceBulkCreate `json:"dnaSequences,omitempty"`
}

// NewDnaSequencesBulkCreateRequest instantiates a new DnaSequencesBulkCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDnaSequencesBulkCreateRequest() *DnaSequencesBulkCreateRequest {
	this := DnaSequencesBulkCreateRequest{}
	return &this
}

// NewDnaSequencesBulkCreateRequestWithDefaults instantiates a new DnaSequencesBulkCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDnaSequencesBulkCreateRequestWithDefaults() *DnaSequencesBulkCreateRequest {
	this := DnaSequencesBulkCreateRequest{}
	return &this
}

// GetDnaSequences returns the DnaSequences field value if set, zero value otherwise.
func (o *DnaSequencesBulkCreateRequest) GetDnaSequences() []DnaSequenceBulkCreate {
	if o == nil || isNil(o.DnaSequences) {
		var ret []DnaSequenceBulkCreate
		return ret
	}
	return o.DnaSequences
}

// GetDnaSequencesOk returns a tuple with the DnaSequences field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnaSequencesBulkCreateRequest) GetDnaSequencesOk() ([]DnaSequenceBulkCreate, bool) {
	if o == nil || isNil(o.DnaSequences) {
    return nil, false
	}
	return o.DnaSequences, true
}

// HasDnaSequences returns a boolean if a field has been set.
func (o *DnaSequencesBulkCreateRequest) HasDnaSequences() bool {
	if o != nil && !isNil(o.DnaSequences) {
		return true
	}

	return false
}

// SetDnaSequences gets a reference to the given []DnaSequenceBulkCreate and assigns it to the DnaSequences field.
func (o *DnaSequencesBulkCreateRequest) SetDnaSequences(v []DnaSequenceBulkCreate) {
	o.DnaSequences = v
}

func (o DnaSequencesBulkCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.DnaSequences) {
		toSerialize["dnaSequences"] = o.DnaSequences
	}
	return json.Marshal(toSerialize)
}

type NullableDnaSequencesBulkCreateRequest struct {
	value *DnaSequencesBulkCreateRequest
	isSet bool
}

func (v NullableDnaSequencesBulkCreateRequest) Get() *DnaSequencesBulkCreateRequest {
	return v.value
}

func (v *NullableDnaSequencesBulkCreateRequest) Set(val *DnaSequencesBulkCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDnaSequencesBulkCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDnaSequencesBulkCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDnaSequencesBulkCreateRequest(val *DnaSequencesBulkCreateRequest) *NullableDnaSequencesBulkCreateRequest {
	return &NullableDnaSequencesBulkCreateRequest{value: val, isSet: true}
}

func (v NullableDnaSequencesBulkCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDnaSequencesBulkCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


