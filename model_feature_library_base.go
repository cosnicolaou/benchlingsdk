/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// FeatureLibraryBase struct for FeatureLibraryBase
type FeatureLibraryBase struct {
	// The description for the feature library
	Description *string `json:"description,omitempty"`
	// The name of the feature library
	Name *string `json:"name,omitempty"`
}

// NewFeatureLibraryBase instantiates a new FeatureLibraryBase object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFeatureLibraryBase() *FeatureLibraryBase {
	this := FeatureLibraryBase{}
	return &this
}

// NewFeatureLibraryBaseWithDefaults instantiates a new FeatureLibraryBase object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFeatureLibraryBaseWithDefaults() *FeatureLibraryBase {
	this := FeatureLibraryBase{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *FeatureLibraryBase) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeatureLibraryBase) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *FeatureLibraryBase) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *FeatureLibraryBase) SetDescription(v string) {
	o.Description = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *FeatureLibraryBase) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeatureLibraryBase) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *FeatureLibraryBase) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *FeatureLibraryBase) SetName(v string) {
	o.Name = &v
}

func (o FeatureLibraryBase) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableFeatureLibraryBase struct {
	value *FeatureLibraryBase
	isSet bool
}

func (v NullableFeatureLibraryBase) Get() *FeatureLibraryBase {
	return v.value
}

func (v *NullableFeatureLibraryBase) Set(val *FeatureLibraryBase) {
	v.value = val
	v.isSet = true
}

func (v NullableFeatureLibraryBase) IsSet() bool {
	return v.isSet
}

func (v *NullableFeatureLibraryBase) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFeatureLibraryBase(val *FeatureLibraryBase) *NullableFeatureLibraryBase {
	return &NullableFeatureLibraryBase{value: val, isSet: true}
}

func (v NullableFeatureLibraryBase) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFeatureLibraryBase) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


