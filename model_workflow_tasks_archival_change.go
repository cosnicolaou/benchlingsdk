/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// WorkflowTasksArchivalChange IDs of all items that were archived or unarchived, grouped by resource type 
type WorkflowTasksArchivalChange struct {
	WorkflowTaskIds []string `json:"workflowTaskIds,omitempty"`
}

// NewWorkflowTasksArchivalChange instantiates a new WorkflowTasksArchivalChange object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowTasksArchivalChange() *WorkflowTasksArchivalChange {
	this := WorkflowTasksArchivalChange{}
	return &this
}

// NewWorkflowTasksArchivalChangeWithDefaults instantiates a new WorkflowTasksArchivalChange object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowTasksArchivalChangeWithDefaults() *WorkflowTasksArchivalChange {
	this := WorkflowTasksArchivalChange{}
	return &this
}

// GetWorkflowTaskIds returns the WorkflowTaskIds field value if set, zero value otherwise.
func (o *WorkflowTasksArchivalChange) GetWorkflowTaskIds() []string {
	if o == nil || isNil(o.WorkflowTaskIds) {
		var ret []string
		return ret
	}
	return o.WorkflowTaskIds
}

// GetWorkflowTaskIdsOk returns a tuple with the WorkflowTaskIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowTasksArchivalChange) GetWorkflowTaskIdsOk() ([]string, bool) {
	if o == nil || isNil(o.WorkflowTaskIds) {
    return nil, false
	}
	return o.WorkflowTaskIds, true
}

// HasWorkflowTaskIds returns a boolean if a field has been set.
func (o *WorkflowTasksArchivalChange) HasWorkflowTaskIds() bool {
	if o != nil && !isNil(o.WorkflowTaskIds) {
		return true
	}

	return false
}

// SetWorkflowTaskIds gets a reference to the given []string and assigns it to the WorkflowTaskIds field.
func (o *WorkflowTasksArchivalChange) SetWorkflowTaskIds(v []string) {
	o.WorkflowTaskIds = v
}

func (o WorkflowTasksArchivalChange) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.WorkflowTaskIds) {
		toSerialize["workflowTaskIds"] = o.WorkflowTaskIds
	}
	return json.Marshal(toSerialize)
}

type NullableWorkflowTasksArchivalChange struct {
	value *WorkflowTasksArchivalChange
	isSet bool
}

func (v NullableWorkflowTasksArchivalChange) Get() *WorkflowTasksArchivalChange {
	return v.value
}

func (v *NullableWorkflowTasksArchivalChange) Set(val *WorkflowTasksArchivalChange) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowTasksArchivalChange) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowTasksArchivalChange) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowTasksArchivalChange(val *WorkflowTasksArchivalChange) *NullableWorkflowTasksArchivalChange {
	return &NullableWorkflowTasksArchivalChange{value: val, isSet: true}
}

func (v NullableWorkflowTasksArchivalChange) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowTasksArchivalChange) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


