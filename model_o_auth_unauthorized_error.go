/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// OAuthUnauthorizedError struct for OAuthUnauthorizedError
type OAuthUnauthorizedError struct {
	Error *OAuthUnauthorizedErrorError `json:"error,omitempty"`
}

// NewOAuthUnauthorizedError instantiates a new OAuthUnauthorizedError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOAuthUnauthorizedError() *OAuthUnauthorizedError {
	this := OAuthUnauthorizedError{}
	return &this
}

// NewOAuthUnauthorizedErrorWithDefaults instantiates a new OAuthUnauthorizedError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOAuthUnauthorizedErrorWithDefaults() *OAuthUnauthorizedError {
	this := OAuthUnauthorizedError{}
	return &this
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *OAuthUnauthorizedError) GetError() OAuthUnauthorizedErrorError {
	if o == nil || isNil(o.Error) {
		var ret OAuthUnauthorizedErrorError
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthUnauthorizedError) GetErrorOk() (*OAuthUnauthorizedErrorError, bool) {
	if o == nil || isNil(o.Error) {
    return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *OAuthUnauthorizedError) HasError() bool {
	if o != nil && !isNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given OAuthUnauthorizedErrorError and assigns it to the Error field.
func (o *OAuthUnauthorizedError) SetError(v OAuthUnauthorizedErrorError) {
	o.Error = &v
}

func (o OAuthUnauthorizedError) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	return json.Marshal(toSerialize)
}

type NullableOAuthUnauthorizedError struct {
	value *OAuthUnauthorizedError
	isSet bool
}

func (v NullableOAuthUnauthorizedError) Get() *OAuthUnauthorizedError {
	return v.value
}

func (v *NullableOAuthUnauthorizedError) Set(val *OAuthUnauthorizedError) {
	v.value = val
	v.isSet = true
}

func (v NullableOAuthUnauthorizedError) IsSet() bool {
	return v.isSet
}

func (v *NullableOAuthUnauthorizedError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOAuthUnauthorizedError(val *OAuthUnauthorizedError) *NullableOAuthUnauthorizedError {
	return &NullableOAuthUnauthorizedError{value: val, isSet: true}
}

func (v NullableOAuthUnauthorizedError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOAuthUnauthorizedError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


