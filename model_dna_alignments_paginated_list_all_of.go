/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// DnaAlignmentsPaginatedListAllOf struct for DnaAlignmentsPaginatedListAllOf
type DnaAlignmentsPaginatedListAllOf struct {
	DnaAlignments []DnaAlignmentSummary `json:"dnaAlignments,omitempty"`
}

// NewDnaAlignmentsPaginatedListAllOf instantiates a new DnaAlignmentsPaginatedListAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDnaAlignmentsPaginatedListAllOf() *DnaAlignmentsPaginatedListAllOf {
	this := DnaAlignmentsPaginatedListAllOf{}
	return &this
}

// NewDnaAlignmentsPaginatedListAllOfWithDefaults instantiates a new DnaAlignmentsPaginatedListAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDnaAlignmentsPaginatedListAllOfWithDefaults() *DnaAlignmentsPaginatedListAllOf {
	this := DnaAlignmentsPaginatedListAllOf{}
	return &this
}

// GetDnaAlignments returns the DnaAlignments field value if set, zero value otherwise.
func (o *DnaAlignmentsPaginatedListAllOf) GetDnaAlignments() []DnaAlignmentSummary {
	if o == nil || isNil(o.DnaAlignments) {
		var ret []DnaAlignmentSummary
		return ret
	}
	return o.DnaAlignments
}

// GetDnaAlignmentsOk returns a tuple with the DnaAlignments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnaAlignmentsPaginatedListAllOf) GetDnaAlignmentsOk() ([]DnaAlignmentSummary, bool) {
	if o == nil || isNil(o.DnaAlignments) {
    return nil, false
	}
	return o.DnaAlignments, true
}

// HasDnaAlignments returns a boolean if a field has been set.
func (o *DnaAlignmentsPaginatedListAllOf) HasDnaAlignments() bool {
	if o != nil && !isNil(o.DnaAlignments) {
		return true
	}

	return false
}

// SetDnaAlignments gets a reference to the given []DnaAlignmentSummary and assigns it to the DnaAlignments field.
func (o *DnaAlignmentsPaginatedListAllOf) SetDnaAlignments(v []DnaAlignmentSummary) {
	o.DnaAlignments = v
}

func (o DnaAlignmentsPaginatedListAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.DnaAlignments) {
		toSerialize["dnaAlignments"] = o.DnaAlignments
	}
	return json.Marshal(toSerialize)
}

type NullableDnaAlignmentsPaginatedListAllOf struct {
	value *DnaAlignmentsPaginatedListAllOf
	isSet bool
}

func (v NullableDnaAlignmentsPaginatedListAllOf) Get() *DnaAlignmentsPaginatedListAllOf {
	return v.value
}

func (v *NullableDnaAlignmentsPaginatedListAllOf) Set(val *DnaAlignmentsPaginatedListAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableDnaAlignmentsPaginatedListAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableDnaAlignmentsPaginatedListAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDnaAlignmentsPaginatedListAllOf(val *DnaAlignmentsPaginatedListAllOf) *NullableDnaAlignmentsPaginatedListAllOf {
	return &NullableDnaAlignmentsPaginatedListAllOf{value: val, isSet: true}
}

func (v NullableDnaAlignmentsPaginatedListAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDnaAlignmentsPaginatedListAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


