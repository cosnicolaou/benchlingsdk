/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// RequestAllOf struct for RequestAllOf
type RequestAllOf struct {
	// The canonical url of the Request in the API.
	ApiURL *string `json:"apiURL,omitempty"`
	// Array of assignees
	Assignees []OneOfRequestUserAssigneeRequestTeamAssignee `json:"assignees,omitempty"`
	// Date and time the request was created
	CreatedAt *string `json:"createdAt,omitempty"`
	Creator *UserSummary `json:"creator,omitempty"`
	// User-friendly ID of the request
	DisplayId *string `json:"displayId,omitempty"`
	Fields *map[string]Field `json:"fields,omitempty"`
	// Unique ID for the request
	Id *string `json:"id,omitempty"`
	// The ID of the project to which the request belongs.
	ProjectId *string `json:"projectId,omitempty"`
	RequestStatus *RequestStatus `json:"requestStatus,omitempty"`
	Requestor *UserSummary `json:"requestor,omitempty"`
	SampleGroups []RequestSampleGroup `json:"sampleGroups,omitempty"`
	// Date the request is scheduled to be executed on, in YYYY-MM-DD format.
	ScheduledOn NullableString `json:"scheduledOn,omitempty"`
	Schema *SchemaSummary `json:"schema,omitempty"`
	Tasks []RequestTask `json:"tasks,omitempty"`
	// URL of the request
	WebURL *string `json:"webURL,omitempty"`
}

// NewRequestAllOf instantiates a new RequestAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequestAllOf() *RequestAllOf {
	this := RequestAllOf{}
	return &this
}

// NewRequestAllOfWithDefaults instantiates a new RequestAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequestAllOfWithDefaults() *RequestAllOf {
	this := RequestAllOf{}
	return &this
}

// GetApiURL returns the ApiURL field value if set, zero value otherwise.
func (o *RequestAllOf) GetApiURL() string {
	if o == nil || isNil(o.ApiURL) {
		var ret string
		return ret
	}
	return *o.ApiURL
}

// GetApiURLOk returns a tuple with the ApiURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestAllOf) GetApiURLOk() (*string, bool) {
	if o == nil || isNil(o.ApiURL) {
    return nil, false
	}
	return o.ApiURL, true
}

// HasApiURL returns a boolean if a field has been set.
func (o *RequestAllOf) HasApiURL() bool {
	if o != nil && !isNil(o.ApiURL) {
		return true
	}

	return false
}

// SetApiURL gets a reference to the given string and assigns it to the ApiURL field.
func (o *RequestAllOf) SetApiURL(v string) {
	o.ApiURL = &v
}

// GetAssignees returns the Assignees field value if set, zero value otherwise.
func (o *RequestAllOf) GetAssignees() []OneOfRequestUserAssigneeRequestTeamAssignee {
	if o == nil || isNil(o.Assignees) {
		var ret []OneOfRequestUserAssigneeRequestTeamAssignee
		return ret
	}
	return o.Assignees
}

// GetAssigneesOk returns a tuple with the Assignees field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestAllOf) GetAssigneesOk() ([]OneOfRequestUserAssigneeRequestTeamAssignee, bool) {
	if o == nil || isNil(o.Assignees) {
    return nil, false
	}
	return o.Assignees, true
}

// HasAssignees returns a boolean if a field has been set.
func (o *RequestAllOf) HasAssignees() bool {
	if o != nil && !isNil(o.Assignees) {
		return true
	}

	return false
}

// SetAssignees gets a reference to the given []OneOfRequestUserAssigneeRequestTeamAssignee and assigns it to the Assignees field.
func (o *RequestAllOf) SetAssignees(v []OneOfRequestUserAssigneeRequestTeamAssignee) {
	o.Assignees = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *RequestAllOf) GetCreatedAt() string {
	if o == nil || isNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestAllOf) GetCreatedAtOk() (*string, bool) {
	if o == nil || isNil(o.CreatedAt) {
    return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *RequestAllOf) HasCreatedAt() bool {
	if o != nil && !isNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *RequestAllOf) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetCreator returns the Creator field value if set, zero value otherwise.
func (o *RequestAllOf) GetCreator() UserSummary {
	if o == nil || isNil(o.Creator) {
		var ret UserSummary
		return ret
	}
	return *o.Creator
}

// GetCreatorOk returns a tuple with the Creator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestAllOf) GetCreatorOk() (*UserSummary, bool) {
	if o == nil || isNil(o.Creator) {
    return nil, false
	}
	return o.Creator, true
}

// HasCreator returns a boolean if a field has been set.
func (o *RequestAllOf) HasCreator() bool {
	if o != nil && !isNil(o.Creator) {
		return true
	}

	return false
}

// SetCreator gets a reference to the given UserSummary and assigns it to the Creator field.
func (o *RequestAllOf) SetCreator(v UserSummary) {
	o.Creator = &v
}

// GetDisplayId returns the DisplayId field value if set, zero value otherwise.
func (o *RequestAllOf) GetDisplayId() string {
	if o == nil || isNil(o.DisplayId) {
		var ret string
		return ret
	}
	return *o.DisplayId
}

// GetDisplayIdOk returns a tuple with the DisplayId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestAllOf) GetDisplayIdOk() (*string, bool) {
	if o == nil || isNil(o.DisplayId) {
    return nil, false
	}
	return o.DisplayId, true
}

// HasDisplayId returns a boolean if a field has been set.
func (o *RequestAllOf) HasDisplayId() bool {
	if o != nil && !isNil(o.DisplayId) {
		return true
	}

	return false
}

// SetDisplayId gets a reference to the given string and assigns it to the DisplayId field.
func (o *RequestAllOf) SetDisplayId(v string) {
	o.DisplayId = &v
}

// GetFields returns the Fields field value if set, zero value otherwise.
func (o *RequestAllOf) GetFields() map[string]Field {
	if o == nil || isNil(o.Fields) {
		var ret map[string]Field
		return ret
	}
	return *o.Fields
}

// GetFieldsOk returns a tuple with the Fields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestAllOf) GetFieldsOk() (*map[string]Field, bool) {
	if o == nil || isNil(o.Fields) {
    return nil, false
	}
	return o.Fields, true
}

// HasFields returns a boolean if a field has been set.
func (o *RequestAllOf) HasFields() bool {
	if o != nil && !isNil(o.Fields) {
		return true
	}

	return false
}

// SetFields gets a reference to the given map[string]Field and assigns it to the Fields field.
func (o *RequestAllOf) SetFields(v map[string]Field) {
	o.Fields = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *RequestAllOf) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestAllOf) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *RequestAllOf) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *RequestAllOf) SetId(v string) {
	o.Id = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *RequestAllOf) GetProjectId() string {
	if o == nil || isNil(o.ProjectId) {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestAllOf) GetProjectIdOk() (*string, bool) {
	if o == nil || isNil(o.ProjectId) {
    return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *RequestAllOf) HasProjectId() bool {
	if o != nil && !isNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *RequestAllOf) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetRequestStatus returns the RequestStatus field value if set, zero value otherwise.
func (o *RequestAllOf) GetRequestStatus() RequestStatus {
	if o == nil || isNil(o.RequestStatus) {
		var ret RequestStatus
		return ret
	}
	return *o.RequestStatus
}

// GetRequestStatusOk returns a tuple with the RequestStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestAllOf) GetRequestStatusOk() (*RequestStatus, bool) {
	if o == nil || isNil(o.RequestStatus) {
    return nil, false
	}
	return o.RequestStatus, true
}

// HasRequestStatus returns a boolean if a field has been set.
func (o *RequestAllOf) HasRequestStatus() bool {
	if o != nil && !isNil(o.RequestStatus) {
		return true
	}

	return false
}

// SetRequestStatus gets a reference to the given RequestStatus and assigns it to the RequestStatus field.
func (o *RequestAllOf) SetRequestStatus(v RequestStatus) {
	o.RequestStatus = &v
}

// GetRequestor returns the Requestor field value if set, zero value otherwise.
func (o *RequestAllOf) GetRequestor() UserSummary {
	if o == nil || isNil(o.Requestor) {
		var ret UserSummary
		return ret
	}
	return *o.Requestor
}

// GetRequestorOk returns a tuple with the Requestor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestAllOf) GetRequestorOk() (*UserSummary, bool) {
	if o == nil || isNil(o.Requestor) {
    return nil, false
	}
	return o.Requestor, true
}

// HasRequestor returns a boolean if a field has been set.
func (o *RequestAllOf) HasRequestor() bool {
	if o != nil && !isNil(o.Requestor) {
		return true
	}

	return false
}

// SetRequestor gets a reference to the given UserSummary and assigns it to the Requestor field.
func (o *RequestAllOf) SetRequestor(v UserSummary) {
	o.Requestor = &v
}

// GetSampleGroups returns the SampleGroups field value if set, zero value otherwise.
func (o *RequestAllOf) GetSampleGroups() []RequestSampleGroup {
	if o == nil || isNil(o.SampleGroups) {
		var ret []RequestSampleGroup
		return ret
	}
	return o.SampleGroups
}

// GetSampleGroupsOk returns a tuple with the SampleGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestAllOf) GetSampleGroupsOk() ([]RequestSampleGroup, bool) {
	if o == nil || isNil(o.SampleGroups) {
    return nil, false
	}
	return o.SampleGroups, true
}

// HasSampleGroups returns a boolean if a field has been set.
func (o *RequestAllOf) HasSampleGroups() bool {
	if o != nil && !isNil(o.SampleGroups) {
		return true
	}

	return false
}

// SetSampleGroups gets a reference to the given []RequestSampleGroup and assigns it to the SampleGroups field.
func (o *RequestAllOf) SetSampleGroups(v []RequestSampleGroup) {
	o.SampleGroups = v
}

// GetScheduledOn returns the ScheduledOn field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RequestAllOf) GetScheduledOn() string {
	if o == nil || isNil(o.ScheduledOn.Get()) {
		var ret string
		return ret
	}
	return *o.ScheduledOn.Get()
}

// GetScheduledOnOk returns a tuple with the ScheduledOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RequestAllOf) GetScheduledOnOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.ScheduledOn.Get(), o.ScheduledOn.IsSet()
}

// HasScheduledOn returns a boolean if a field has been set.
func (o *RequestAllOf) HasScheduledOn() bool {
	if o != nil && o.ScheduledOn.IsSet() {
		return true
	}

	return false
}

// SetScheduledOn gets a reference to the given NullableString and assigns it to the ScheduledOn field.
func (o *RequestAllOf) SetScheduledOn(v string) {
	o.ScheduledOn.Set(&v)
}
// SetScheduledOnNil sets the value for ScheduledOn to be an explicit nil
func (o *RequestAllOf) SetScheduledOnNil() {
	o.ScheduledOn.Set(nil)
}

// UnsetScheduledOn ensures that no value is present for ScheduledOn, not even an explicit nil
func (o *RequestAllOf) UnsetScheduledOn() {
	o.ScheduledOn.Unset()
}

// GetSchema returns the Schema field value if set, zero value otherwise.
func (o *RequestAllOf) GetSchema() SchemaSummary {
	if o == nil || isNil(o.Schema) {
		var ret SchemaSummary
		return ret
	}
	return *o.Schema
}

// GetSchemaOk returns a tuple with the Schema field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestAllOf) GetSchemaOk() (*SchemaSummary, bool) {
	if o == nil || isNil(o.Schema) {
    return nil, false
	}
	return o.Schema, true
}

// HasSchema returns a boolean if a field has been set.
func (o *RequestAllOf) HasSchema() bool {
	if o != nil && !isNil(o.Schema) {
		return true
	}

	return false
}

// SetSchema gets a reference to the given SchemaSummary and assigns it to the Schema field.
func (o *RequestAllOf) SetSchema(v SchemaSummary) {
	o.Schema = &v
}

// GetTasks returns the Tasks field value if set, zero value otherwise.
func (o *RequestAllOf) GetTasks() []RequestTask {
	if o == nil || isNil(o.Tasks) {
		var ret []RequestTask
		return ret
	}
	return o.Tasks
}

// GetTasksOk returns a tuple with the Tasks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestAllOf) GetTasksOk() ([]RequestTask, bool) {
	if o == nil || isNil(o.Tasks) {
    return nil, false
	}
	return o.Tasks, true
}

// HasTasks returns a boolean if a field has been set.
func (o *RequestAllOf) HasTasks() bool {
	if o != nil && !isNil(o.Tasks) {
		return true
	}

	return false
}

// SetTasks gets a reference to the given []RequestTask and assigns it to the Tasks field.
func (o *RequestAllOf) SetTasks(v []RequestTask) {
	o.Tasks = v
}

// GetWebURL returns the WebURL field value if set, zero value otherwise.
func (o *RequestAllOf) GetWebURL() string {
	if o == nil || isNil(o.WebURL) {
		var ret string
		return ret
	}
	return *o.WebURL
}

// GetWebURLOk returns a tuple with the WebURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestAllOf) GetWebURLOk() (*string, bool) {
	if o == nil || isNil(o.WebURL) {
    return nil, false
	}
	return o.WebURL, true
}

// HasWebURL returns a boolean if a field has been set.
func (o *RequestAllOf) HasWebURL() bool {
	if o != nil && !isNil(o.WebURL) {
		return true
	}

	return false
}

// SetWebURL gets a reference to the given string and assigns it to the WebURL field.
func (o *RequestAllOf) SetWebURL(v string) {
	o.WebURL = &v
}

func (o RequestAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ApiURL) {
		toSerialize["apiURL"] = o.ApiURL
	}
	if !isNil(o.Assignees) {
		toSerialize["assignees"] = o.Assignees
	}
	if !isNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !isNil(o.Creator) {
		toSerialize["creator"] = o.Creator
	}
	if !isNil(o.DisplayId) {
		toSerialize["displayId"] = o.DisplayId
	}
	if !isNil(o.Fields) {
		toSerialize["fields"] = o.Fields
	}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.ProjectId) {
		toSerialize["projectId"] = o.ProjectId
	}
	if !isNil(o.RequestStatus) {
		toSerialize["requestStatus"] = o.RequestStatus
	}
	if !isNil(o.Requestor) {
		toSerialize["requestor"] = o.Requestor
	}
	if !isNil(o.SampleGroups) {
		toSerialize["sampleGroups"] = o.SampleGroups
	}
	if o.ScheduledOn.IsSet() {
		toSerialize["scheduledOn"] = o.ScheduledOn.Get()
	}
	if !isNil(o.Schema) {
		toSerialize["schema"] = o.Schema
	}
	if !isNil(o.Tasks) {
		toSerialize["tasks"] = o.Tasks
	}
	if !isNil(o.WebURL) {
		toSerialize["webURL"] = o.WebURL
	}
	return json.Marshal(toSerialize)
}

type NullableRequestAllOf struct {
	value *RequestAllOf
	isSet bool
}

func (v NullableRequestAllOf) Get() *RequestAllOf {
	return v.value
}

func (v *NullableRequestAllOf) Set(val *RequestAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestAllOf(val *RequestAllOf) *NullableRequestAllOf {
	return &NullableRequestAllOf{value: val, isSet: true}
}

func (v NullableRequestAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


