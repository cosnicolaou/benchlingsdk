/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// RequestResponse struct for RequestResponse
type RequestResponse struct {
	Results []AssayResult `json:"results,omitempty"`
	// Array of samples produced by the request.
	Samples []RequestResponseSamplesInner `json:"samples,omitempty"`
}

// NewRequestResponse instantiates a new RequestResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequestResponse() *RequestResponse {
	this := RequestResponse{}
	return &this
}

// NewRequestResponseWithDefaults instantiates a new RequestResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequestResponseWithDefaults() *RequestResponse {
	this := RequestResponse{}
	return &this
}

// GetResults returns the Results field value if set, zero value otherwise.
func (o *RequestResponse) GetResults() []AssayResult {
	if o == nil || isNil(o.Results) {
		var ret []AssayResult
		return ret
	}
	return o.Results
}

// GetResultsOk returns a tuple with the Results field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestResponse) GetResultsOk() ([]AssayResult, bool) {
	if o == nil || isNil(o.Results) {
    return nil, false
	}
	return o.Results, true
}

// HasResults returns a boolean if a field has been set.
func (o *RequestResponse) HasResults() bool {
	if o != nil && !isNil(o.Results) {
		return true
	}

	return false
}

// SetResults gets a reference to the given []AssayResult and assigns it to the Results field.
func (o *RequestResponse) SetResults(v []AssayResult) {
	o.Results = v
}

// GetSamples returns the Samples field value if set, zero value otherwise.
func (o *RequestResponse) GetSamples() []RequestResponseSamplesInner {
	if o == nil || isNil(o.Samples) {
		var ret []RequestResponseSamplesInner
		return ret
	}
	return o.Samples
}

// GetSamplesOk returns a tuple with the Samples field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestResponse) GetSamplesOk() ([]RequestResponseSamplesInner, bool) {
	if o == nil || isNil(o.Samples) {
    return nil, false
	}
	return o.Samples, true
}

// HasSamples returns a boolean if a field has been set.
func (o *RequestResponse) HasSamples() bool {
	if o != nil && !isNil(o.Samples) {
		return true
	}

	return false
}

// SetSamples gets a reference to the given []RequestResponseSamplesInner and assigns it to the Samples field.
func (o *RequestResponse) SetSamples(v []RequestResponseSamplesInner) {
	o.Samples = v
}

func (o RequestResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Results) {
		toSerialize["results"] = o.Results
	}
	if !isNil(o.Samples) {
		toSerialize["samples"] = o.Samples
	}
	return json.Marshal(toSerialize)
}

type NullableRequestResponse struct {
	value *RequestResponse
	isSet bool
}

func (v NullableRequestResponse) Get() *RequestResponse {
	return v.value
}

func (v *NullableRequestResponse) Set(val *RequestResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestResponse(val *RequestResponse) *NullableRequestResponse {
	return &NullableRequestResponse{value: val, isSet: true}
}

func (v NullableRequestResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


