/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
	"fmt"
)

// AssayResultCreateFields Dictionary of result fields
type AssayResultCreateFields struct {
	map[string]Field *map[string]Field
	map[string]interface{} *map[string]interface{}
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *AssayResultCreateFields) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into map[string]Field
	err = json.Unmarshal(data, &dst.map[string]Field);
	if err == nil {
		jsonmap[string]Field, _ := json.Marshal(dst.map[string]Field)
		if string(jsonmap[string]Field) == "{}" { // empty struct
			dst.map[string]Field = nil
		} else {
			return nil // data stored in dst.map[string]Field, return on the first match
		}
	} else {
		dst.map[string]Field = nil
	}

	// try to unmarshal JSON data into map[string]interface{}
	err = json.Unmarshal(data, &dst.map[string]interface{});
	if err == nil {
		jsonmap[string]interface{}, _ := json.Marshal(dst.map[string]interface{})
		if string(jsonmap[string]interface{}) == "{}" { // empty struct
			dst.map[string]interface{} = nil
		} else {
			return nil // data stored in dst.map[string]interface{}, return on the first match
		}
	} else {
		dst.map[string]interface{} = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(AssayResultCreateFields)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src *AssayResultCreateFields) MarshalJSON() ([]byte, error) {
	if src.map[string]Field != nil {
		return json.Marshal(&src.map[string]Field)
	}

	if src.map[string]interface{} != nil {
		return json.Marshal(&src.map[string]interface{})
	}

	return nil, nil // no data in anyOf schemas
}

type NullableAssayResultCreateFields struct {
	value *AssayResultCreateFields
	isSet bool
}

func (v NullableAssayResultCreateFields) Get() *AssayResultCreateFields {
	return v.value
}

func (v *NullableAssayResultCreateFields) Set(val *AssayResultCreateFields) {
	v.value = val
	v.isSet = true
}

func (v NullableAssayResultCreateFields) IsSet() bool {
	return v.isSet
}

func (v *NullableAssayResultCreateFields) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssayResultCreateFields(val *AssayResultCreateFields) *NullableAssayResultCreateFields {
	return &NullableAssayResultCreateFields{value: val, isSet: true}
}

func (v NullableAssayResultCreateFields) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssayResultCreateFields) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


