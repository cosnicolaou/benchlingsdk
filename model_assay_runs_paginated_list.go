/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// AssayRunsPaginatedList struct for AssayRunsPaginatedList
type AssayRunsPaginatedList struct {
	AssayRuns []AssayRun `json:"assayRuns,omitempty"`
	NextToken *string `json:"nextToken,omitempty"`
}

// NewAssayRunsPaginatedList instantiates a new AssayRunsPaginatedList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssayRunsPaginatedList() *AssayRunsPaginatedList {
	this := AssayRunsPaginatedList{}
	return &this
}

// NewAssayRunsPaginatedListWithDefaults instantiates a new AssayRunsPaginatedList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssayRunsPaginatedListWithDefaults() *AssayRunsPaginatedList {
	this := AssayRunsPaginatedList{}
	return &this
}

// GetAssayRuns returns the AssayRuns field value if set, zero value otherwise.
func (o *AssayRunsPaginatedList) GetAssayRuns() []AssayRun {
	if o == nil || isNil(o.AssayRuns) {
		var ret []AssayRun
		return ret
	}
	return o.AssayRuns
}

// GetAssayRunsOk returns a tuple with the AssayRuns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssayRunsPaginatedList) GetAssayRunsOk() ([]AssayRun, bool) {
	if o == nil || isNil(o.AssayRuns) {
    return nil, false
	}
	return o.AssayRuns, true
}

// HasAssayRuns returns a boolean if a field has been set.
func (o *AssayRunsPaginatedList) HasAssayRuns() bool {
	if o != nil && !isNil(o.AssayRuns) {
		return true
	}

	return false
}

// SetAssayRuns gets a reference to the given []AssayRun and assigns it to the AssayRuns field.
func (o *AssayRunsPaginatedList) SetAssayRuns(v []AssayRun) {
	o.AssayRuns = v
}

// GetNextToken returns the NextToken field value if set, zero value otherwise.
func (o *AssayRunsPaginatedList) GetNextToken() string {
	if o == nil || isNil(o.NextToken) {
		var ret string
		return ret
	}
	return *o.NextToken
}

// GetNextTokenOk returns a tuple with the NextToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssayRunsPaginatedList) GetNextTokenOk() (*string, bool) {
	if o == nil || isNil(o.NextToken) {
    return nil, false
	}
	return o.NextToken, true
}

// HasNextToken returns a boolean if a field has been set.
func (o *AssayRunsPaginatedList) HasNextToken() bool {
	if o != nil && !isNil(o.NextToken) {
		return true
	}

	return false
}

// SetNextToken gets a reference to the given string and assigns it to the NextToken field.
func (o *AssayRunsPaginatedList) SetNextToken(v string) {
	o.NextToken = &v
}

func (o AssayRunsPaginatedList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AssayRuns) {
		toSerialize["assayRuns"] = o.AssayRuns
	}
	if !isNil(o.NextToken) {
		toSerialize["nextToken"] = o.NextToken
	}
	return json.Marshal(toSerialize)
}

type NullableAssayRunsPaginatedList struct {
	value *AssayRunsPaginatedList
	isSet bool
}

func (v NullableAssayRunsPaginatedList) Get() *AssayRunsPaginatedList {
	return v.value
}

func (v *NullableAssayRunsPaginatedList) Set(val *AssayRunsPaginatedList) {
	v.value = val
	v.isSet = true
}

func (v NullableAssayRunsPaginatedList) IsSet() bool {
	return v.isSet
}

func (v *NullableAssayRunsPaginatedList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssayRunsPaginatedList(val *AssayRunsPaginatedList) *NullableAssayRunsPaginatedList {
	return &NullableAssayRunsPaginatedList{value: val, isSet: true}
}

func (v NullableAssayRunsPaginatedList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssayRunsPaginatedList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


