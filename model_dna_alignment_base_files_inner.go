/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
	"fmt"
)

// DnaAlignmentBaseFilesInner - struct for DnaAlignmentBaseFilesInner
type DnaAlignmentBaseFilesInner struct {
	DnaAlignmentBaseFilesInnerOneOf *DnaAlignmentBaseFilesInnerOneOf
	DnaTemplateAlignmentFile *DnaTemplateAlignmentFile
}

// DnaAlignmentBaseFilesInnerOneOfAsDnaAlignmentBaseFilesInner is a convenience function that returns DnaAlignmentBaseFilesInnerOneOf wrapped in DnaAlignmentBaseFilesInner
func DnaAlignmentBaseFilesInnerOneOfAsDnaAlignmentBaseFilesInner(v *DnaAlignmentBaseFilesInnerOneOf) DnaAlignmentBaseFilesInner {
	return DnaAlignmentBaseFilesInner{
		DnaAlignmentBaseFilesInnerOneOf: v,
	}
}

// DnaTemplateAlignmentFileAsDnaAlignmentBaseFilesInner is a convenience function that returns DnaTemplateAlignmentFile wrapped in DnaAlignmentBaseFilesInner
func DnaTemplateAlignmentFileAsDnaAlignmentBaseFilesInner(v *DnaTemplateAlignmentFile) DnaAlignmentBaseFilesInner {
	return DnaAlignmentBaseFilesInner{
		DnaTemplateAlignmentFile: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *DnaAlignmentBaseFilesInner) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into DnaAlignmentBaseFilesInnerOneOf
	err = newStrictDecoder(data).Decode(&dst.DnaAlignmentBaseFilesInnerOneOf)
	if err == nil {
		jsonDnaAlignmentBaseFilesInnerOneOf, _ := json.Marshal(dst.DnaAlignmentBaseFilesInnerOneOf)
		if string(jsonDnaAlignmentBaseFilesInnerOneOf) == "{}" { // empty struct
			dst.DnaAlignmentBaseFilesInnerOneOf = nil
		} else {
			match++
		}
	} else {
		dst.DnaAlignmentBaseFilesInnerOneOf = nil
	}

	// try to unmarshal data into DnaTemplateAlignmentFile
	err = newStrictDecoder(data).Decode(&dst.DnaTemplateAlignmentFile)
	if err == nil {
		jsonDnaTemplateAlignmentFile, _ := json.Marshal(dst.DnaTemplateAlignmentFile)
		if string(jsonDnaTemplateAlignmentFile) == "{}" { // empty struct
			dst.DnaTemplateAlignmentFile = nil
		} else {
			match++
		}
	} else {
		dst.DnaTemplateAlignmentFile = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.DnaAlignmentBaseFilesInnerOneOf = nil
		dst.DnaTemplateAlignmentFile = nil

		return fmt.Errorf("data matches more than one schema in oneOf(DnaAlignmentBaseFilesInner)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(DnaAlignmentBaseFilesInner)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src DnaAlignmentBaseFilesInner) MarshalJSON() ([]byte, error) {
	if src.DnaAlignmentBaseFilesInnerOneOf != nil {
		return json.Marshal(&src.DnaAlignmentBaseFilesInnerOneOf)
	}

	if src.DnaTemplateAlignmentFile != nil {
		return json.Marshal(&src.DnaTemplateAlignmentFile)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *DnaAlignmentBaseFilesInner) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.DnaAlignmentBaseFilesInnerOneOf != nil {
		return obj.DnaAlignmentBaseFilesInnerOneOf
	}

	if obj.DnaTemplateAlignmentFile != nil {
		return obj.DnaTemplateAlignmentFile
	}

	// all schemas are nil
	return nil
}

type NullableDnaAlignmentBaseFilesInner struct {
	value *DnaAlignmentBaseFilesInner
	isSet bool
}

func (v NullableDnaAlignmentBaseFilesInner) Get() *DnaAlignmentBaseFilesInner {
	return v.value
}

func (v *NullableDnaAlignmentBaseFilesInner) Set(val *DnaAlignmentBaseFilesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableDnaAlignmentBaseFilesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableDnaAlignmentBaseFilesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDnaAlignmentBaseFilesInner(val *DnaAlignmentBaseFilesInner) *NullableDnaAlignmentBaseFilesInner {
	return &NullableDnaAlignmentBaseFilesInner{value: val, isSet: true}
}

func (v NullableDnaAlignmentBaseFilesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDnaAlignmentBaseFilesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


