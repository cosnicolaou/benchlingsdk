/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// DnaAlignmentAllOf struct for DnaAlignmentAllOf
type DnaAlignmentAllOf struct {
	AlignedSequences []AlignedSequence `json:"alignedSequences,omitempty"`
}

// NewDnaAlignmentAllOf instantiates a new DnaAlignmentAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDnaAlignmentAllOf() *DnaAlignmentAllOf {
	this := DnaAlignmentAllOf{}
	return &this
}

// NewDnaAlignmentAllOfWithDefaults instantiates a new DnaAlignmentAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDnaAlignmentAllOfWithDefaults() *DnaAlignmentAllOf {
	this := DnaAlignmentAllOf{}
	return &this
}

// GetAlignedSequences returns the AlignedSequences field value if set, zero value otherwise.
func (o *DnaAlignmentAllOf) GetAlignedSequences() []AlignedSequence {
	if o == nil || isNil(o.AlignedSequences) {
		var ret []AlignedSequence
		return ret
	}
	return o.AlignedSequences
}

// GetAlignedSequencesOk returns a tuple with the AlignedSequences field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnaAlignmentAllOf) GetAlignedSequencesOk() ([]AlignedSequence, bool) {
	if o == nil || isNil(o.AlignedSequences) {
    return nil, false
	}
	return o.AlignedSequences, true
}

// HasAlignedSequences returns a boolean if a field has been set.
func (o *DnaAlignmentAllOf) HasAlignedSequences() bool {
	if o != nil && !isNil(o.AlignedSequences) {
		return true
	}

	return false
}

// SetAlignedSequences gets a reference to the given []AlignedSequence and assigns it to the AlignedSequences field.
func (o *DnaAlignmentAllOf) SetAlignedSequences(v []AlignedSequence) {
	o.AlignedSequences = v
}

func (o DnaAlignmentAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AlignedSequences) {
		toSerialize["alignedSequences"] = o.AlignedSequences
	}
	return json.Marshal(toSerialize)
}

type NullableDnaAlignmentAllOf struct {
	value *DnaAlignmentAllOf
	isSet bool
}

func (v NullableDnaAlignmentAllOf) Get() *DnaAlignmentAllOf {
	return v.value
}

func (v *NullableDnaAlignmentAllOf) Set(val *DnaAlignmentAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableDnaAlignmentAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableDnaAlignmentAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDnaAlignmentAllOf(val *DnaAlignmentAllOf) *NullableDnaAlignmentAllOf {
	return &NullableDnaAlignmentAllOf{value: val, isSet: true}
}

func (v NullableDnaAlignmentAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDnaAlignmentAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


