/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// AutomationInputGeneratorUpdate struct for AutomationInputGeneratorUpdate
type AutomationInputGeneratorUpdate struct {
	// The ID of the file (blob) associated with the input generator. Set to `null` to remove an existing file from the generator.
	FileId NullableString `json:"fileId,omitempty"`
}

// NewAutomationInputGeneratorUpdate instantiates a new AutomationInputGeneratorUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAutomationInputGeneratorUpdate() *AutomationInputGeneratorUpdate {
	this := AutomationInputGeneratorUpdate{}
	return &this
}

// NewAutomationInputGeneratorUpdateWithDefaults instantiates a new AutomationInputGeneratorUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAutomationInputGeneratorUpdateWithDefaults() *AutomationInputGeneratorUpdate {
	this := AutomationInputGeneratorUpdate{}
	return &this
}

// GetFileId returns the FileId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AutomationInputGeneratorUpdate) GetFileId() string {
	if o == nil || isNil(o.FileId.Get()) {
		var ret string
		return ret
	}
	return *o.FileId.Get()
}

// GetFileIdOk returns a tuple with the FileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AutomationInputGeneratorUpdate) GetFileIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.FileId.Get(), o.FileId.IsSet()
}

// HasFileId returns a boolean if a field has been set.
func (o *AutomationInputGeneratorUpdate) HasFileId() bool {
	if o != nil && o.FileId.IsSet() {
		return true
	}

	return false
}

// SetFileId gets a reference to the given NullableString and assigns it to the FileId field.
func (o *AutomationInputGeneratorUpdate) SetFileId(v string) {
	o.FileId.Set(&v)
}
// SetFileIdNil sets the value for FileId to be an explicit nil
func (o *AutomationInputGeneratorUpdate) SetFileIdNil() {
	o.FileId.Set(nil)
}

// UnsetFileId ensures that no value is present for FileId, not even an explicit nil
func (o *AutomationInputGeneratorUpdate) UnsetFileId() {
	o.FileId.Unset()
}

func (o AutomationInputGeneratorUpdate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FileId.IsSet() {
		toSerialize["fileId"] = o.FileId.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableAutomationInputGeneratorUpdate struct {
	value *AutomationInputGeneratorUpdate
	isSet bool
}

func (v NullableAutomationInputGeneratorUpdate) Get() *AutomationInputGeneratorUpdate {
	return v.value
}

func (v *NullableAutomationInputGeneratorUpdate) Set(val *AutomationInputGeneratorUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableAutomationInputGeneratorUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableAutomationInputGeneratorUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutomationInputGeneratorUpdate(val *AutomationInputGeneratorUpdate) *NullableAutomationInputGeneratorUpdate {
	return &NullableAutomationInputGeneratorUpdate{value: val, isSet: true}
}

func (v NullableAutomationInputGeneratorUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutomationInputGeneratorUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


