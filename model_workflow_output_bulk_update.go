/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// WorkflowOutputBulkUpdate struct for WorkflowOutputBulkUpdate
type WorkflowOutputBulkUpdate struct {
	Fields *map[string]Field `json:"fields,omitempty"`
	// The ID of the workflow output
	WorkflowOutputId *string `json:"workflowOutputId,omitempty"`
}

// NewWorkflowOutputBulkUpdate instantiates a new WorkflowOutputBulkUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowOutputBulkUpdate() *WorkflowOutputBulkUpdate {
	this := WorkflowOutputBulkUpdate{}
	return &this
}

// NewWorkflowOutputBulkUpdateWithDefaults instantiates a new WorkflowOutputBulkUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowOutputBulkUpdateWithDefaults() *WorkflowOutputBulkUpdate {
	this := WorkflowOutputBulkUpdate{}
	return &this
}

// GetFields returns the Fields field value if set, zero value otherwise.
func (o *WorkflowOutputBulkUpdate) GetFields() map[string]Field {
	if o == nil || isNil(o.Fields) {
		var ret map[string]Field
		return ret
	}
	return *o.Fields
}

// GetFieldsOk returns a tuple with the Fields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowOutputBulkUpdate) GetFieldsOk() (*map[string]Field, bool) {
	if o == nil || isNil(o.Fields) {
    return nil, false
	}
	return o.Fields, true
}

// HasFields returns a boolean if a field has been set.
func (o *WorkflowOutputBulkUpdate) HasFields() bool {
	if o != nil && !isNil(o.Fields) {
		return true
	}

	return false
}

// SetFields gets a reference to the given map[string]Field and assigns it to the Fields field.
func (o *WorkflowOutputBulkUpdate) SetFields(v map[string]Field) {
	o.Fields = &v
}

// GetWorkflowOutputId returns the WorkflowOutputId field value if set, zero value otherwise.
func (o *WorkflowOutputBulkUpdate) GetWorkflowOutputId() string {
	if o == nil || isNil(o.WorkflowOutputId) {
		var ret string
		return ret
	}
	return *o.WorkflowOutputId
}

// GetWorkflowOutputIdOk returns a tuple with the WorkflowOutputId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowOutputBulkUpdate) GetWorkflowOutputIdOk() (*string, bool) {
	if o == nil || isNil(o.WorkflowOutputId) {
    return nil, false
	}
	return o.WorkflowOutputId, true
}

// HasWorkflowOutputId returns a boolean if a field has been set.
func (o *WorkflowOutputBulkUpdate) HasWorkflowOutputId() bool {
	if o != nil && !isNil(o.WorkflowOutputId) {
		return true
	}

	return false
}

// SetWorkflowOutputId gets a reference to the given string and assigns it to the WorkflowOutputId field.
func (o *WorkflowOutputBulkUpdate) SetWorkflowOutputId(v string) {
	o.WorkflowOutputId = &v
}

func (o WorkflowOutputBulkUpdate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Fields) {
		toSerialize["fields"] = o.Fields
	}
	if !isNil(o.WorkflowOutputId) {
		toSerialize["workflowOutputId"] = o.WorkflowOutputId
	}
	return json.Marshal(toSerialize)
}

type NullableWorkflowOutputBulkUpdate struct {
	value *WorkflowOutputBulkUpdate
	isSet bool
}

func (v NullableWorkflowOutputBulkUpdate) Get() *WorkflowOutputBulkUpdate {
	return v.value
}

func (v *NullableWorkflowOutputBulkUpdate) Set(val *WorkflowOutputBulkUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowOutputBulkUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowOutputBulkUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowOutputBulkUpdate(val *WorkflowOutputBulkUpdate) *NullableWorkflowOutputBulkUpdate {
	return &NullableWorkflowOutputBulkUpdate{value: val, isSet: true}
}

func (v NullableWorkflowOutputBulkUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowOutputBulkUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


