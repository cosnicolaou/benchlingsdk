/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// WorkflowTaskCreateAllOf struct for WorkflowTaskCreateAllOf
type WorkflowTaskCreateAllOf struct {
	// The workflow ID
	WorkflowTaskGroupId string `json:"workflowTaskGroupId"`
}

// NewWorkflowTaskCreateAllOf instantiates a new WorkflowTaskCreateAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowTaskCreateAllOf(workflowTaskGroupId string) *WorkflowTaskCreateAllOf {
	this := WorkflowTaskCreateAllOf{}
	this.WorkflowTaskGroupId = workflowTaskGroupId
	return &this
}

// NewWorkflowTaskCreateAllOfWithDefaults instantiates a new WorkflowTaskCreateAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowTaskCreateAllOfWithDefaults() *WorkflowTaskCreateAllOf {
	this := WorkflowTaskCreateAllOf{}
	return &this
}

// GetWorkflowTaskGroupId returns the WorkflowTaskGroupId field value
func (o *WorkflowTaskCreateAllOf) GetWorkflowTaskGroupId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WorkflowTaskGroupId
}

// GetWorkflowTaskGroupIdOk returns a tuple with the WorkflowTaskGroupId field value
// and a boolean to check if the value has been set.
func (o *WorkflowTaskCreateAllOf) GetWorkflowTaskGroupIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.WorkflowTaskGroupId, true
}

// SetWorkflowTaskGroupId sets field value
func (o *WorkflowTaskCreateAllOf) SetWorkflowTaskGroupId(v string) {
	o.WorkflowTaskGroupId = v
}

func (o WorkflowTaskCreateAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["workflowTaskGroupId"] = o.WorkflowTaskGroupId
	}
	return json.Marshal(toSerialize)
}

type NullableWorkflowTaskCreateAllOf struct {
	value *WorkflowTaskCreateAllOf
	isSet bool
}

func (v NullableWorkflowTaskCreateAllOf) Get() *WorkflowTaskCreateAllOf {
	return v.value
}

func (v *NullableWorkflowTaskCreateAllOf) Set(val *WorkflowTaskCreateAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowTaskCreateAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowTaskCreateAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowTaskCreateAllOf(val *WorkflowTaskCreateAllOf) *NullableWorkflowTaskCreateAllOf {
	return &NullableWorkflowTaskCreateAllOf{value: val, isSet: true}
}

func (v NullableWorkflowTaskCreateAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowTaskCreateAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


