/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// AppConfigItemCreateMixin struct for AppConfigItemCreateMixin
type AppConfigItemCreateMixin struct {
	// App id to which this config item belongs.
	AppId string `json:"appId"`
	// Array-based representation of config item's location in the tree in order from top to bottom.
	Path []string `json:"path"`
}

// NewAppConfigItemCreateMixin instantiates a new AppConfigItemCreateMixin object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppConfigItemCreateMixin(appId string, path []string) *AppConfigItemCreateMixin {
	this := AppConfigItemCreateMixin{}
	this.AppId = appId
	this.Path = path
	return &this
}

// NewAppConfigItemCreateMixinWithDefaults instantiates a new AppConfigItemCreateMixin object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppConfigItemCreateMixinWithDefaults() *AppConfigItemCreateMixin {
	this := AppConfigItemCreateMixin{}
	return &this
}

// GetAppId returns the AppId field value
func (o *AppConfigItemCreateMixin) GetAppId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value
// and a boolean to check if the value has been set.
func (o *AppConfigItemCreateMixin) GetAppIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.AppId, true
}

// SetAppId sets field value
func (o *AppConfigItemCreateMixin) SetAppId(v string) {
	o.AppId = v
}

// GetPath returns the Path field value
func (o *AppConfigItemCreateMixin) GetPath() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Path
}

// GetPathOk returns a tuple with the Path field value
// and a boolean to check if the value has been set.
func (o *AppConfigItemCreateMixin) GetPathOk() ([]string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Path, true
}

// SetPath sets field value
func (o *AppConfigItemCreateMixin) SetPath(v []string) {
	o.Path = v
}

func (o AppConfigItemCreateMixin) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["appId"] = o.AppId
	}
	if true {
		toSerialize["path"] = o.Path
	}
	return json.Marshal(toSerialize)
}

type NullableAppConfigItemCreateMixin struct {
	value *AppConfigItemCreateMixin
	isSet bool
}

func (v NullableAppConfigItemCreateMixin) Get() *AppConfigItemCreateMixin {
	return v.value
}

func (v *NullableAppConfigItemCreateMixin) Set(val *AppConfigItemCreateMixin) {
	v.value = val
	v.isSet = true
}

func (v NullableAppConfigItemCreateMixin) IsSet() bool {
	return v.isSet
}

func (v *NullableAppConfigItemCreateMixin) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppConfigItemCreateMixin(val *AppConfigItemCreateMixin) *NullableAppConfigItemCreateMixin {
	return &NullableAppConfigItemCreateMixin{value: val, isSet: true}
}

func (v NullableAppConfigItemCreateMixin) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppConfigItemCreateMixin) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


