/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// FindMatchingRegionsAsyncTaskAllOfResponseAaSequenceMatches struct for FindMatchingRegionsAsyncTaskAllOfResponseAaSequenceMatches
type FindMatchingRegionsAsyncTaskAllOfResponseAaSequenceMatches struct {
	MatchingAASequenceIds []string `json:"matchingAASequenceIds,omitempty"`
	TargetAASequenceId *string `json:"targetAASequenceId,omitempty"`
}

// NewFindMatchingRegionsAsyncTaskAllOfResponseAaSequenceMatches instantiates a new FindMatchingRegionsAsyncTaskAllOfResponseAaSequenceMatches object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFindMatchingRegionsAsyncTaskAllOfResponseAaSequenceMatches() *FindMatchingRegionsAsyncTaskAllOfResponseAaSequenceMatches {
	this := FindMatchingRegionsAsyncTaskAllOfResponseAaSequenceMatches{}
	return &this
}

// NewFindMatchingRegionsAsyncTaskAllOfResponseAaSequenceMatchesWithDefaults instantiates a new FindMatchingRegionsAsyncTaskAllOfResponseAaSequenceMatches object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFindMatchingRegionsAsyncTaskAllOfResponseAaSequenceMatchesWithDefaults() *FindMatchingRegionsAsyncTaskAllOfResponseAaSequenceMatches {
	this := FindMatchingRegionsAsyncTaskAllOfResponseAaSequenceMatches{}
	return &this
}

// GetMatchingAASequenceIds returns the MatchingAASequenceIds field value if set, zero value otherwise.
func (o *FindMatchingRegionsAsyncTaskAllOfResponseAaSequenceMatches) GetMatchingAASequenceIds() []string {
	if o == nil || isNil(o.MatchingAASequenceIds) {
		var ret []string
		return ret
	}
	return o.MatchingAASequenceIds
}

// GetMatchingAASequenceIdsOk returns a tuple with the MatchingAASequenceIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindMatchingRegionsAsyncTaskAllOfResponseAaSequenceMatches) GetMatchingAASequenceIdsOk() ([]string, bool) {
	if o == nil || isNil(o.MatchingAASequenceIds) {
    return nil, false
	}
	return o.MatchingAASequenceIds, true
}

// HasMatchingAASequenceIds returns a boolean if a field has been set.
func (o *FindMatchingRegionsAsyncTaskAllOfResponseAaSequenceMatches) HasMatchingAASequenceIds() bool {
	if o != nil && !isNil(o.MatchingAASequenceIds) {
		return true
	}

	return false
}

// SetMatchingAASequenceIds gets a reference to the given []string and assigns it to the MatchingAASequenceIds field.
func (o *FindMatchingRegionsAsyncTaskAllOfResponseAaSequenceMatches) SetMatchingAASequenceIds(v []string) {
	o.MatchingAASequenceIds = v
}

// GetTargetAASequenceId returns the TargetAASequenceId field value if set, zero value otherwise.
func (o *FindMatchingRegionsAsyncTaskAllOfResponseAaSequenceMatches) GetTargetAASequenceId() string {
	if o == nil || isNil(o.TargetAASequenceId) {
		var ret string
		return ret
	}
	return *o.TargetAASequenceId
}

// GetTargetAASequenceIdOk returns a tuple with the TargetAASequenceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindMatchingRegionsAsyncTaskAllOfResponseAaSequenceMatches) GetTargetAASequenceIdOk() (*string, bool) {
	if o == nil || isNil(o.TargetAASequenceId) {
    return nil, false
	}
	return o.TargetAASequenceId, true
}

// HasTargetAASequenceId returns a boolean if a field has been set.
func (o *FindMatchingRegionsAsyncTaskAllOfResponseAaSequenceMatches) HasTargetAASequenceId() bool {
	if o != nil && !isNil(o.TargetAASequenceId) {
		return true
	}

	return false
}

// SetTargetAASequenceId gets a reference to the given string and assigns it to the TargetAASequenceId field.
func (o *FindMatchingRegionsAsyncTaskAllOfResponseAaSequenceMatches) SetTargetAASequenceId(v string) {
	o.TargetAASequenceId = &v
}

func (o FindMatchingRegionsAsyncTaskAllOfResponseAaSequenceMatches) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.MatchingAASequenceIds) {
		toSerialize["matchingAASequenceIds"] = o.MatchingAASequenceIds
	}
	if !isNil(o.TargetAASequenceId) {
		toSerialize["targetAASequenceId"] = o.TargetAASequenceId
	}
	return json.Marshal(toSerialize)
}

type NullableFindMatchingRegionsAsyncTaskAllOfResponseAaSequenceMatches struct {
	value *FindMatchingRegionsAsyncTaskAllOfResponseAaSequenceMatches
	isSet bool
}

func (v NullableFindMatchingRegionsAsyncTaskAllOfResponseAaSequenceMatches) Get() *FindMatchingRegionsAsyncTaskAllOfResponseAaSequenceMatches {
	return v.value
}

func (v *NullableFindMatchingRegionsAsyncTaskAllOfResponseAaSequenceMatches) Set(val *FindMatchingRegionsAsyncTaskAllOfResponseAaSequenceMatches) {
	v.value = val
	v.isSet = true
}

func (v NullableFindMatchingRegionsAsyncTaskAllOfResponseAaSequenceMatches) IsSet() bool {
	return v.isSet
}

func (v *NullableFindMatchingRegionsAsyncTaskAllOfResponseAaSequenceMatches) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFindMatchingRegionsAsyncTaskAllOfResponseAaSequenceMatches(val *FindMatchingRegionsAsyncTaskAllOfResponseAaSequenceMatches) *NullableFindMatchingRegionsAsyncTaskAllOfResponseAaSequenceMatches {
	return &NullableFindMatchingRegionsAsyncTaskAllOfResponseAaSequenceMatches{value: val, isSet: true}
}

func (v NullableFindMatchingRegionsAsyncTaskAllOfResponseAaSequenceMatches) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFindMatchingRegionsAsyncTaskAllOfResponseAaSequenceMatches) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


