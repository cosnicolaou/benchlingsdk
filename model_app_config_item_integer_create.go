/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// AppConfigItemIntegerCreate struct for AppConfigItemIntegerCreate
type AppConfigItemIntegerCreate struct {
	// App id to which this config item belongs.
	AppId string `json:"appId"`
	// Array-based representation of config item's location in the tree in order from top to bottom.
	Path []string `json:"path"`
	Type string `json:"type"`
	Value int32 `json:"value"`
}

// NewAppConfigItemIntegerCreate instantiates a new AppConfigItemIntegerCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppConfigItemIntegerCreate(appId string, path []string, type_ string, value int32) *AppConfigItemIntegerCreate {
	this := AppConfigItemIntegerCreate{}
	this.AppId = appId
	this.Path = path
	this.Type = type_
	this.Value = value
	return &this
}

// NewAppConfigItemIntegerCreateWithDefaults instantiates a new AppConfigItemIntegerCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppConfigItemIntegerCreateWithDefaults() *AppConfigItemIntegerCreate {
	this := AppConfigItemIntegerCreate{}
	return &this
}

// GetAppId returns the AppId field value
func (o *AppConfigItemIntegerCreate) GetAppId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value
// and a boolean to check if the value has been set.
func (o *AppConfigItemIntegerCreate) GetAppIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.AppId, true
}

// SetAppId sets field value
func (o *AppConfigItemIntegerCreate) SetAppId(v string) {
	o.AppId = v
}

// GetPath returns the Path field value
func (o *AppConfigItemIntegerCreate) GetPath() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Path
}

// GetPathOk returns a tuple with the Path field value
// and a boolean to check if the value has been set.
func (o *AppConfigItemIntegerCreate) GetPathOk() ([]string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Path, true
}

// SetPath sets field value
func (o *AppConfigItemIntegerCreate) SetPath(v []string) {
	o.Path = v
}

// GetType returns the Type field value
func (o *AppConfigItemIntegerCreate) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *AppConfigItemIntegerCreate) GetTypeOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *AppConfigItemIntegerCreate) SetType(v string) {
	o.Type = v
}

// GetValue returns the Value field value
func (o *AppConfigItemIntegerCreate) GetValue() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *AppConfigItemIntegerCreate) GetValueOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *AppConfigItemIntegerCreate) SetValue(v int32) {
	o.Value = v
}

func (o AppConfigItemIntegerCreate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["appId"] = o.AppId
	}
	if true {
		toSerialize["path"] = o.Path
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableAppConfigItemIntegerCreate struct {
	value *AppConfigItemIntegerCreate
	isSet bool
}

func (v NullableAppConfigItemIntegerCreate) Get() *AppConfigItemIntegerCreate {
	return v.value
}

func (v *NullableAppConfigItemIntegerCreate) Set(val *AppConfigItemIntegerCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableAppConfigItemIntegerCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableAppConfigItemIntegerCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppConfigItemIntegerCreate(val *AppConfigItemIntegerCreate) *NullableAppConfigItemIntegerCreate {
	return &NullableAppConfigItemIntegerCreate{value: val, isSet: true}
}

func (v NullableAppConfigItemIntegerCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppConfigItemIntegerCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


