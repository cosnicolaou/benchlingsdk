/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// ContainerContentUpdate struct for ContainerContentUpdate
type ContainerContentUpdate struct {
	Concentration Measurement `json:"concentration"`
}

// NewContainerContentUpdate instantiates a new ContainerContentUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContainerContentUpdate(concentration Measurement) *ContainerContentUpdate {
	this := ContainerContentUpdate{}
	this.Concentration = concentration
	return &this
}

// NewContainerContentUpdateWithDefaults instantiates a new ContainerContentUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContainerContentUpdateWithDefaults() *ContainerContentUpdate {
	this := ContainerContentUpdate{}
	return &this
}

// GetConcentration returns the Concentration field value
func (o *ContainerContentUpdate) GetConcentration() Measurement {
	if o == nil {
		var ret Measurement
		return ret
	}

	return o.Concentration
}

// GetConcentrationOk returns a tuple with the Concentration field value
// and a boolean to check if the value has been set.
func (o *ContainerContentUpdate) GetConcentrationOk() (*Measurement, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Concentration, true
}

// SetConcentration sets field value
func (o *ContainerContentUpdate) SetConcentration(v Measurement) {
	o.Concentration = v
}

func (o ContainerContentUpdate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["concentration"] = o.Concentration
	}
	return json.Marshal(toSerialize)
}

type NullableContainerContentUpdate struct {
	value *ContainerContentUpdate
	isSet bool
}

func (v NullableContainerContentUpdate) Get() *ContainerContentUpdate {
	return v.value
}

func (v *NullableContainerContentUpdate) Set(val *ContainerContentUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableContainerContentUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableContainerContentUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainerContentUpdate(val *ContainerContentUpdate) *NullableContainerContentUpdate {
	return &NullableContainerContentUpdate{value: val, isSet: true}
}

func (v NullableContainerContentUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainerContentUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


