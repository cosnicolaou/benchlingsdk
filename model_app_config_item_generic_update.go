/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// AppConfigItemGenericUpdate struct for AppConfigItemGenericUpdate
type AppConfigItemGenericUpdate struct {
	Type string `json:"type"`
	Value string `json:"value"`
}

// NewAppConfigItemGenericUpdate instantiates a new AppConfigItemGenericUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppConfigItemGenericUpdate(type_ string, value string) *AppConfigItemGenericUpdate {
	this := AppConfigItemGenericUpdate{}
	this.Type = type_
	this.Value = value
	return &this
}

// NewAppConfigItemGenericUpdateWithDefaults instantiates a new AppConfigItemGenericUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppConfigItemGenericUpdateWithDefaults() *AppConfigItemGenericUpdate {
	this := AppConfigItemGenericUpdate{}
	return &this
}

// GetType returns the Type field value
func (o *AppConfigItemGenericUpdate) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *AppConfigItemGenericUpdate) GetTypeOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *AppConfigItemGenericUpdate) SetType(v string) {
	o.Type = v
}

// GetValue returns the Value field value
func (o *AppConfigItemGenericUpdate) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *AppConfigItemGenericUpdate) GetValueOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *AppConfigItemGenericUpdate) SetValue(v string) {
	o.Value = v
}

func (o AppConfigItemGenericUpdate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableAppConfigItemGenericUpdate struct {
	value *AppConfigItemGenericUpdate
	isSet bool
}

func (v NullableAppConfigItemGenericUpdate) Get() *AppConfigItemGenericUpdate {
	return v.value
}

func (v *NullableAppConfigItemGenericUpdate) Set(val *AppConfigItemGenericUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableAppConfigItemGenericUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableAppConfigItemGenericUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppConfigItemGenericUpdate(val *AppConfigItemGenericUpdate) *NullableAppConfigItemGenericUpdate {
	return &NullableAppConfigItemGenericUpdate{value: val, isSet: true}
}

func (v NullableAppConfigItemGenericUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppConfigItemGenericUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


