/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// MoleculesBulkUpdateRequest struct for MoleculesBulkUpdateRequest
type MoleculesBulkUpdateRequest struct {
	Molecules []MoleculeBulkUpdate `json:"molecules,omitempty"`
}

// NewMoleculesBulkUpdateRequest instantiates a new MoleculesBulkUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMoleculesBulkUpdateRequest() *MoleculesBulkUpdateRequest {
	this := MoleculesBulkUpdateRequest{}
	return &this
}

// NewMoleculesBulkUpdateRequestWithDefaults instantiates a new MoleculesBulkUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMoleculesBulkUpdateRequestWithDefaults() *MoleculesBulkUpdateRequest {
	this := MoleculesBulkUpdateRequest{}
	return &this
}

// GetMolecules returns the Molecules field value if set, zero value otherwise.
func (o *MoleculesBulkUpdateRequest) GetMolecules() []MoleculeBulkUpdate {
	if o == nil || isNil(o.Molecules) {
		var ret []MoleculeBulkUpdate
		return ret
	}
	return o.Molecules
}

// GetMoleculesOk returns a tuple with the Molecules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoleculesBulkUpdateRequest) GetMoleculesOk() ([]MoleculeBulkUpdate, bool) {
	if o == nil || isNil(o.Molecules) {
    return nil, false
	}
	return o.Molecules, true
}

// HasMolecules returns a boolean if a field has been set.
func (o *MoleculesBulkUpdateRequest) HasMolecules() bool {
	if o != nil && !isNil(o.Molecules) {
		return true
	}

	return false
}

// SetMolecules gets a reference to the given []MoleculeBulkUpdate and assigns it to the Molecules field.
func (o *MoleculesBulkUpdateRequest) SetMolecules(v []MoleculeBulkUpdate) {
	o.Molecules = v
}

func (o MoleculesBulkUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Molecules) {
		toSerialize["molecules"] = o.Molecules
	}
	return json.Marshal(toSerialize)
}

type NullableMoleculesBulkUpdateRequest struct {
	value *MoleculesBulkUpdateRequest
	isSet bool
}

func (v NullableMoleculesBulkUpdateRequest) Get() *MoleculesBulkUpdateRequest {
	return v.value
}

func (v *NullableMoleculesBulkUpdateRequest) Set(val *MoleculesBulkUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMoleculesBulkUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMoleculesBulkUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMoleculesBulkUpdateRequest(val *MoleculesBulkUpdateRequest) *NullableMoleculesBulkUpdateRequest {
	return &NullableMoleculesBulkUpdateRequest{value: val, isSet: true}
}

func (v NullableMoleculesBulkUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMoleculesBulkUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


