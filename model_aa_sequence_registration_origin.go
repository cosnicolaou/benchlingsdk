/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// AaSequenceRegistrationOrigin struct for AaSequenceRegistrationOrigin
type AaSequenceRegistrationOrigin struct {
	OriginEntryId NullableString `json:"originEntryId,omitempty"`
	RegisteredAt *time.Time `json:"registeredAt,omitempty"`
}

// NewAaSequenceRegistrationOrigin instantiates a new AaSequenceRegistrationOrigin object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAaSequenceRegistrationOrigin() *AaSequenceRegistrationOrigin {
	this := AaSequenceRegistrationOrigin{}
	return &this
}

// NewAaSequenceRegistrationOriginWithDefaults instantiates a new AaSequenceRegistrationOrigin object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAaSequenceRegistrationOriginWithDefaults() *AaSequenceRegistrationOrigin {
	this := AaSequenceRegistrationOrigin{}
	return &this
}

// GetOriginEntryId returns the OriginEntryId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AaSequenceRegistrationOrigin) GetOriginEntryId() string {
	if o == nil || isNil(o.OriginEntryId.Get()) {
		var ret string
		return ret
	}
	return *o.OriginEntryId.Get()
}

// GetOriginEntryIdOk returns a tuple with the OriginEntryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AaSequenceRegistrationOrigin) GetOriginEntryIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.OriginEntryId.Get(), o.OriginEntryId.IsSet()
}

// HasOriginEntryId returns a boolean if a field has been set.
func (o *AaSequenceRegistrationOrigin) HasOriginEntryId() bool {
	if o != nil && o.OriginEntryId.IsSet() {
		return true
	}

	return false
}

// SetOriginEntryId gets a reference to the given NullableString and assigns it to the OriginEntryId field.
func (o *AaSequenceRegistrationOrigin) SetOriginEntryId(v string) {
	o.OriginEntryId.Set(&v)
}
// SetOriginEntryIdNil sets the value for OriginEntryId to be an explicit nil
func (o *AaSequenceRegistrationOrigin) SetOriginEntryIdNil() {
	o.OriginEntryId.Set(nil)
}

// UnsetOriginEntryId ensures that no value is present for OriginEntryId, not even an explicit nil
func (o *AaSequenceRegistrationOrigin) UnsetOriginEntryId() {
	o.OriginEntryId.Unset()
}

// GetRegisteredAt returns the RegisteredAt field value if set, zero value otherwise.
func (o *AaSequenceRegistrationOrigin) GetRegisteredAt() time.Time {
	if o == nil || isNil(o.RegisteredAt) {
		var ret time.Time
		return ret
	}
	return *o.RegisteredAt
}

// GetRegisteredAtOk returns a tuple with the RegisteredAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AaSequenceRegistrationOrigin) GetRegisteredAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.RegisteredAt) {
    return nil, false
	}
	return o.RegisteredAt, true
}

// HasRegisteredAt returns a boolean if a field has been set.
func (o *AaSequenceRegistrationOrigin) HasRegisteredAt() bool {
	if o != nil && !isNil(o.RegisteredAt) {
		return true
	}

	return false
}

// SetRegisteredAt gets a reference to the given time.Time and assigns it to the RegisteredAt field.
func (o *AaSequenceRegistrationOrigin) SetRegisteredAt(v time.Time) {
	o.RegisteredAt = &v
}

func (o AaSequenceRegistrationOrigin) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.OriginEntryId.IsSet() {
		toSerialize["originEntryId"] = o.OriginEntryId.Get()
	}
	if !isNil(o.RegisteredAt) {
		toSerialize["registeredAt"] = o.RegisteredAt
	}
	return json.Marshal(toSerialize)
}

type NullableAaSequenceRegistrationOrigin struct {
	value *AaSequenceRegistrationOrigin
	isSet bool
}

func (v NullableAaSequenceRegistrationOrigin) Get() *AaSequenceRegistrationOrigin {
	return v.value
}

func (v *NullableAaSequenceRegistrationOrigin) Set(val *AaSequenceRegistrationOrigin) {
	v.value = val
	v.isSet = true
}

func (v NullableAaSequenceRegistrationOrigin) IsSet() bool {
	return v.isSet
}

func (v *NullableAaSequenceRegistrationOrigin) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAaSequenceRegistrationOrigin(val *AaSequenceRegistrationOrigin) *NullableAaSequenceRegistrationOrigin {
	return &NullableAaSequenceRegistrationOrigin{value: val, isSet: true}
}

func (v NullableAaSequenceRegistrationOrigin) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAaSequenceRegistrationOrigin) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


