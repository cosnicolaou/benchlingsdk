/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// ContainersCheckin struct for ContainersCheckin
type ContainersCheckin struct {
	Comments *string `json:"comments,omitempty"`
	// Array of container IDs.
	ContainerIds []string `json:"containerIds"`
}

// NewContainersCheckin instantiates a new ContainersCheckin object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContainersCheckin(containerIds []string) *ContainersCheckin {
	this := ContainersCheckin{}
	this.ContainerIds = containerIds
	return &this
}

// NewContainersCheckinWithDefaults instantiates a new ContainersCheckin object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContainersCheckinWithDefaults() *ContainersCheckin {
	this := ContainersCheckin{}
	return &this
}

// GetComments returns the Comments field value if set, zero value otherwise.
func (o *ContainersCheckin) GetComments() string {
	if o == nil || isNil(o.Comments) {
		var ret string
		return ret
	}
	return *o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainersCheckin) GetCommentsOk() (*string, bool) {
	if o == nil || isNil(o.Comments) {
    return nil, false
	}
	return o.Comments, true
}

// HasComments returns a boolean if a field has been set.
func (o *ContainersCheckin) HasComments() bool {
	if o != nil && !isNil(o.Comments) {
		return true
	}

	return false
}

// SetComments gets a reference to the given string and assigns it to the Comments field.
func (o *ContainersCheckin) SetComments(v string) {
	o.Comments = &v
}

// GetContainerIds returns the ContainerIds field value
func (o *ContainersCheckin) GetContainerIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ContainerIds
}

// GetContainerIdsOk returns a tuple with the ContainerIds field value
// and a boolean to check if the value has been set.
func (o *ContainersCheckin) GetContainerIdsOk() ([]string, bool) {
	if o == nil {
    return nil, false
	}
	return o.ContainerIds, true
}

// SetContainerIds sets field value
func (o *ContainersCheckin) SetContainerIds(v []string) {
	o.ContainerIds = v
}

func (o ContainersCheckin) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Comments) {
		toSerialize["comments"] = o.Comments
	}
	if true {
		toSerialize["containerIds"] = o.ContainerIds
	}
	return json.Marshal(toSerialize)
}

type NullableContainersCheckin struct {
	value *ContainersCheckin
	isSet bool
}

func (v NullableContainersCheckin) Get() *ContainersCheckin {
	return v.value
}

func (v *NullableContainersCheckin) Set(val *ContainersCheckin) {
	v.value = val
	v.isSet = true
}

func (v NullableContainersCheckin) IsSet() bool {
	return v.isSet
}

func (v *NullableContainersCheckin) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainersCheckin(val *ContainersCheckin) *NullableContainersCheckin {
	return &NullableContainersCheckin{value: val, isSet: true}
}

func (v NullableContainersCheckin) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainersCheckin) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


