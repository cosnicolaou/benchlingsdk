/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// FindMatchingRegionsAsyncTaskAllOfResponse struct for FindMatchingRegionsAsyncTaskAllOfResponse
type FindMatchingRegionsAsyncTaskAllOfResponse struct {
	AaSequenceMatches []FindMatchingRegionsAsyncTaskAllOfResponseAaSequenceMatches `json:"aaSequenceMatches,omitempty"`
}

// NewFindMatchingRegionsAsyncTaskAllOfResponse instantiates a new FindMatchingRegionsAsyncTaskAllOfResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFindMatchingRegionsAsyncTaskAllOfResponse() *FindMatchingRegionsAsyncTaskAllOfResponse {
	this := FindMatchingRegionsAsyncTaskAllOfResponse{}
	return &this
}

// NewFindMatchingRegionsAsyncTaskAllOfResponseWithDefaults instantiates a new FindMatchingRegionsAsyncTaskAllOfResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFindMatchingRegionsAsyncTaskAllOfResponseWithDefaults() *FindMatchingRegionsAsyncTaskAllOfResponse {
	this := FindMatchingRegionsAsyncTaskAllOfResponse{}
	return &this
}

// GetAaSequenceMatches returns the AaSequenceMatches field value if set, zero value otherwise.
func (o *FindMatchingRegionsAsyncTaskAllOfResponse) GetAaSequenceMatches() []FindMatchingRegionsAsyncTaskAllOfResponseAaSequenceMatches {
	if o == nil || isNil(o.AaSequenceMatches) {
		var ret []FindMatchingRegionsAsyncTaskAllOfResponseAaSequenceMatches
		return ret
	}
	return o.AaSequenceMatches
}

// GetAaSequenceMatchesOk returns a tuple with the AaSequenceMatches field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindMatchingRegionsAsyncTaskAllOfResponse) GetAaSequenceMatchesOk() ([]FindMatchingRegionsAsyncTaskAllOfResponseAaSequenceMatches, bool) {
	if o == nil || isNil(o.AaSequenceMatches) {
    return nil, false
	}
	return o.AaSequenceMatches, true
}

// HasAaSequenceMatches returns a boolean if a field has been set.
func (o *FindMatchingRegionsAsyncTaskAllOfResponse) HasAaSequenceMatches() bool {
	if o != nil && !isNil(o.AaSequenceMatches) {
		return true
	}

	return false
}

// SetAaSequenceMatches gets a reference to the given []FindMatchingRegionsAsyncTaskAllOfResponseAaSequenceMatches and assigns it to the AaSequenceMatches field.
func (o *FindMatchingRegionsAsyncTaskAllOfResponse) SetAaSequenceMatches(v []FindMatchingRegionsAsyncTaskAllOfResponseAaSequenceMatches) {
	o.AaSequenceMatches = v
}

func (o FindMatchingRegionsAsyncTaskAllOfResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AaSequenceMatches) {
		toSerialize["aaSequenceMatches"] = o.AaSequenceMatches
	}
	return json.Marshal(toSerialize)
}

type NullableFindMatchingRegionsAsyncTaskAllOfResponse struct {
	value *FindMatchingRegionsAsyncTaskAllOfResponse
	isSet bool
}

func (v NullableFindMatchingRegionsAsyncTaskAllOfResponse) Get() *FindMatchingRegionsAsyncTaskAllOfResponse {
	return v.value
}

func (v *NullableFindMatchingRegionsAsyncTaskAllOfResponse) Set(val *FindMatchingRegionsAsyncTaskAllOfResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableFindMatchingRegionsAsyncTaskAllOfResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableFindMatchingRegionsAsyncTaskAllOfResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFindMatchingRegionsAsyncTaskAllOfResponse(val *FindMatchingRegionsAsyncTaskAllOfResponse) *NullableFindMatchingRegionsAsyncTaskAllOfResponse {
	return &NullableFindMatchingRegionsAsyncTaskAllOfResponse{value: val, isSet: true}
}

func (v NullableFindMatchingRegionsAsyncTaskAllOfResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFindMatchingRegionsAsyncTaskAllOfResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


