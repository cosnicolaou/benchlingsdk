/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// LocationsUnarchive struct for LocationsUnarchive
type LocationsUnarchive struct {
	// Array of location IDs
	LocationIds []string `json:"locationIds"`
}

// NewLocationsUnarchive instantiates a new LocationsUnarchive object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLocationsUnarchive(locationIds []string) *LocationsUnarchive {
	this := LocationsUnarchive{}
	this.LocationIds = locationIds
	return &this
}

// NewLocationsUnarchiveWithDefaults instantiates a new LocationsUnarchive object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLocationsUnarchiveWithDefaults() *LocationsUnarchive {
	this := LocationsUnarchive{}
	return &this
}

// GetLocationIds returns the LocationIds field value
func (o *LocationsUnarchive) GetLocationIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.LocationIds
}

// GetLocationIdsOk returns a tuple with the LocationIds field value
// and a boolean to check if the value has been set.
func (o *LocationsUnarchive) GetLocationIdsOk() ([]string, bool) {
	if o == nil {
    return nil, false
	}
	return o.LocationIds, true
}

// SetLocationIds sets field value
func (o *LocationsUnarchive) SetLocationIds(v []string) {
	o.LocationIds = v
}

func (o LocationsUnarchive) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["locationIds"] = o.LocationIds
	}
	return json.Marshal(toSerialize)
}

type NullableLocationsUnarchive struct {
	value *LocationsUnarchive
	isSet bool
}

func (v NullableLocationsUnarchive) Get() *LocationsUnarchive {
	return v.value
}

func (v *NullableLocationsUnarchive) Set(val *LocationsUnarchive) {
	v.value = val
	v.isSet = true
}

func (v NullableLocationsUnarchive) IsSet() bool {
	return v.isSet
}

func (v *NullableLocationsUnarchive) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLocationsUnarchive(val *LocationsUnarchive) *NullableLocationsUnarchive {
	return &NullableLocationsUnarchive{value: val, isSet: true}
}

func (v NullableLocationsUnarchive) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLocationsUnarchive) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


