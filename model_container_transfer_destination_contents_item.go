/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// ContainerTransferDestinationContentsItem struct for ContainerTransferDestinationContentsItem
type ContainerTransferDestinationContentsItem struct {
	Concentration *Measurement `json:"concentration,omitempty"`
	EntityId string `json:"entityId"`
}

// NewContainerTransferDestinationContentsItem instantiates a new ContainerTransferDestinationContentsItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContainerTransferDestinationContentsItem(entityId string) *ContainerTransferDestinationContentsItem {
	this := ContainerTransferDestinationContentsItem{}
	this.EntityId = entityId
	return &this
}

// NewContainerTransferDestinationContentsItemWithDefaults instantiates a new ContainerTransferDestinationContentsItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContainerTransferDestinationContentsItemWithDefaults() *ContainerTransferDestinationContentsItem {
	this := ContainerTransferDestinationContentsItem{}
	return &this
}

// GetConcentration returns the Concentration field value if set, zero value otherwise.
func (o *ContainerTransferDestinationContentsItem) GetConcentration() Measurement {
	if o == nil || isNil(o.Concentration) {
		var ret Measurement
		return ret
	}
	return *o.Concentration
}

// GetConcentrationOk returns a tuple with the Concentration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerTransferDestinationContentsItem) GetConcentrationOk() (*Measurement, bool) {
	if o == nil || isNil(o.Concentration) {
    return nil, false
	}
	return o.Concentration, true
}

// HasConcentration returns a boolean if a field has been set.
func (o *ContainerTransferDestinationContentsItem) HasConcentration() bool {
	if o != nil && !isNil(o.Concentration) {
		return true
	}

	return false
}

// SetConcentration gets a reference to the given Measurement and assigns it to the Concentration field.
func (o *ContainerTransferDestinationContentsItem) SetConcentration(v Measurement) {
	o.Concentration = &v
}

// GetEntityId returns the EntityId field value
func (o *ContainerTransferDestinationContentsItem) GetEntityId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntityId
}

// GetEntityIdOk returns a tuple with the EntityId field value
// and a boolean to check if the value has been set.
func (o *ContainerTransferDestinationContentsItem) GetEntityIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.EntityId, true
}

// SetEntityId sets field value
func (o *ContainerTransferDestinationContentsItem) SetEntityId(v string) {
	o.EntityId = v
}

func (o ContainerTransferDestinationContentsItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Concentration) {
		toSerialize["concentration"] = o.Concentration
	}
	if true {
		toSerialize["entityId"] = o.EntityId
	}
	return json.Marshal(toSerialize)
}

type NullableContainerTransferDestinationContentsItem struct {
	value *ContainerTransferDestinationContentsItem
	isSet bool
}

func (v NullableContainerTransferDestinationContentsItem) Get() *ContainerTransferDestinationContentsItem {
	return v.value
}

func (v *NullableContainerTransferDestinationContentsItem) Set(val *ContainerTransferDestinationContentsItem) {
	v.value = val
	v.isSet = true
}

func (v NullableContainerTransferDestinationContentsItem) IsSet() bool {
	return v.isSet
}

func (v *NullableContainerTransferDestinationContentsItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainerTransferDestinationContentsItem(val *ContainerTransferDestinationContentsItem) *NullableContainerTransferDestinationContentsItem {
	return &NullableContainerTransferDestinationContentsItem{value: val, isSet: true}
}

func (v NullableContainerTransferDestinationContentsItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainerTransferDestinationContentsItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


