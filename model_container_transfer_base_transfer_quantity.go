/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// ContainerTransferBaseTransferQuantity This represents the quantity of the source to be transferred into the destination container. Supports mass, volume, and other quantities. Required in place of transferVolume. 
type ContainerTransferBaseTransferQuantity struct {
	Units NullableString `json:"units,omitempty"`
	Value NullableFloat32 `json:"value,omitempty"`
}

// NewContainerTransferBaseTransferQuantity instantiates a new ContainerTransferBaseTransferQuantity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContainerTransferBaseTransferQuantity() *ContainerTransferBaseTransferQuantity {
	this := ContainerTransferBaseTransferQuantity{}
	return &this
}

// NewContainerTransferBaseTransferQuantityWithDefaults instantiates a new ContainerTransferBaseTransferQuantity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContainerTransferBaseTransferQuantityWithDefaults() *ContainerTransferBaseTransferQuantity {
	this := ContainerTransferBaseTransferQuantity{}
	return &this
}

// GetUnits returns the Units field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContainerTransferBaseTransferQuantity) GetUnits() string {
	if o == nil || isNil(o.Units.Get()) {
		var ret string
		return ret
	}
	return *o.Units.Get()
}

// GetUnitsOk returns a tuple with the Units field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContainerTransferBaseTransferQuantity) GetUnitsOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Units.Get(), o.Units.IsSet()
}

// HasUnits returns a boolean if a field has been set.
func (o *ContainerTransferBaseTransferQuantity) HasUnits() bool {
	if o != nil && o.Units.IsSet() {
		return true
	}

	return false
}

// SetUnits gets a reference to the given NullableString and assigns it to the Units field.
func (o *ContainerTransferBaseTransferQuantity) SetUnits(v string) {
	o.Units.Set(&v)
}
// SetUnitsNil sets the value for Units to be an explicit nil
func (o *ContainerTransferBaseTransferQuantity) SetUnitsNil() {
	o.Units.Set(nil)
}

// UnsetUnits ensures that no value is present for Units, not even an explicit nil
func (o *ContainerTransferBaseTransferQuantity) UnsetUnits() {
	o.Units.Unset()
}

// GetValue returns the Value field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContainerTransferBaseTransferQuantity) GetValue() float32 {
	if o == nil || isNil(o.Value.Get()) {
		var ret float32
		return ret
	}
	return *o.Value.Get()
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContainerTransferBaseTransferQuantity) GetValueOk() (*float32, bool) {
	if o == nil {
    return nil, false
	}
	return o.Value.Get(), o.Value.IsSet()
}

// HasValue returns a boolean if a field has been set.
func (o *ContainerTransferBaseTransferQuantity) HasValue() bool {
	if o != nil && o.Value.IsSet() {
		return true
	}

	return false
}

// SetValue gets a reference to the given NullableFloat32 and assigns it to the Value field.
func (o *ContainerTransferBaseTransferQuantity) SetValue(v float32) {
	o.Value.Set(&v)
}
// SetValueNil sets the value for Value to be an explicit nil
func (o *ContainerTransferBaseTransferQuantity) SetValueNil() {
	o.Value.Set(nil)
}

// UnsetValue ensures that no value is present for Value, not even an explicit nil
func (o *ContainerTransferBaseTransferQuantity) UnsetValue() {
	o.Value.Unset()
}

func (o ContainerTransferBaseTransferQuantity) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Units.IsSet() {
		toSerialize["units"] = o.Units.Get()
	}
	if o.Value.IsSet() {
		toSerialize["value"] = o.Value.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableContainerTransferBaseTransferQuantity struct {
	value *ContainerTransferBaseTransferQuantity
	isSet bool
}

func (v NullableContainerTransferBaseTransferQuantity) Get() *ContainerTransferBaseTransferQuantity {
	return v.value
}

func (v *NullableContainerTransferBaseTransferQuantity) Set(val *ContainerTransferBaseTransferQuantity) {
	v.value = val
	v.isSet = true
}

func (v NullableContainerTransferBaseTransferQuantity) IsSet() bool {
	return v.isSet
}

func (v *NullableContainerTransferBaseTransferQuantity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainerTransferBaseTransferQuantity(val *ContainerTransferBaseTransferQuantity) *NullableContainerTransferBaseTransferQuantity {
	return &NullableContainerTransferBaseTransferQuantity{value: val, isSet: true}
}

func (v NullableContainerTransferBaseTransferQuantity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainerTransferBaseTransferQuantity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


