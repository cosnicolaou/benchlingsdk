/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// DnaOligosPaginatedListAllOf struct for DnaOligosPaginatedListAllOf
type DnaOligosPaginatedListAllOf struct {
	DnaOligos []DnaOligo `json:"dnaOligos,omitempty"`
}

// NewDnaOligosPaginatedListAllOf instantiates a new DnaOligosPaginatedListAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDnaOligosPaginatedListAllOf() *DnaOligosPaginatedListAllOf {
	this := DnaOligosPaginatedListAllOf{}
	return &this
}

// NewDnaOligosPaginatedListAllOfWithDefaults instantiates a new DnaOligosPaginatedListAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDnaOligosPaginatedListAllOfWithDefaults() *DnaOligosPaginatedListAllOf {
	this := DnaOligosPaginatedListAllOf{}
	return &this
}

// GetDnaOligos returns the DnaOligos field value if set, zero value otherwise.
func (o *DnaOligosPaginatedListAllOf) GetDnaOligos() []DnaOligo {
	if o == nil || isNil(o.DnaOligos) {
		var ret []DnaOligo
		return ret
	}
	return o.DnaOligos
}

// GetDnaOligosOk returns a tuple with the DnaOligos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnaOligosPaginatedListAllOf) GetDnaOligosOk() ([]DnaOligo, bool) {
	if o == nil || isNil(o.DnaOligos) {
    return nil, false
	}
	return o.DnaOligos, true
}

// HasDnaOligos returns a boolean if a field has been set.
func (o *DnaOligosPaginatedListAllOf) HasDnaOligos() bool {
	if o != nil && !isNil(o.DnaOligos) {
		return true
	}

	return false
}

// SetDnaOligos gets a reference to the given []DnaOligo and assigns it to the DnaOligos field.
func (o *DnaOligosPaginatedListAllOf) SetDnaOligos(v []DnaOligo) {
	o.DnaOligos = v
}

func (o DnaOligosPaginatedListAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.DnaOligos) {
		toSerialize["dnaOligos"] = o.DnaOligos
	}
	return json.Marshal(toSerialize)
}

type NullableDnaOligosPaginatedListAllOf struct {
	value *DnaOligosPaginatedListAllOf
	isSet bool
}

func (v NullableDnaOligosPaginatedListAllOf) Get() *DnaOligosPaginatedListAllOf {
	return v.value
}

func (v *NullableDnaOligosPaginatedListAllOf) Set(val *DnaOligosPaginatedListAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableDnaOligosPaginatedListAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableDnaOligosPaginatedListAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDnaOligosPaginatedListAllOf(val *DnaOligosPaginatedListAllOf) *NullableDnaOligosPaginatedListAllOf {
	return &NullableDnaOligosPaginatedListAllOf{value: val, isSet: true}
}

func (v NullableDnaOligosPaginatedListAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDnaOligosPaginatedListAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


