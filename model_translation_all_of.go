/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// TranslationAllOf struct for TranslationAllOf
type TranslationAllOf struct {
	AminoAcids *string `json:"aminoAcids,omitempty"`
	End *int32 `json:"end,omitempty"`
	// The genetic code to use when translating the nucleotide sequence into amino acids.
	GeneticCode *string `json:"geneticCode,omitempty"`
	Regions []TranslationAllOfRegions `json:"regions,omitempty"`
	Start *int32 `json:"start,omitempty"`
	Strand *int32 `json:"strand,omitempty"`
}

// NewTranslationAllOf instantiates a new TranslationAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTranslationAllOf() *TranslationAllOf {
	this := TranslationAllOf{}
	return &this
}

// NewTranslationAllOfWithDefaults instantiates a new TranslationAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTranslationAllOfWithDefaults() *TranslationAllOf {
	this := TranslationAllOf{}
	return &this
}

// GetAminoAcids returns the AminoAcids field value if set, zero value otherwise.
func (o *TranslationAllOf) GetAminoAcids() string {
	if o == nil || isNil(o.AminoAcids) {
		var ret string
		return ret
	}
	return *o.AminoAcids
}

// GetAminoAcidsOk returns a tuple with the AminoAcids field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranslationAllOf) GetAminoAcidsOk() (*string, bool) {
	if o == nil || isNil(o.AminoAcids) {
    return nil, false
	}
	return o.AminoAcids, true
}

// HasAminoAcids returns a boolean if a field has been set.
func (o *TranslationAllOf) HasAminoAcids() bool {
	if o != nil && !isNil(o.AminoAcids) {
		return true
	}

	return false
}

// SetAminoAcids gets a reference to the given string and assigns it to the AminoAcids field.
func (o *TranslationAllOf) SetAminoAcids(v string) {
	o.AminoAcids = &v
}

// GetEnd returns the End field value if set, zero value otherwise.
func (o *TranslationAllOf) GetEnd() int32 {
	if o == nil || isNil(o.End) {
		var ret int32
		return ret
	}
	return *o.End
}

// GetEndOk returns a tuple with the End field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranslationAllOf) GetEndOk() (*int32, bool) {
	if o == nil || isNil(o.End) {
    return nil, false
	}
	return o.End, true
}

// HasEnd returns a boolean if a field has been set.
func (o *TranslationAllOf) HasEnd() bool {
	if o != nil && !isNil(o.End) {
		return true
	}

	return false
}

// SetEnd gets a reference to the given int32 and assigns it to the End field.
func (o *TranslationAllOf) SetEnd(v int32) {
	o.End = &v
}

// GetGeneticCode returns the GeneticCode field value if set, zero value otherwise.
func (o *TranslationAllOf) GetGeneticCode() string {
	if o == nil || isNil(o.GeneticCode) {
		var ret string
		return ret
	}
	return *o.GeneticCode
}

// GetGeneticCodeOk returns a tuple with the GeneticCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranslationAllOf) GetGeneticCodeOk() (*string, bool) {
	if o == nil || isNil(o.GeneticCode) {
    return nil, false
	}
	return o.GeneticCode, true
}

// HasGeneticCode returns a boolean if a field has been set.
func (o *TranslationAllOf) HasGeneticCode() bool {
	if o != nil && !isNil(o.GeneticCode) {
		return true
	}

	return false
}

// SetGeneticCode gets a reference to the given string and assigns it to the GeneticCode field.
func (o *TranslationAllOf) SetGeneticCode(v string) {
	o.GeneticCode = &v
}

// GetRegions returns the Regions field value if set, zero value otherwise.
func (o *TranslationAllOf) GetRegions() []TranslationAllOfRegions {
	if o == nil || isNil(o.Regions) {
		var ret []TranslationAllOfRegions
		return ret
	}
	return o.Regions
}

// GetRegionsOk returns a tuple with the Regions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranslationAllOf) GetRegionsOk() ([]TranslationAllOfRegions, bool) {
	if o == nil || isNil(o.Regions) {
    return nil, false
	}
	return o.Regions, true
}

// HasRegions returns a boolean if a field has been set.
func (o *TranslationAllOf) HasRegions() bool {
	if o != nil && !isNil(o.Regions) {
		return true
	}

	return false
}

// SetRegions gets a reference to the given []TranslationAllOfRegions and assigns it to the Regions field.
func (o *TranslationAllOf) SetRegions(v []TranslationAllOfRegions) {
	o.Regions = v
}

// GetStart returns the Start field value if set, zero value otherwise.
func (o *TranslationAllOf) GetStart() int32 {
	if o == nil || isNil(o.Start) {
		var ret int32
		return ret
	}
	return *o.Start
}

// GetStartOk returns a tuple with the Start field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranslationAllOf) GetStartOk() (*int32, bool) {
	if o == nil || isNil(o.Start) {
    return nil, false
	}
	return o.Start, true
}

// HasStart returns a boolean if a field has been set.
func (o *TranslationAllOf) HasStart() bool {
	if o != nil && !isNil(o.Start) {
		return true
	}

	return false
}

// SetStart gets a reference to the given int32 and assigns it to the Start field.
func (o *TranslationAllOf) SetStart(v int32) {
	o.Start = &v
}

// GetStrand returns the Strand field value if set, zero value otherwise.
func (o *TranslationAllOf) GetStrand() int32 {
	if o == nil || isNil(o.Strand) {
		var ret int32
		return ret
	}
	return *o.Strand
}

// GetStrandOk returns a tuple with the Strand field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranslationAllOf) GetStrandOk() (*int32, bool) {
	if o == nil || isNil(o.Strand) {
    return nil, false
	}
	return o.Strand, true
}

// HasStrand returns a boolean if a field has been set.
func (o *TranslationAllOf) HasStrand() bool {
	if o != nil && !isNil(o.Strand) {
		return true
	}

	return false
}

// SetStrand gets a reference to the given int32 and assigns it to the Strand field.
func (o *TranslationAllOf) SetStrand(v int32) {
	o.Strand = &v
}

func (o TranslationAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AminoAcids) {
		toSerialize["aminoAcids"] = o.AminoAcids
	}
	if !isNil(o.End) {
		toSerialize["end"] = o.End
	}
	if !isNil(o.GeneticCode) {
		toSerialize["geneticCode"] = o.GeneticCode
	}
	if !isNil(o.Regions) {
		toSerialize["regions"] = o.Regions
	}
	if !isNil(o.Start) {
		toSerialize["start"] = o.Start
	}
	if !isNil(o.Strand) {
		toSerialize["strand"] = o.Strand
	}
	return json.Marshal(toSerialize)
}

type NullableTranslationAllOf struct {
	value *TranslationAllOf
	isSet bool
}

func (v NullableTranslationAllOf) Get() *TranslationAllOf {
	return v.value
}

func (v *NullableTranslationAllOf) Set(val *TranslationAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableTranslationAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableTranslationAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTranslationAllOf(val *TranslationAllOf) *NullableTranslationAllOf {
	return &NullableTranslationAllOf{value: val, isSet: true}
}

func (v NullableTranslationAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTranslationAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


