/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// BlobPartCreate struct for BlobPartCreate
type BlobPartCreate struct {
	Data64 string `json:"data64"`
	Md5 string `json:"md5"`
	// An integer between 1 to 10,000, inclusive. The part number must be unique per part and indicates the ordering of the part inside the final blob. The part numbers do not need to be consecutive. 
	PartNumber int32 `json:"partNumber"`
}

// NewBlobPartCreate instantiates a new BlobPartCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlobPartCreate(data64 string, md5 string, partNumber int32) *BlobPartCreate {
	this := BlobPartCreate{}
	this.Data64 = data64
	this.Md5 = md5
	this.PartNumber = partNumber
	return &this
}

// NewBlobPartCreateWithDefaults instantiates a new BlobPartCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlobPartCreateWithDefaults() *BlobPartCreate {
	this := BlobPartCreate{}
	return &this
}

// GetData64 returns the Data64 field value
func (o *BlobPartCreate) GetData64() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Data64
}

// GetData64Ok returns a tuple with the Data64 field value
// and a boolean to check if the value has been set.
func (o *BlobPartCreate) GetData64Ok() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Data64, true
}

// SetData64 sets field value
func (o *BlobPartCreate) SetData64(v string) {
	o.Data64 = v
}

// GetMd5 returns the Md5 field value
func (o *BlobPartCreate) GetMd5() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Md5
}

// GetMd5Ok returns a tuple with the Md5 field value
// and a boolean to check if the value has been set.
func (o *BlobPartCreate) GetMd5Ok() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Md5, true
}

// SetMd5 sets field value
func (o *BlobPartCreate) SetMd5(v string) {
	o.Md5 = v
}

// GetPartNumber returns the PartNumber field value
func (o *BlobPartCreate) GetPartNumber() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PartNumber
}

// GetPartNumberOk returns a tuple with the PartNumber field value
// and a boolean to check if the value has been set.
func (o *BlobPartCreate) GetPartNumberOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.PartNumber, true
}

// SetPartNumber sets field value
func (o *BlobPartCreate) SetPartNumber(v int32) {
	o.PartNumber = v
}

func (o BlobPartCreate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["data64"] = o.Data64
	}
	if true {
		toSerialize["md5"] = o.Md5
	}
	if true {
		toSerialize["partNumber"] = o.PartNumber
	}
	return json.Marshal(toSerialize)
}

type NullableBlobPartCreate struct {
	value *BlobPartCreate
	isSet bool
}

func (v NullableBlobPartCreate) Get() *BlobPartCreate {
	return v.value
}

func (v *NullableBlobPartCreate) Set(val *BlobPartCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableBlobPartCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableBlobPartCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlobPartCreate(val *BlobPartCreate) *NullableBlobPartCreate {
	return &NullableBlobPartCreate{value: val, isSet: true}
}

func (v NullableBlobPartCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlobPartCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


