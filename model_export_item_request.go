/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// ExportItemRequest struct for ExportItemRequest
type ExportItemRequest struct {
	// ID of the item to export
	Id string `json:"id"`
}

// NewExportItemRequest instantiates a new ExportItemRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExportItemRequest(id string) *ExportItemRequest {
	this := ExportItemRequest{}
	this.Id = id
	return &this
}

// NewExportItemRequestWithDefaults instantiates a new ExportItemRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExportItemRequestWithDefaults() *ExportItemRequest {
	this := ExportItemRequest{}
	return &this
}

// GetId returns the Id field value
func (o *ExportItemRequest) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ExportItemRequest) GetIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ExportItemRequest) SetId(v string) {
	o.Id = v
}

func (o ExportItemRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	return json.Marshal(toSerialize)
}

type NullableExportItemRequest struct {
	value *ExportItemRequest
	isSet bool
}

func (v NullableExportItemRequest) Get() *ExportItemRequest {
	return v.value
}

func (v *NullableExportItemRequest) Set(val *ExportItemRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableExportItemRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableExportItemRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExportItemRequest(val *ExportItemRequest) *NullableExportItemRequest {
	return &NullableExportItemRequest{value: val, isSet: true}
}

func (v NullableExportItemRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExportItemRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


