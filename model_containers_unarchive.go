/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// ContainersUnarchive struct for ContainersUnarchive
type ContainersUnarchive struct {
	// Array of container IDs
	ContainerIds []string `json:"containerIds"`
}

// NewContainersUnarchive instantiates a new ContainersUnarchive object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContainersUnarchive(containerIds []string) *ContainersUnarchive {
	this := ContainersUnarchive{}
	this.ContainerIds = containerIds
	return &this
}

// NewContainersUnarchiveWithDefaults instantiates a new ContainersUnarchive object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContainersUnarchiveWithDefaults() *ContainersUnarchive {
	this := ContainersUnarchive{}
	return &this
}

// GetContainerIds returns the ContainerIds field value
func (o *ContainersUnarchive) GetContainerIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ContainerIds
}

// GetContainerIdsOk returns a tuple with the ContainerIds field value
// and a boolean to check if the value has been set.
func (o *ContainersUnarchive) GetContainerIdsOk() ([]string, bool) {
	if o == nil {
    return nil, false
	}
	return o.ContainerIds, true
}

// SetContainerIds sets field value
func (o *ContainersUnarchive) SetContainerIds(v []string) {
	o.ContainerIds = v
}

func (o ContainersUnarchive) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["containerIds"] = o.ContainerIds
	}
	return json.Marshal(toSerialize)
}

type NullableContainersUnarchive struct {
	value *ContainersUnarchive
	isSet bool
}

func (v NullableContainersUnarchive) Get() *ContainersUnarchive {
	return v.value
}

func (v *NullableContainersUnarchive) Set(val *ContainersUnarchive) {
	v.value = val
	v.isSet = true
}

func (v NullableContainersUnarchive) IsSet() bool {
	return v.isSet
}

func (v *NullableContainersUnarchive) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainersUnarchive(val *ContainersUnarchive) *NullableContainersUnarchive {
	return &NullableContainersUnarchive{value: val, isSet: true}
}

func (v NullableContainersUnarchive) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainersUnarchive) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


