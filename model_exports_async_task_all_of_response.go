/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// ExportsAsyncTaskAllOfResponse struct for ExportsAsyncTaskAllOfResponse
type ExportsAsyncTaskAllOfResponse struct {
	DownloadURL *string `json:"downloadURL,omitempty"`
}

// NewExportsAsyncTaskAllOfResponse instantiates a new ExportsAsyncTaskAllOfResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExportsAsyncTaskAllOfResponse() *ExportsAsyncTaskAllOfResponse {
	this := ExportsAsyncTaskAllOfResponse{}
	return &this
}

// NewExportsAsyncTaskAllOfResponseWithDefaults instantiates a new ExportsAsyncTaskAllOfResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExportsAsyncTaskAllOfResponseWithDefaults() *ExportsAsyncTaskAllOfResponse {
	this := ExportsAsyncTaskAllOfResponse{}
	return &this
}

// GetDownloadURL returns the DownloadURL field value if set, zero value otherwise.
func (o *ExportsAsyncTaskAllOfResponse) GetDownloadURL() string {
	if o == nil || isNil(o.DownloadURL) {
		var ret string
		return ret
	}
	return *o.DownloadURL
}

// GetDownloadURLOk returns a tuple with the DownloadURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportsAsyncTaskAllOfResponse) GetDownloadURLOk() (*string, bool) {
	if o == nil || isNil(o.DownloadURL) {
    return nil, false
	}
	return o.DownloadURL, true
}

// HasDownloadURL returns a boolean if a field has been set.
func (o *ExportsAsyncTaskAllOfResponse) HasDownloadURL() bool {
	if o != nil && !isNil(o.DownloadURL) {
		return true
	}

	return false
}

// SetDownloadURL gets a reference to the given string and assigns it to the DownloadURL field.
func (o *ExportsAsyncTaskAllOfResponse) SetDownloadURL(v string) {
	o.DownloadURL = &v
}

func (o ExportsAsyncTaskAllOfResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.DownloadURL) {
		toSerialize["downloadURL"] = o.DownloadURL
	}
	return json.Marshal(toSerialize)
}

type NullableExportsAsyncTaskAllOfResponse struct {
	value *ExportsAsyncTaskAllOfResponse
	isSet bool
}

func (v NullableExportsAsyncTaskAllOfResponse) Get() *ExportsAsyncTaskAllOfResponse {
	return v.value
}

func (v *NullableExportsAsyncTaskAllOfResponse) Set(val *ExportsAsyncTaskAllOfResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableExportsAsyncTaskAllOfResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableExportsAsyncTaskAllOfResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExportsAsyncTaskAllOfResponse(val *ExportsAsyncTaskAllOfResponse) *NullableExportsAsyncTaskAllOfResponse {
	return &NullableExportsAsyncTaskAllOfResponse{value: val, isSet: true}
}

func (v NullableExportsAsyncTaskAllOfResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExportsAsyncTaskAllOfResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


