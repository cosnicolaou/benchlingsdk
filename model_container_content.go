/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// ContainerContent struct for ContainerContent
type ContainerContent struct {
	Batch NullableContainerContentBatch `json:"batch,omitempty"`
	Concentration *Measurement `json:"concentration,omitempty"`
	Entity NullableContainerContentEntity `json:"entity,omitempty"`
}

// NewContainerContent instantiates a new ContainerContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContainerContent() *ContainerContent {
	this := ContainerContent{}
	return &this
}

// NewContainerContentWithDefaults instantiates a new ContainerContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContainerContentWithDefaults() *ContainerContent {
	this := ContainerContent{}
	return &this
}

// GetBatch returns the Batch field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContainerContent) GetBatch() ContainerContentBatch {
	if o == nil || isNil(o.Batch.Get()) {
		var ret ContainerContentBatch
		return ret
	}
	return *o.Batch.Get()
}

// GetBatchOk returns a tuple with the Batch field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContainerContent) GetBatchOk() (*ContainerContentBatch, bool) {
	if o == nil {
    return nil, false
	}
	return o.Batch.Get(), o.Batch.IsSet()
}

// HasBatch returns a boolean if a field has been set.
func (o *ContainerContent) HasBatch() bool {
	if o != nil && o.Batch.IsSet() {
		return true
	}

	return false
}

// SetBatch gets a reference to the given NullableContainerContentBatch and assigns it to the Batch field.
func (o *ContainerContent) SetBatch(v ContainerContentBatch) {
	o.Batch.Set(&v)
}
// SetBatchNil sets the value for Batch to be an explicit nil
func (o *ContainerContent) SetBatchNil() {
	o.Batch.Set(nil)
}

// UnsetBatch ensures that no value is present for Batch, not even an explicit nil
func (o *ContainerContent) UnsetBatch() {
	o.Batch.Unset()
}

// GetConcentration returns the Concentration field value if set, zero value otherwise.
func (o *ContainerContent) GetConcentration() Measurement {
	if o == nil || isNil(o.Concentration) {
		var ret Measurement
		return ret
	}
	return *o.Concentration
}

// GetConcentrationOk returns a tuple with the Concentration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerContent) GetConcentrationOk() (*Measurement, bool) {
	if o == nil || isNil(o.Concentration) {
    return nil, false
	}
	return o.Concentration, true
}

// HasConcentration returns a boolean if a field has been set.
func (o *ContainerContent) HasConcentration() bool {
	if o != nil && !isNil(o.Concentration) {
		return true
	}

	return false
}

// SetConcentration gets a reference to the given Measurement and assigns it to the Concentration field.
func (o *ContainerContent) SetConcentration(v Measurement) {
	o.Concentration = &v
}

// GetEntity returns the Entity field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContainerContent) GetEntity() ContainerContentEntity {
	if o == nil || isNil(o.Entity.Get()) {
		var ret ContainerContentEntity
		return ret
	}
	return *o.Entity.Get()
}

// GetEntityOk returns a tuple with the Entity field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContainerContent) GetEntityOk() (*ContainerContentEntity, bool) {
	if o == nil {
    return nil, false
	}
	return o.Entity.Get(), o.Entity.IsSet()
}

// HasEntity returns a boolean if a field has been set.
func (o *ContainerContent) HasEntity() bool {
	if o != nil && o.Entity.IsSet() {
		return true
	}

	return false
}

// SetEntity gets a reference to the given NullableContainerContentEntity and assigns it to the Entity field.
func (o *ContainerContent) SetEntity(v ContainerContentEntity) {
	o.Entity.Set(&v)
}
// SetEntityNil sets the value for Entity to be an explicit nil
func (o *ContainerContent) SetEntityNil() {
	o.Entity.Set(nil)
}

// UnsetEntity ensures that no value is present for Entity, not even an explicit nil
func (o *ContainerContent) UnsetEntity() {
	o.Entity.Unset()
}

func (o ContainerContent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Batch.IsSet() {
		toSerialize["batch"] = o.Batch.Get()
	}
	if !isNil(o.Concentration) {
		toSerialize["concentration"] = o.Concentration
	}
	if o.Entity.IsSet() {
		toSerialize["entity"] = o.Entity.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableContainerContent struct {
	value *ContainerContent
	isSet bool
}

func (v NullableContainerContent) Get() *ContainerContent {
	return v.value
}

func (v *NullableContainerContent) Set(val *ContainerContent) {
	v.value = val
	v.isSet = true
}

func (v NullableContainerContent) IsSet() bool {
	return v.isSet
}

func (v *NullableContainerContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainerContent(val *ContainerContent) *NullableContainerContent {
	return &NullableContainerContent{value: val, isSet: true}
}

func (v NullableContainerContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainerContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


