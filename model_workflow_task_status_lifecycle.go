/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// WorkflowTaskStatusLifecycle struct for WorkflowTaskStatusLifecycle
type WorkflowTaskStatusLifecycle struct {
	Id *string `json:"id,omitempty"`
	InitialStatus *WorkflowTaskStatus `json:"initialStatus,omitempty"`
	Name *string `json:"name,omitempty"`
	Statuses []WorkflowTaskStatus `json:"statuses,omitempty"`
	Transitions []WorkflowTaskStatusLifecycleTransition `json:"transitions,omitempty"`
}

// NewWorkflowTaskStatusLifecycle instantiates a new WorkflowTaskStatusLifecycle object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowTaskStatusLifecycle() *WorkflowTaskStatusLifecycle {
	this := WorkflowTaskStatusLifecycle{}
	return &this
}

// NewWorkflowTaskStatusLifecycleWithDefaults instantiates a new WorkflowTaskStatusLifecycle object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowTaskStatusLifecycleWithDefaults() *WorkflowTaskStatusLifecycle {
	this := WorkflowTaskStatusLifecycle{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *WorkflowTaskStatusLifecycle) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowTaskStatusLifecycle) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *WorkflowTaskStatusLifecycle) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *WorkflowTaskStatusLifecycle) SetId(v string) {
	o.Id = &v
}

// GetInitialStatus returns the InitialStatus field value if set, zero value otherwise.
func (o *WorkflowTaskStatusLifecycle) GetInitialStatus() WorkflowTaskStatus {
	if o == nil || isNil(o.InitialStatus) {
		var ret WorkflowTaskStatus
		return ret
	}
	return *o.InitialStatus
}

// GetInitialStatusOk returns a tuple with the InitialStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowTaskStatusLifecycle) GetInitialStatusOk() (*WorkflowTaskStatus, bool) {
	if o == nil || isNil(o.InitialStatus) {
    return nil, false
	}
	return o.InitialStatus, true
}

// HasInitialStatus returns a boolean if a field has been set.
func (o *WorkflowTaskStatusLifecycle) HasInitialStatus() bool {
	if o != nil && !isNil(o.InitialStatus) {
		return true
	}

	return false
}

// SetInitialStatus gets a reference to the given WorkflowTaskStatus and assigns it to the InitialStatus field.
func (o *WorkflowTaskStatusLifecycle) SetInitialStatus(v WorkflowTaskStatus) {
	o.InitialStatus = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *WorkflowTaskStatusLifecycle) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowTaskStatusLifecycle) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *WorkflowTaskStatusLifecycle) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *WorkflowTaskStatusLifecycle) SetName(v string) {
	o.Name = &v
}

// GetStatuses returns the Statuses field value if set, zero value otherwise.
func (o *WorkflowTaskStatusLifecycle) GetStatuses() []WorkflowTaskStatus {
	if o == nil || isNil(o.Statuses) {
		var ret []WorkflowTaskStatus
		return ret
	}
	return o.Statuses
}

// GetStatusesOk returns a tuple with the Statuses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowTaskStatusLifecycle) GetStatusesOk() ([]WorkflowTaskStatus, bool) {
	if o == nil || isNil(o.Statuses) {
    return nil, false
	}
	return o.Statuses, true
}

// HasStatuses returns a boolean if a field has been set.
func (o *WorkflowTaskStatusLifecycle) HasStatuses() bool {
	if o != nil && !isNil(o.Statuses) {
		return true
	}

	return false
}

// SetStatuses gets a reference to the given []WorkflowTaskStatus and assigns it to the Statuses field.
func (o *WorkflowTaskStatusLifecycle) SetStatuses(v []WorkflowTaskStatus) {
	o.Statuses = v
}

// GetTransitions returns the Transitions field value if set, zero value otherwise.
func (o *WorkflowTaskStatusLifecycle) GetTransitions() []WorkflowTaskStatusLifecycleTransition {
	if o == nil || isNil(o.Transitions) {
		var ret []WorkflowTaskStatusLifecycleTransition
		return ret
	}
	return o.Transitions
}

// GetTransitionsOk returns a tuple with the Transitions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowTaskStatusLifecycle) GetTransitionsOk() ([]WorkflowTaskStatusLifecycleTransition, bool) {
	if o == nil || isNil(o.Transitions) {
    return nil, false
	}
	return o.Transitions, true
}

// HasTransitions returns a boolean if a field has been set.
func (o *WorkflowTaskStatusLifecycle) HasTransitions() bool {
	if o != nil && !isNil(o.Transitions) {
		return true
	}

	return false
}

// SetTransitions gets a reference to the given []WorkflowTaskStatusLifecycleTransition and assigns it to the Transitions field.
func (o *WorkflowTaskStatusLifecycle) SetTransitions(v []WorkflowTaskStatusLifecycleTransition) {
	o.Transitions = v
}

func (o WorkflowTaskStatusLifecycle) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.InitialStatus) {
		toSerialize["initialStatus"] = o.InitialStatus
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Statuses) {
		toSerialize["statuses"] = o.Statuses
	}
	if !isNil(o.Transitions) {
		toSerialize["transitions"] = o.Transitions
	}
	return json.Marshal(toSerialize)
}

type NullableWorkflowTaskStatusLifecycle struct {
	value *WorkflowTaskStatusLifecycle
	isSet bool
}

func (v NullableWorkflowTaskStatusLifecycle) Get() *WorkflowTaskStatusLifecycle {
	return v.value
}

func (v *NullableWorkflowTaskStatusLifecycle) Set(val *WorkflowTaskStatusLifecycle) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowTaskStatusLifecycle) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowTaskStatusLifecycle) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowTaskStatusLifecycle(val *WorkflowTaskStatusLifecycle) *NullableWorkflowTaskStatusLifecycle {
	return &NullableWorkflowTaskStatusLifecycle{value: val, isSet: true}
}

func (v NullableWorkflowTaskStatusLifecycle) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowTaskStatusLifecycle) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


