/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// SampleGroupsStatusUpdate Specification to update status of sample groups on the request which were executed.
type SampleGroupsStatusUpdate struct {
	SampleGroups []SampleGroupStatusUpdate `json:"sampleGroups"`
}

// NewSampleGroupsStatusUpdate instantiates a new SampleGroupsStatusUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSampleGroupsStatusUpdate(sampleGroups []SampleGroupStatusUpdate) *SampleGroupsStatusUpdate {
	this := SampleGroupsStatusUpdate{}
	this.SampleGroups = sampleGroups
	return &this
}

// NewSampleGroupsStatusUpdateWithDefaults instantiates a new SampleGroupsStatusUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSampleGroupsStatusUpdateWithDefaults() *SampleGroupsStatusUpdate {
	this := SampleGroupsStatusUpdate{}
	return &this
}

// GetSampleGroups returns the SampleGroups field value
func (o *SampleGroupsStatusUpdate) GetSampleGroups() []SampleGroupStatusUpdate {
	if o == nil {
		var ret []SampleGroupStatusUpdate
		return ret
	}

	return o.SampleGroups
}

// GetSampleGroupsOk returns a tuple with the SampleGroups field value
// and a boolean to check if the value has been set.
func (o *SampleGroupsStatusUpdate) GetSampleGroupsOk() ([]SampleGroupStatusUpdate, bool) {
	if o == nil {
    return nil, false
	}
	return o.SampleGroups, true
}

// SetSampleGroups sets field value
func (o *SampleGroupsStatusUpdate) SetSampleGroups(v []SampleGroupStatusUpdate) {
	o.SampleGroups = v
}

func (o SampleGroupsStatusUpdate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["sampleGroups"] = o.SampleGroups
	}
	return json.Marshal(toSerialize)
}

type NullableSampleGroupsStatusUpdate struct {
	value *SampleGroupsStatusUpdate
	isSet bool
}

func (v NullableSampleGroupsStatusUpdate) Get() *SampleGroupsStatusUpdate {
	return v.value
}

func (v *NullableSampleGroupsStatusUpdate) Set(val *SampleGroupsStatusUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableSampleGroupsStatusUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableSampleGroupsStatusUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSampleGroupsStatusUpdate(val *SampleGroupsStatusUpdate) *NullableSampleGroupsStatusUpdate {
	return &NullableSampleGroupsStatusUpdate{value: val, isSet: true}
}

func (v NullableSampleGroupsStatusUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSampleGroupsStatusUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


