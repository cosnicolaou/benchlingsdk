/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
	"time"
)

// WarehouseCredentials struct for WarehouseCredentials
type WarehouseCredentials struct {
	// The time after which new connections using the username/password will not be permitted. Upon expiration, currently open connections are not terminated. 
	ExpiresAt *time.Time `json:"expiresAt,omitempty"`
	// The password to connect to the warehouse.
	Password *string `json:"password,omitempty"`
	// The username to connect to the warehouse.
	Username *string `json:"username,omitempty"`
}

// NewWarehouseCredentials instantiates a new WarehouseCredentials object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWarehouseCredentials() *WarehouseCredentials {
	this := WarehouseCredentials{}
	return &this
}

// NewWarehouseCredentialsWithDefaults instantiates a new WarehouseCredentials object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWarehouseCredentialsWithDefaults() *WarehouseCredentials {
	this := WarehouseCredentials{}
	return &this
}

// GetExpiresAt returns the ExpiresAt field value if set, zero value otherwise.
func (o *WarehouseCredentials) GetExpiresAt() time.Time {
	if o == nil || isNil(o.ExpiresAt) {
		var ret time.Time
		return ret
	}
	return *o.ExpiresAt
}

// GetExpiresAtOk returns a tuple with the ExpiresAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WarehouseCredentials) GetExpiresAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.ExpiresAt) {
    return nil, false
	}
	return o.ExpiresAt, true
}

// HasExpiresAt returns a boolean if a field has been set.
func (o *WarehouseCredentials) HasExpiresAt() bool {
	if o != nil && !isNil(o.ExpiresAt) {
		return true
	}

	return false
}

// SetExpiresAt gets a reference to the given time.Time and assigns it to the ExpiresAt field.
func (o *WarehouseCredentials) SetExpiresAt(v time.Time) {
	o.ExpiresAt = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *WarehouseCredentials) GetPassword() string {
	if o == nil || isNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WarehouseCredentials) GetPasswordOk() (*string, bool) {
	if o == nil || isNil(o.Password) {
    return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *WarehouseCredentials) HasPassword() bool {
	if o != nil && !isNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *WarehouseCredentials) SetPassword(v string) {
	o.Password = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *WarehouseCredentials) GetUsername() string {
	if o == nil || isNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WarehouseCredentials) GetUsernameOk() (*string, bool) {
	if o == nil || isNil(o.Username) {
    return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *WarehouseCredentials) HasUsername() bool {
	if o != nil && !isNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *WarehouseCredentials) SetUsername(v string) {
	o.Username = &v
}

func (o WarehouseCredentials) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ExpiresAt) {
		toSerialize["expiresAt"] = o.ExpiresAt
	}
	if !isNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !isNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	return json.Marshal(toSerialize)
}

type NullableWarehouseCredentials struct {
	value *WarehouseCredentials
	isSet bool
}

func (v NullableWarehouseCredentials) Get() *WarehouseCredentials {
	return v.value
}

func (v *NullableWarehouseCredentials) Set(val *WarehouseCredentials) {
	v.value = val
	v.isSet = true
}

func (v NullableWarehouseCredentials) IsSet() bool {
	return v.isSet
}

func (v *NullableWarehouseCredentials) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWarehouseCredentials(val *WarehouseCredentials) *NullableWarehouseCredentials {
	return &NullableWarehouseCredentials{value: val, isSet: true}
}

func (v NullableWarehouseCredentials) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWarehouseCredentials) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


