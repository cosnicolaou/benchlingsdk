/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// RequestSampleWithBatch struct for RequestSampleWithBatch
type RequestSampleWithBatch struct {
	BatchId string `json:"batchId"`
	ContainerId *string `json:"containerId,omitempty"`
}

// NewRequestSampleWithBatch instantiates a new RequestSampleWithBatch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequestSampleWithBatch(batchId string) *RequestSampleWithBatch {
	this := RequestSampleWithBatch{}
	this.BatchId = batchId
	return &this
}

// NewRequestSampleWithBatchWithDefaults instantiates a new RequestSampleWithBatch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequestSampleWithBatchWithDefaults() *RequestSampleWithBatch {
	this := RequestSampleWithBatch{}
	return &this
}

// GetBatchId returns the BatchId field value
func (o *RequestSampleWithBatch) GetBatchId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BatchId
}

// GetBatchIdOk returns a tuple with the BatchId field value
// and a boolean to check if the value has been set.
func (o *RequestSampleWithBatch) GetBatchIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.BatchId, true
}

// SetBatchId sets field value
func (o *RequestSampleWithBatch) SetBatchId(v string) {
	o.BatchId = v
}

// GetContainerId returns the ContainerId field value if set, zero value otherwise.
func (o *RequestSampleWithBatch) GetContainerId() string {
	if o == nil || isNil(o.ContainerId) {
		var ret string
		return ret
	}
	return *o.ContainerId
}

// GetContainerIdOk returns a tuple with the ContainerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestSampleWithBatch) GetContainerIdOk() (*string, bool) {
	if o == nil || isNil(o.ContainerId) {
    return nil, false
	}
	return o.ContainerId, true
}

// HasContainerId returns a boolean if a field has been set.
func (o *RequestSampleWithBatch) HasContainerId() bool {
	if o != nil && !isNil(o.ContainerId) {
		return true
	}

	return false
}

// SetContainerId gets a reference to the given string and assigns it to the ContainerId field.
func (o *RequestSampleWithBatch) SetContainerId(v string) {
	o.ContainerId = &v
}

func (o RequestSampleWithBatch) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["batchId"] = o.BatchId
	}
	if !isNil(o.ContainerId) {
		toSerialize["containerId"] = o.ContainerId
	}
	return json.Marshal(toSerialize)
}

type NullableRequestSampleWithBatch struct {
	value *RequestSampleWithBatch
	isSet bool
}

func (v NullableRequestSampleWithBatch) Get() *RequestSampleWithBatch {
	return v.value
}

func (v *NullableRequestSampleWithBatch) Set(val *RequestSampleWithBatch) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestSampleWithBatch) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestSampleWithBatch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestSampleWithBatch(val *RequestSampleWithBatch) *NullableRequestSampleWithBatch {
	return &NullableRequestSampleWithBatch{value: val, isSet: true}
}

func (v NullableRequestSampleWithBatch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestSampleWithBatch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


