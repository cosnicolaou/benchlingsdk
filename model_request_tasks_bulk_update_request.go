/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// RequestTasksBulkUpdateRequest A request body for bulk updating request tasks. 
type RequestTasksBulkUpdateRequest struct {
	// The tasks to update
	Tasks []RequestTaskBase `json:"tasks"`
}

// NewRequestTasksBulkUpdateRequest instantiates a new RequestTasksBulkUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequestTasksBulkUpdateRequest(tasks []RequestTaskBase) *RequestTasksBulkUpdateRequest {
	this := RequestTasksBulkUpdateRequest{}
	this.Tasks = tasks
	return &this
}

// NewRequestTasksBulkUpdateRequestWithDefaults instantiates a new RequestTasksBulkUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequestTasksBulkUpdateRequestWithDefaults() *RequestTasksBulkUpdateRequest {
	this := RequestTasksBulkUpdateRequest{}
	return &this
}

// GetTasks returns the Tasks field value
func (o *RequestTasksBulkUpdateRequest) GetTasks() []RequestTaskBase {
	if o == nil {
		var ret []RequestTaskBase
		return ret
	}

	return o.Tasks
}

// GetTasksOk returns a tuple with the Tasks field value
// and a boolean to check if the value has been set.
func (o *RequestTasksBulkUpdateRequest) GetTasksOk() ([]RequestTaskBase, bool) {
	if o == nil {
    return nil, false
	}
	return o.Tasks, true
}

// SetTasks sets field value
func (o *RequestTasksBulkUpdateRequest) SetTasks(v []RequestTaskBase) {
	o.Tasks = v
}

func (o RequestTasksBulkUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["tasks"] = o.Tasks
	}
	return json.Marshal(toSerialize)
}

type NullableRequestTasksBulkUpdateRequest struct {
	value *RequestTasksBulkUpdateRequest
	isSet bool
}

func (v NullableRequestTasksBulkUpdateRequest) Get() *RequestTasksBulkUpdateRequest {
	return v.value
}

func (v *NullableRequestTasksBulkUpdateRequest) Set(val *RequestTasksBulkUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestTasksBulkUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestTasksBulkUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestTasksBulkUpdateRequest(val *RequestTasksBulkUpdateRequest) *NullableRequestTasksBulkUpdateRequest {
	return &NullableRequestTasksBulkUpdateRequest{value: val, isSet: true}
}

func (v NullableRequestTasksBulkUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestTasksBulkUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


