/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// ContainerBulkUpdateItemAllOf struct for ContainerBulkUpdateItemAllOf
type ContainerBulkUpdateItemAllOf struct {
	ContainerId string `json:"containerId"`
	Quantity *ContainerQuantity `json:"quantity,omitempty"`
	Volume *DeprecatedContainerVolumeForInput `json:"volume,omitempty"`
}

// NewContainerBulkUpdateItemAllOf instantiates a new ContainerBulkUpdateItemAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContainerBulkUpdateItemAllOf(containerId string) *ContainerBulkUpdateItemAllOf {
	this := ContainerBulkUpdateItemAllOf{}
	this.ContainerId = containerId
	return &this
}

// NewContainerBulkUpdateItemAllOfWithDefaults instantiates a new ContainerBulkUpdateItemAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContainerBulkUpdateItemAllOfWithDefaults() *ContainerBulkUpdateItemAllOf {
	this := ContainerBulkUpdateItemAllOf{}
	return &this
}

// GetContainerId returns the ContainerId field value
func (o *ContainerBulkUpdateItemAllOf) GetContainerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContainerId
}

// GetContainerIdOk returns a tuple with the ContainerId field value
// and a boolean to check if the value has been set.
func (o *ContainerBulkUpdateItemAllOf) GetContainerIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ContainerId, true
}

// SetContainerId sets field value
func (o *ContainerBulkUpdateItemAllOf) SetContainerId(v string) {
	o.ContainerId = v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *ContainerBulkUpdateItemAllOf) GetQuantity() ContainerQuantity {
	if o == nil || isNil(o.Quantity) {
		var ret ContainerQuantity
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerBulkUpdateItemAllOf) GetQuantityOk() (*ContainerQuantity, bool) {
	if o == nil || isNil(o.Quantity) {
    return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *ContainerBulkUpdateItemAllOf) HasQuantity() bool {
	if o != nil && !isNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given ContainerQuantity and assigns it to the Quantity field.
func (o *ContainerBulkUpdateItemAllOf) SetQuantity(v ContainerQuantity) {
	o.Quantity = &v
}

// GetVolume returns the Volume field value if set, zero value otherwise.
func (o *ContainerBulkUpdateItemAllOf) GetVolume() DeprecatedContainerVolumeForInput {
	if o == nil || isNil(o.Volume) {
		var ret DeprecatedContainerVolumeForInput
		return ret
	}
	return *o.Volume
}

// GetVolumeOk returns a tuple with the Volume field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerBulkUpdateItemAllOf) GetVolumeOk() (*DeprecatedContainerVolumeForInput, bool) {
	if o == nil || isNil(o.Volume) {
    return nil, false
	}
	return o.Volume, true
}

// HasVolume returns a boolean if a field has been set.
func (o *ContainerBulkUpdateItemAllOf) HasVolume() bool {
	if o != nil && !isNil(o.Volume) {
		return true
	}

	return false
}

// SetVolume gets a reference to the given DeprecatedContainerVolumeForInput and assigns it to the Volume field.
func (o *ContainerBulkUpdateItemAllOf) SetVolume(v DeprecatedContainerVolumeForInput) {
	o.Volume = &v
}

func (o ContainerBulkUpdateItemAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["containerId"] = o.ContainerId
	}
	if !isNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	if !isNil(o.Volume) {
		toSerialize["volume"] = o.Volume
	}
	return json.Marshal(toSerialize)
}

type NullableContainerBulkUpdateItemAllOf struct {
	value *ContainerBulkUpdateItemAllOf
	isSet bool
}

func (v NullableContainerBulkUpdateItemAllOf) Get() *ContainerBulkUpdateItemAllOf {
	return v.value
}

func (v *NullableContainerBulkUpdateItemAllOf) Set(val *ContainerBulkUpdateItemAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableContainerBulkUpdateItemAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableContainerBulkUpdateItemAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainerBulkUpdateItemAllOf(val *ContainerBulkUpdateItemAllOf) *NullableContainerBulkUpdateItemAllOf {
	return &NullableContainerBulkUpdateItemAllOf{value: val, isSet: true}
}

func (v NullableContainerBulkUpdateItemAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainerBulkUpdateItemAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


