/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// AaSequencesUnarchive The request body for unarchiving AA sequences. 
type AaSequencesUnarchive struct {
	AaSequenceIds []string `json:"aaSequenceIds"`
}

// NewAaSequencesUnarchive instantiates a new AaSequencesUnarchive object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAaSequencesUnarchive(aaSequenceIds []string) *AaSequencesUnarchive {
	this := AaSequencesUnarchive{}
	this.AaSequenceIds = aaSequenceIds
	return &this
}

// NewAaSequencesUnarchiveWithDefaults instantiates a new AaSequencesUnarchive object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAaSequencesUnarchiveWithDefaults() *AaSequencesUnarchive {
	this := AaSequencesUnarchive{}
	return &this
}

// GetAaSequenceIds returns the AaSequenceIds field value
func (o *AaSequencesUnarchive) GetAaSequenceIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.AaSequenceIds
}

// GetAaSequenceIdsOk returns a tuple with the AaSequenceIds field value
// and a boolean to check if the value has been set.
func (o *AaSequencesUnarchive) GetAaSequenceIdsOk() ([]string, bool) {
	if o == nil {
    return nil, false
	}
	return o.AaSequenceIds, true
}

// SetAaSequenceIds sets field value
func (o *AaSequencesUnarchive) SetAaSequenceIds(v []string) {
	o.AaSequenceIds = v
}

func (o AaSequencesUnarchive) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["aaSequenceIds"] = o.AaSequenceIds
	}
	return json.Marshal(toSerialize)
}

type NullableAaSequencesUnarchive struct {
	value *AaSequencesUnarchive
	isSet bool
}

func (v NullableAaSequencesUnarchive) Get() *AaSequencesUnarchive {
	return v.value
}

func (v *NullableAaSequencesUnarchive) Set(val *AaSequencesUnarchive) {
	v.value = val
	v.isSet = true
}

func (v NullableAaSequencesUnarchive) IsSet() bool {
	return v.isSet
}

func (v *NullableAaSequencesUnarchive) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAaSequencesUnarchive(val *AaSequencesUnarchive) *NullableAaSequencesUnarchive {
	return &NullableAaSequencesUnarchive{value: val, isSet: true}
}

func (v NullableAaSequencesUnarchive) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAaSequencesUnarchive) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


