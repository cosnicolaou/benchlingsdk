/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// LegacyWorkflowStageList struct for LegacyWorkflowStageList
type LegacyWorkflowStageList struct {
	WorkflowStages []LegacyWorkflowStage `json:"workflowStages,omitempty"`
}

// NewLegacyWorkflowStageList instantiates a new LegacyWorkflowStageList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLegacyWorkflowStageList() *LegacyWorkflowStageList {
	this := LegacyWorkflowStageList{}
	return &this
}

// NewLegacyWorkflowStageListWithDefaults instantiates a new LegacyWorkflowStageList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLegacyWorkflowStageListWithDefaults() *LegacyWorkflowStageList {
	this := LegacyWorkflowStageList{}
	return &this
}

// GetWorkflowStages returns the WorkflowStages field value if set, zero value otherwise.
func (o *LegacyWorkflowStageList) GetWorkflowStages() []LegacyWorkflowStage {
	if o == nil || isNil(o.WorkflowStages) {
		var ret []LegacyWorkflowStage
		return ret
	}
	return o.WorkflowStages
}

// GetWorkflowStagesOk returns a tuple with the WorkflowStages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacyWorkflowStageList) GetWorkflowStagesOk() ([]LegacyWorkflowStage, bool) {
	if o == nil || isNil(o.WorkflowStages) {
    return nil, false
	}
	return o.WorkflowStages, true
}

// HasWorkflowStages returns a boolean if a field has been set.
func (o *LegacyWorkflowStageList) HasWorkflowStages() bool {
	if o != nil && !isNil(o.WorkflowStages) {
		return true
	}

	return false
}

// SetWorkflowStages gets a reference to the given []LegacyWorkflowStage and assigns it to the WorkflowStages field.
func (o *LegacyWorkflowStageList) SetWorkflowStages(v []LegacyWorkflowStage) {
	o.WorkflowStages = v
}

func (o LegacyWorkflowStageList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.WorkflowStages) {
		toSerialize["workflowStages"] = o.WorkflowStages
	}
	return json.Marshal(toSerialize)
}

type NullableLegacyWorkflowStageList struct {
	value *LegacyWorkflowStageList
	isSet bool
}

func (v NullableLegacyWorkflowStageList) Get() *LegacyWorkflowStageList {
	return v.value
}

func (v *NullableLegacyWorkflowStageList) Set(val *LegacyWorkflowStageList) {
	v.value = val
	v.isSet = true
}

func (v NullableLegacyWorkflowStageList) IsSet() bool {
	return v.isSet
}

func (v *NullableLegacyWorkflowStageList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLegacyWorkflowStageList(val *LegacyWorkflowStageList) *NullableLegacyWorkflowStageList {
	return &NullableLegacyWorkflowStageList{value: val, isSet: true}
}

func (v NullableLegacyWorkflowStageList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLegacyWorkflowStageList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


