/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
	"time"
)

// RequestFulfillment A request fulfillment represents work that is done which changes the status of a request or a sample group within that request. Fulfillments are created when state changes between IN_PROGRESS, COMPLETED, or FAILED statuses. Fulfillments do not capture a PENDING state because all requests or request sample groups are considered PENDING until the first corresponding fulfillment is created. 
type RequestFulfillment struct {
	// Date and time the fulfillment was created
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	// ID of the entry this fulfillment was executed in, if any
	EntryId *string `json:"entryId,omitempty"`
	// ID of the request fulfillment
	Id *string `json:"id,omitempty"`
	// DateTime the Request Fulfillment was last modified
	ModifiedAt *time.Time `json:"modifiedAt,omitempty"`
	// ID of the request this fulfillment fulfills
	RequestId *string `json:"requestId,omitempty"`
	SampleGroup NullableRequestFulfillmentSampleGroup `json:"sampleGroup,omitempty"`
	Status *SampleGroupStatus `json:"status,omitempty"`
}

// NewRequestFulfillment instantiates a new RequestFulfillment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequestFulfillment() *RequestFulfillment {
	this := RequestFulfillment{}
	return &this
}

// NewRequestFulfillmentWithDefaults instantiates a new RequestFulfillment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequestFulfillmentWithDefaults() *RequestFulfillment {
	this := RequestFulfillment{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *RequestFulfillment) GetCreatedAt() time.Time {
	if o == nil || isNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestFulfillment) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.CreatedAt) {
    return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *RequestFulfillment) HasCreatedAt() bool {
	if o != nil && !isNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *RequestFulfillment) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetEntryId returns the EntryId field value if set, zero value otherwise.
func (o *RequestFulfillment) GetEntryId() string {
	if o == nil || isNil(o.EntryId) {
		var ret string
		return ret
	}
	return *o.EntryId
}

// GetEntryIdOk returns a tuple with the EntryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestFulfillment) GetEntryIdOk() (*string, bool) {
	if o == nil || isNil(o.EntryId) {
    return nil, false
	}
	return o.EntryId, true
}

// HasEntryId returns a boolean if a field has been set.
func (o *RequestFulfillment) HasEntryId() bool {
	if o != nil && !isNil(o.EntryId) {
		return true
	}

	return false
}

// SetEntryId gets a reference to the given string and assigns it to the EntryId field.
func (o *RequestFulfillment) SetEntryId(v string) {
	o.EntryId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *RequestFulfillment) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestFulfillment) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *RequestFulfillment) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *RequestFulfillment) SetId(v string) {
	o.Id = &v
}

// GetModifiedAt returns the ModifiedAt field value if set, zero value otherwise.
func (o *RequestFulfillment) GetModifiedAt() time.Time {
	if o == nil || isNil(o.ModifiedAt) {
		var ret time.Time
		return ret
	}
	return *o.ModifiedAt
}

// GetModifiedAtOk returns a tuple with the ModifiedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestFulfillment) GetModifiedAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.ModifiedAt) {
    return nil, false
	}
	return o.ModifiedAt, true
}

// HasModifiedAt returns a boolean if a field has been set.
func (o *RequestFulfillment) HasModifiedAt() bool {
	if o != nil && !isNil(o.ModifiedAt) {
		return true
	}

	return false
}

// SetModifiedAt gets a reference to the given time.Time and assigns it to the ModifiedAt field.
func (o *RequestFulfillment) SetModifiedAt(v time.Time) {
	o.ModifiedAt = &v
}

// GetRequestId returns the RequestId field value if set, zero value otherwise.
func (o *RequestFulfillment) GetRequestId() string {
	if o == nil || isNil(o.RequestId) {
		var ret string
		return ret
	}
	return *o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestFulfillment) GetRequestIdOk() (*string, bool) {
	if o == nil || isNil(o.RequestId) {
    return nil, false
	}
	return o.RequestId, true
}

// HasRequestId returns a boolean if a field has been set.
func (o *RequestFulfillment) HasRequestId() bool {
	if o != nil && !isNil(o.RequestId) {
		return true
	}

	return false
}

// SetRequestId gets a reference to the given string and assigns it to the RequestId field.
func (o *RequestFulfillment) SetRequestId(v string) {
	o.RequestId = &v
}

// GetSampleGroup returns the SampleGroup field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RequestFulfillment) GetSampleGroup() RequestFulfillmentSampleGroup {
	if o == nil || isNil(o.SampleGroup.Get()) {
		var ret RequestFulfillmentSampleGroup
		return ret
	}
	return *o.SampleGroup.Get()
}

// GetSampleGroupOk returns a tuple with the SampleGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RequestFulfillment) GetSampleGroupOk() (*RequestFulfillmentSampleGroup, bool) {
	if o == nil {
    return nil, false
	}
	return o.SampleGroup.Get(), o.SampleGroup.IsSet()
}

// HasSampleGroup returns a boolean if a field has been set.
func (o *RequestFulfillment) HasSampleGroup() bool {
	if o != nil && o.SampleGroup.IsSet() {
		return true
	}

	return false
}

// SetSampleGroup gets a reference to the given NullableRequestFulfillmentSampleGroup and assigns it to the SampleGroup field.
func (o *RequestFulfillment) SetSampleGroup(v RequestFulfillmentSampleGroup) {
	o.SampleGroup.Set(&v)
}
// SetSampleGroupNil sets the value for SampleGroup to be an explicit nil
func (o *RequestFulfillment) SetSampleGroupNil() {
	o.SampleGroup.Set(nil)
}

// UnsetSampleGroup ensures that no value is present for SampleGroup, not even an explicit nil
func (o *RequestFulfillment) UnsetSampleGroup() {
	o.SampleGroup.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *RequestFulfillment) GetStatus() SampleGroupStatus {
	if o == nil || isNil(o.Status) {
		var ret SampleGroupStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestFulfillment) GetStatusOk() (*SampleGroupStatus, bool) {
	if o == nil || isNil(o.Status) {
    return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *RequestFulfillment) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given SampleGroupStatus and assigns it to the Status field.
func (o *RequestFulfillment) SetStatus(v SampleGroupStatus) {
	o.Status = &v
}

func (o RequestFulfillment) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !isNil(o.EntryId) {
		toSerialize["entryId"] = o.EntryId
	}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.ModifiedAt) {
		toSerialize["modifiedAt"] = o.ModifiedAt
	}
	if !isNil(o.RequestId) {
		toSerialize["requestId"] = o.RequestId
	}
	if o.SampleGroup.IsSet() {
		toSerialize["sampleGroup"] = o.SampleGroup.Get()
	}
	if !isNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableRequestFulfillment struct {
	value *RequestFulfillment
	isSet bool
}

func (v NullableRequestFulfillment) Get() *RequestFulfillment {
	return v.value
}

func (v *NullableRequestFulfillment) Set(val *RequestFulfillment) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestFulfillment) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestFulfillment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestFulfillment(val *RequestFulfillment) *NullableRequestFulfillment {
	return &NullableRequestFulfillment{value: val, isSet: true}
}

func (v NullableRequestFulfillment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestFulfillment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


