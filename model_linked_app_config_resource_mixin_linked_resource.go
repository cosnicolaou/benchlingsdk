/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// LinkedAppConfigResourceMixinLinkedResource struct for LinkedAppConfigResourceMixinLinkedResource
type LinkedAppConfigResourceMixinLinkedResource struct {
	// The API ID of the linked resource
	Id *string `json:"id,omitempty"`
	// The name of the resource in Benchling
	Name *string `json:"name,omitempty"`
	InaccessibleId *string `json:"inaccessibleId,omitempty"`
	// The type of this inaccessible item. Example values: \"custom_entity\", \"container\", \"plate\", \"dna_sequence\" 
	Type *string `json:"type,omitempty"`
}

// NewLinkedAppConfigResourceMixinLinkedResource instantiates a new LinkedAppConfigResourceMixinLinkedResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinkedAppConfigResourceMixinLinkedResource() *LinkedAppConfigResourceMixinLinkedResource {
	this := LinkedAppConfigResourceMixinLinkedResource{}
	return &this
}

// NewLinkedAppConfigResourceMixinLinkedResourceWithDefaults instantiates a new LinkedAppConfigResourceMixinLinkedResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinkedAppConfigResourceMixinLinkedResourceWithDefaults() *LinkedAppConfigResourceMixinLinkedResource {
	this := LinkedAppConfigResourceMixinLinkedResource{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *LinkedAppConfigResourceMixinLinkedResource) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedAppConfigResourceMixinLinkedResource) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *LinkedAppConfigResourceMixinLinkedResource) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *LinkedAppConfigResourceMixinLinkedResource) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *LinkedAppConfigResourceMixinLinkedResource) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedAppConfigResourceMixinLinkedResource) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *LinkedAppConfigResourceMixinLinkedResource) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *LinkedAppConfigResourceMixinLinkedResource) SetName(v string) {
	o.Name = &v
}

// GetInaccessibleId returns the InaccessibleId field value if set, zero value otherwise.
func (o *LinkedAppConfigResourceMixinLinkedResource) GetInaccessibleId() string {
	if o == nil || isNil(o.InaccessibleId) {
		var ret string
		return ret
	}
	return *o.InaccessibleId
}

// GetInaccessibleIdOk returns a tuple with the InaccessibleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedAppConfigResourceMixinLinkedResource) GetInaccessibleIdOk() (*string, bool) {
	if o == nil || isNil(o.InaccessibleId) {
    return nil, false
	}
	return o.InaccessibleId, true
}

// HasInaccessibleId returns a boolean if a field has been set.
func (o *LinkedAppConfigResourceMixinLinkedResource) HasInaccessibleId() bool {
	if o != nil && !isNil(o.InaccessibleId) {
		return true
	}

	return false
}

// SetInaccessibleId gets a reference to the given string and assigns it to the InaccessibleId field.
func (o *LinkedAppConfigResourceMixinLinkedResource) SetInaccessibleId(v string) {
	o.InaccessibleId = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *LinkedAppConfigResourceMixinLinkedResource) GetType() string {
	if o == nil || isNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedAppConfigResourceMixinLinkedResource) GetTypeOk() (*string, bool) {
	if o == nil || isNil(o.Type) {
    return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *LinkedAppConfigResourceMixinLinkedResource) HasType() bool {
	if o != nil && !isNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *LinkedAppConfigResourceMixinLinkedResource) SetType(v string) {
	o.Type = &v
}

func (o LinkedAppConfigResourceMixinLinkedResource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.InaccessibleId) {
		toSerialize["inaccessibleId"] = o.InaccessibleId
	}
	if !isNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableLinkedAppConfigResourceMixinLinkedResource struct {
	value *LinkedAppConfigResourceMixinLinkedResource
	isSet bool
}

func (v NullableLinkedAppConfigResourceMixinLinkedResource) Get() *LinkedAppConfigResourceMixinLinkedResource {
	return v.value
}

func (v *NullableLinkedAppConfigResourceMixinLinkedResource) Set(val *LinkedAppConfigResourceMixinLinkedResource) {
	v.value = val
	v.isSet = true
}

func (v NullableLinkedAppConfigResourceMixinLinkedResource) IsSet() bool {
	return v.isSet
}

func (v *NullableLinkedAppConfigResourceMixinLinkedResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinkedAppConfigResourceMixinLinkedResource(val *LinkedAppConfigResourceMixinLinkedResource) *NullableLinkedAppConfigResourceMixinLinkedResource {
	return &NullableLinkedAppConfigResourceMixinLinkedResource{value: val, isSet: true}
}

func (v NullableLinkedAppConfigResourceMixinLinkedResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinkedAppConfigResourceMixinLinkedResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


