/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// DnaTemplateAlignmentFile struct for DnaTemplateAlignmentFile
type DnaTemplateAlignmentFile struct {
	Data *string `json:"data,omitempty"`
	Name *string `json:"name,omitempty"`
}

// NewDnaTemplateAlignmentFile instantiates a new DnaTemplateAlignmentFile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDnaTemplateAlignmentFile() *DnaTemplateAlignmentFile {
	this := DnaTemplateAlignmentFile{}
	return &this
}

// NewDnaTemplateAlignmentFileWithDefaults instantiates a new DnaTemplateAlignmentFile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDnaTemplateAlignmentFileWithDefaults() *DnaTemplateAlignmentFile {
	this := DnaTemplateAlignmentFile{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *DnaTemplateAlignmentFile) GetData() string {
	if o == nil || isNil(o.Data) {
		var ret string
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnaTemplateAlignmentFile) GetDataOk() (*string, bool) {
	if o == nil || isNil(o.Data) {
    return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *DnaTemplateAlignmentFile) HasData() bool {
	if o != nil && !isNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given string and assigns it to the Data field.
func (o *DnaTemplateAlignmentFile) SetData(v string) {
	o.Data = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DnaTemplateAlignmentFile) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnaTemplateAlignmentFile) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *DnaTemplateAlignmentFile) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DnaTemplateAlignmentFile) SetName(v string) {
	o.Name = &v
}

func (o DnaTemplateAlignmentFile) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableDnaTemplateAlignmentFile struct {
	value *DnaTemplateAlignmentFile
	isSet bool
}

func (v NullableDnaTemplateAlignmentFile) Get() *DnaTemplateAlignmentFile {
	return v.value
}

func (v *NullableDnaTemplateAlignmentFile) Set(val *DnaTemplateAlignmentFile) {
	v.value = val
	v.isSet = true
}

func (v NullableDnaTemplateAlignmentFile) IsSet() bool {
	return v.isSet
}

func (v *NullableDnaTemplateAlignmentFile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDnaTemplateAlignmentFile(val *DnaTemplateAlignmentFile) *NullableDnaTemplateAlignmentFile {
	return &NullableDnaTemplateAlignmentFile{value: val, isSet: true}
}

func (v NullableDnaTemplateAlignmentFile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDnaTemplateAlignmentFile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


