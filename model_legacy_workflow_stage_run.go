/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
	"time"
)

// LegacyWorkflowStageRun struct for LegacyWorkflowStageRun
type LegacyWorkflowStageRun struct {
	// DateTime at which the the legacy workflow stage run was created
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	// ID of the legacy workflow stage run
	Id *string `json:"id,omitempty"`
	// Name of the legacy workflow stage run
	Name *string `json:"name,omitempty"`
	// Status of the legacy workflow stage run
	Status *string `json:"status,omitempty"`
}

// NewLegacyWorkflowStageRun instantiates a new LegacyWorkflowStageRun object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLegacyWorkflowStageRun() *LegacyWorkflowStageRun {
	this := LegacyWorkflowStageRun{}
	return &this
}

// NewLegacyWorkflowStageRunWithDefaults instantiates a new LegacyWorkflowStageRun object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLegacyWorkflowStageRunWithDefaults() *LegacyWorkflowStageRun {
	this := LegacyWorkflowStageRun{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *LegacyWorkflowStageRun) GetCreatedAt() time.Time {
	if o == nil || isNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacyWorkflowStageRun) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.CreatedAt) {
    return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *LegacyWorkflowStageRun) HasCreatedAt() bool {
	if o != nil && !isNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *LegacyWorkflowStageRun) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *LegacyWorkflowStageRun) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacyWorkflowStageRun) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *LegacyWorkflowStageRun) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *LegacyWorkflowStageRun) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *LegacyWorkflowStageRun) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacyWorkflowStageRun) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *LegacyWorkflowStageRun) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *LegacyWorkflowStageRun) SetName(v string) {
	o.Name = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *LegacyWorkflowStageRun) GetStatus() string {
	if o == nil || isNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacyWorkflowStageRun) GetStatusOk() (*string, bool) {
	if o == nil || isNil(o.Status) {
    return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *LegacyWorkflowStageRun) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *LegacyWorkflowStageRun) SetStatus(v string) {
	o.Status = &v
}

func (o LegacyWorkflowStageRun) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableLegacyWorkflowStageRun struct {
	value *LegacyWorkflowStageRun
	isSet bool
}

func (v NullableLegacyWorkflowStageRun) Get() *LegacyWorkflowStageRun {
	return v.value
}

func (v *NullableLegacyWorkflowStageRun) Set(val *LegacyWorkflowStageRun) {
	v.value = val
	v.isSet = true
}

func (v NullableLegacyWorkflowStageRun) IsSet() bool {
	return v.isSet
}

func (v *NullableLegacyWorkflowStageRun) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLegacyWorkflowStageRun(val *LegacyWorkflowStageRun) *NullableLegacyWorkflowStageRun {
	return &NullableLegacyWorkflowStageRun{value: val, isSet: true}
}

func (v NullableLegacyWorkflowStageRun) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLegacyWorkflowStageRun) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


