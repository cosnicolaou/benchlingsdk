/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// RequestUpdate struct for RequestUpdate
type RequestUpdate struct {
	// Array of assignees
	Assignees []OneOfRequestWriteUserAssigneeRequestWriteTeamAssignee `json:"assignees,omitempty"`
	// The request's fields
	Fields *ModelMap `json:"fields,omitempty"`
	// The ID of the project to which the request belongs.
	ProjectId *string `json:"projectId,omitempty"`
	// ID of the user making the request. If unspecified, the requestor is the request creator. 
	RequestorId NullableString `json:"requestorId,omitempty"`
	SampleGroups []RequestSampleGroupCreate `json:"sampleGroups,omitempty"`
	// Date the request is scheduled to be executed on, in YYYY-MM-DD format.
	ScheduledOn *string `json:"scheduledOn,omitempty"`
	RequestStatus *RequestStatus `json:"requestStatus,omitempty"`
}

// NewRequestUpdate instantiates a new RequestUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequestUpdate() *RequestUpdate {
	this := RequestUpdate{}
	return &this
}

// NewRequestUpdateWithDefaults instantiates a new RequestUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequestUpdateWithDefaults() *RequestUpdate {
	this := RequestUpdate{}
	return &this
}

// GetAssignees returns the Assignees field value if set, zero value otherwise.
func (o *RequestUpdate) GetAssignees() []OneOfRequestWriteUserAssigneeRequestWriteTeamAssignee {
	if o == nil || isNil(o.Assignees) {
		var ret []OneOfRequestWriteUserAssigneeRequestWriteTeamAssignee
		return ret
	}
	return o.Assignees
}

// GetAssigneesOk returns a tuple with the Assignees field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestUpdate) GetAssigneesOk() ([]OneOfRequestWriteUserAssigneeRequestWriteTeamAssignee, bool) {
	if o == nil || isNil(o.Assignees) {
    return nil, false
	}
	return o.Assignees, true
}

// HasAssignees returns a boolean if a field has been set.
func (o *RequestUpdate) HasAssignees() bool {
	if o != nil && !isNil(o.Assignees) {
		return true
	}

	return false
}

// SetAssignees gets a reference to the given []OneOfRequestWriteUserAssigneeRequestWriteTeamAssignee and assigns it to the Assignees field.
func (o *RequestUpdate) SetAssignees(v []OneOfRequestWriteUserAssigneeRequestWriteTeamAssignee) {
	o.Assignees = v
}

// GetFields returns the Fields field value if set, zero value otherwise.
func (o *RequestUpdate) GetFields() ModelMap {
	if o == nil || isNil(o.Fields) {
		var ret ModelMap
		return ret
	}
	return *o.Fields
}

// GetFieldsOk returns a tuple with the Fields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestUpdate) GetFieldsOk() (*ModelMap, bool) {
	if o == nil || isNil(o.Fields) {
    return nil, false
	}
	return o.Fields, true
}

// HasFields returns a boolean if a field has been set.
func (o *RequestUpdate) HasFields() bool {
	if o != nil && !isNil(o.Fields) {
		return true
	}

	return false
}

// SetFields gets a reference to the given ModelMap and assigns it to the Fields field.
func (o *RequestUpdate) SetFields(v ModelMap) {
	o.Fields = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *RequestUpdate) GetProjectId() string {
	if o == nil || isNil(o.ProjectId) {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestUpdate) GetProjectIdOk() (*string, bool) {
	if o == nil || isNil(o.ProjectId) {
    return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *RequestUpdate) HasProjectId() bool {
	if o != nil && !isNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *RequestUpdate) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetRequestorId returns the RequestorId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RequestUpdate) GetRequestorId() string {
	if o == nil || isNil(o.RequestorId.Get()) {
		var ret string
		return ret
	}
	return *o.RequestorId.Get()
}

// GetRequestorIdOk returns a tuple with the RequestorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RequestUpdate) GetRequestorIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.RequestorId.Get(), o.RequestorId.IsSet()
}

// HasRequestorId returns a boolean if a field has been set.
func (o *RequestUpdate) HasRequestorId() bool {
	if o != nil && o.RequestorId.IsSet() {
		return true
	}

	return false
}

// SetRequestorId gets a reference to the given NullableString and assigns it to the RequestorId field.
func (o *RequestUpdate) SetRequestorId(v string) {
	o.RequestorId.Set(&v)
}
// SetRequestorIdNil sets the value for RequestorId to be an explicit nil
func (o *RequestUpdate) SetRequestorIdNil() {
	o.RequestorId.Set(nil)
}

// UnsetRequestorId ensures that no value is present for RequestorId, not even an explicit nil
func (o *RequestUpdate) UnsetRequestorId() {
	o.RequestorId.Unset()
}

// GetSampleGroups returns the SampleGroups field value if set, zero value otherwise.
func (o *RequestUpdate) GetSampleGroups() []RequestSampleGroupCreate {
	if o == nil || isNil(o.SampleGroups) {
		var ret []RequestSampleGroupCreate
		return ret
	}
	return o.SampleGroups
}

// GetSampleGroupsOk returns a tuple with the SampleGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestUpdate) GetSampleGroupsOk() ([]RequestSampleGroupCreate, bool) {
	if o == nil || isNil(o.SampleGroups) {
    return nil, false
	}
	return o.SampleGroups, true
}

// HasSampleGroups returns a boolean if a field has been set.
func (o *RequestUpdate) HasSampleGroups() bool {
	if o != nil && !isNil(o.SampleGroups) {
		return true
	}

	return false
}

// SetSampleGroups gets a reference to the given []RequestSampleGroupCreate and assigns it to the SampleGroups field.
func (o *RequestUpdate) SetSampleGroups(v []RequestSampleGroupCreate) {
	o.SampleGroups = v
}

// GetScheduledOn returns the ScheduledOn field value if set, zero value otherwise.
func (o *RequestUpdate) GetScheduledOn() string {
	if o == nil || isNil(o.ScheduledOn) {
		var ret string
		return ret
	}
	return *o.ScheduledOn
}

// GetScheduledOnOk returns a tuple with the ScheduledOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestUpdate) GetScheduledOnOk() (*string, bool) {
	if o == nil || isNil(o.ScheduledOn) {
    return nil, false
	}
	return o.ScheduledOn, true
}

// HasScheduledOn returns a boolean if a field has been set.
func (o *RequestUpdate) HasScheduledOn() bool {
	if o != nil && !isNil(o.ScheduledOn) {
		return true
	}

	return false
}

// SetScheduledOn gets a reference to the given string and assigns it to the ScheduledOn field.
func (o *RequestUpdate) SetScheduledOn(v string) {
	o.ScheduledOn = &v
}

// GetRequestStatus returns the RequestStatus field value if set, zero value otherwise.
func (o *RequestUpdate) GetRequestStatus() RequestStatus {
	if o == nil || isNil(o.RequestStatus) {
		var ret RequestStatus
		return ret
	}
	return *o.RequestStatus
}

// GetRequestStatusOk returns a tuple with the RequestStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestUpdate) GetRequestStatusOk() (*RequestStatus, bool) {
	if o == nil || isNil(o.RequestStatus) {
    return nil, false
	}
	return o.RequestStatus, true
}

// HasRequestStatus returns a boolean if a field has been set.
func (o *RequestUpdate) HasRequestStatus() bool {
	if o != nil && !isNil(o.RequestStatus) {
		return true
	}

	return false
}

// SetRequestStatus gets a reference to the given RequestStatus and assigns it to the RequestStatus field.
func (o *RequestUpdate) SetRequestStatus(v RequestStatus) {
	o.RequestStatus = &v
}

func (o RequestUpdate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Assignees) {
		toSerialize["assignees"] = o.Assignees
	}
	if !isNil(o.Fields) {
		toSerialize["fields"] = o.Fields
	}
	if !isNil(o.ProjectId) {
		toSerialize["projectId"] = o.ProjectId
	}
	if o.RequestorId.IsSet() {
		toSerialize["requestorId"] = o.RequestorId.Get()
	}
	if !isNil(o.SampleGroups) {
		toSerialize["sampleGroups"] = o.SampleGroups
	}
	if !isNil(o.ScheduledOn) {
		toSerialize["scheduledOn"] = o.ScheduledOn
	}
	if !isNil(o.RequestStatus) {
		toSerialize["requestStatus"] = o.RequestStatus
	}
	return json.Marshal(toSerialize)
}

type NullableRequestUpdate struct {
	value *RequestUpdate
	isSet bool
}

func (v NullableRequestUpdate) Get() *RequestUpdate {
	return v.value
}

func (v *NullableRequestUpdate) Set(val *RequestUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestUpdate(val *RequestUpdate) *NullableRequestUpdate {
	return &NullableRequestUpdate{value: val, isSet: true}
}

func (v NullableRequestUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


