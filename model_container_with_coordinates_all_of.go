/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// ContainerWithCoordinatesAllOf struct for ContainerWithCoordinatesAllOf
type ContainerWithCoordinatesAllOf struct {
	GridNumber *float32 `json:"gridNumber,omitempty"`
	GridPosition *string `json:"gridPosition,omitempty"`
}

// NewContainerWithCoordinatesAllOf instantiates a new ContainerWithCoordinatesAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContainerWithCoordinatesAllOf() *ContainerWithCoordinatesAllOf {
	this := ContainerWithCoordinatesAllOf{}
	return &this
}

// NewContainerWithCoordinatesAllOfWithDefaults instantiates a new ContainerWithCoordinatesAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContainerWithCoordinatesAllOfWithDefaults() *ContainerWithCoordinatesAllOf {
	this := ContainerWithCoordinatesAllOf{}
	return &this
}

// GetGridNumber returns the GridNumber field value if set, zero value otherwise.
func (o *ContainerWithCoordinatesAllOf) GetGridNumber() float32 {
	if o == nil || isNil(o.GridNumber) {
		var ret float32
		return ret
	}
	return *o.GridNumber
}

// GetGridNumberOk returns a tuple with the GridNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerWithCoordinatesAllOf) GetGridNumberOk() (*float32, bool) {
	if o == nil || isNil(o.GridNumber) {
    return nil, false
	}
	return o.GridNumber, true
}

// HasGridNumber returns a boolean if a field has been set.
func (o *ContainerWithCoordinatesAllOf) HasGridNumber() bool {
	if o != nil && !isNil(o.GridNumber) {
		return true
	}

	return false
}

// SetGridNumber gets a reference to the given float32 and assigns it to the GridNumber field.
func (o *ContainerWithCoordinatesAllOf) SetGridNumber(v float32) {
	o.GridNumber = &v
}

// GetGridPosition returns the GridPosition field value if set, zero value otherwise.
func (o *ContainerWithCoordinatesAllOf) GetGridPosition() string {
	if o == nil || isNil(o.GridPosition) {
		var ret string
		return ret
	}
	return *o.GridPosition
}

// GetGridPositionOk returns a tuple with the GridPosition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerWithCoordinatesAllOf) GetGridPositionOk() (*string, bool) {
	if o == nil || isNil(o.GridPosition) {
    return nil, false
	}
	return o.GridPosition, true
}

// HasGridPosition returns a boolean if a field has been set.
func (o *ContainerWithCoordinatesAllOf) HasGridPosition() bool {
	if o != nil && !isNil(o.GridPosition) {
		return true
	}

	return false
}

// SetGridPosition gets a reference to the given string and assigns it to the GridPosition field.
func (o *ContainerWithCoordinatesAllOf) SetGridPosition(v string) {
	o.GridPosition = &v
}

func (o ContainerWithCoordinatesAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.GridNumber) {
		toSerialize["gridNumber"] = o.GridNumber
	}
	if !isNil(o.GridPosition) {
		toSerialize["gridPosition"] = o.GridPosition
	}
	return json.Marshal(toSerialize)
}

type NullableContainerWithCoordinatesAllOf struct {
	value *ContainerWithCoordinatesAllOf
	isSet bool
}

func (v NullableContainerWithCoordinatesAllOf) Get() *ContainerWithCoordinatesAllOf {
	return v.value
}

func (v *NullableContainerWithCoordinatesAllOf) Set(val *ContainerWithCoordinatesAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableContainerWithCoordinatesAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableContainerWithCoordinatesAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainerWithCoordinatesAllOf(val *ContainerWithCoordinatesAllOf) *NullableContainerWithCoordinatesAllOf {
	return &NullableContainerWithCoordinatesAllOf{value: val, isSet: true}
}

func (v NullableContainerWithCoordinatesAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainerWithCoordinatesAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


