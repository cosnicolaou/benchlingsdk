/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// MoleculeUpdateAllOf struct for MoleculeUpdateAllOf
type MoleculeUpdateAllOf struct {
	EntityRegistryId *string `json:"entityRegistryId,omitempty"`
}

// NewMoleculeUpdateAllOf instantiates a new MoleculeUpdateAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMoleculeUpdateAllOf() *MoleculeUpdateAllOf {
	this := MoleculeUpdateAllOf{}
	return &this
}

// NewMoleculeUpdateAllOfWithDefaults instantiates a new MoleculeUpdateAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMoleculeUpdateAllOfWithDefaults() *MoleculeUpdateAllOf {
	this := MoleculeUpdateAllOf{}
	return &this
}

// GetEntityRegistryId returns the EntityRegistryId field value if set, zero value otherwise.
func (o *MoleculeUpdateAllOf) GetEntityRegistryId() string {
	if o == nil || isNil(o.EntityRegistryId) {
		var ret string
		return ret
	}
	return *o.EntityRegistryId
}

// GetEntityRegistryIdOk returns a tuple with the EntityRegistryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoleculeUpdateAllOf) GetEntityRegistryIdOk() (*string, bool) {
	if o == nil || isNil(o.EntityRegistryId) {
    return nil, false
	}
	return o.EntityRegistryId, true
}

// HasEntityRegistryId returns a boolean if a field has been set.
func (o *MoleculeUpdateAllOf) HasEntityRegistryId() bool {
	if o != nil && !isNil(o.EntityRegistryId) {
		return true
	}

	return false
}

// SetEntityRegistryId gets a reference to the given string and assigns it to the EntityRegistryId field.
func (o *MoleculeUpdateAllOf) SetEntityRegistryId(v string) {
	o.EntityRegistryId = &v
}

func (o MoleculeUpdateAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.EntityRegistryId) {
		toSerialize["entityRegistryId"] = o.EntityRegistryId
	}
	return json.Marshal(toSerialize)
}

type NullableMoleculeUpdateAllOf struct {
	value *MoleculeUpdateAllOf
	isSet bool
}

func (v NullableMoleculeUpdateAllOf) Get() *MoleculeUpdateAllOf {
	return v.value
}

func (v *NullableMoleculeUpdateAllOf) Set(val *MoleculeUpdateAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableMoleculeUpdateAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableMoleculeUpdateAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMoleculeUpdateAllOf(val *MoleculeUpdateAllOf) *NullableMoleculeUpdateAllOf {
	return &NullableMoleculeUpdateAllOf{value: val, isSet: true}
}

func (v NullableMoleculeUpdateAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMoleculeUpdateAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


