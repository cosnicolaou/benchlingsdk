/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// AutofillSequences struct for AutofillSequences
type AutofillSequences struct {
	// Array of DNA sequence IDs.
	DnaSequenceIds []string `json:"dnaSequenceIds"`
}

// NewAutofillSequences instantiates a new AutofillSequences object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAutofillSequences(dnaSequenceIds []string) *AutofillSequences {
	this := AutofillSequences{}
	this.DnaSequenceIds = dnaSequenceIds
	return &this
}

// NewAutofillSequencesWithDefaults instantiates a new AutofillSequences object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAutofillSequencesWithDefaults() *AutofillSequences {
	this := AutofillSequences{}
	return &this
}

// GetDnaSequenceIds returns the DnaSequenceIds field value
func (o *AutofillSequences) GetDnaSequenceIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.DnaSequenceIds
}

// GetDnaSequenceIdsOk returns a tuple with the DnaSequenceIds field value
// and a boolean to check if the value has been set.
func (o *AutofillSequences) GetDnaSequenceIdsOk() ([]string, bool) {
	if o == nil {
    return nil, false
	}
	return o.DnaSequenceIds, true
}

// SetDnaSequenceIds sets field value
func (o *AutofillSequences) SetDnaSequenceIds(v []string) {
	o.DnaSequenceIds = v
}

func (o AutofillSequences) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["dnaSequenceIds"] = o.DnaSequenceIds
	}
	return json.Marshal(toSerialize)
}

type NullableAutofillSequences struct {
	value *AutofillSequences
	isSet bool
}

func (v NullableAutofillSequences) Get() *AutofillSequences {
	return v.value
}

func (v *NullableAutofillSequences) Set(val *AutofillSequences) {
	v.value = val
	v.isSet = true
}

func (v NullableAutofillSequences) IsSet() bool {
	return v.isSet
}

func (v *NullableAutofillSequences) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutofillSequences(val *AutofillSequences) *NullableAutofillSequences {
	return &NullableAutofillSequences{value: val, isSet: true}
}

func (v NullableAutofillSequences) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutofillSequences) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


