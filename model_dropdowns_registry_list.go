/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// DropdownsRegistryList struct for DropdownsRegistryList
type DropdownsRegistryList struct {
	Dropdowns []DropdownSummary `json:"dropdowns,omitempty"`
}

// NewDropdownsRegistryList instantiates a new DropdownsRegistryList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDropdownsRegistryList() *DropdownsRegistryList {
	this := DropdownsRegistryList{}
	return &this
}

// NewDropdownsRegistryListWithDefaults instantiates a new DropdownsRegistryList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDropdownsRegistryListWithDefaults() *DropdownsRegistryList {
	this := DropdownsRegistryList{}
	return &this
}

// GetDropdowns returns the Dropdowns field value if set, zero value otherwise.
func (o *DropdownsRegistryList) GetDropdowns() []DropdownSummary {
	if o == nil || isNil(o.Dropdowns) {
		var ret []DropdownSummary
		return ret
	}
	return o.Dropdowns
}

// GetDropdownsOk returns a tuple with the Dropdowns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DropdownsRegistryList) GetDropdownsOk() ([]DropdownSummary, bool) {
	if o == nil || isNil(o.Dropdowns) {
    return nil, false
	}
	return o.Dropdowns, true
}

// HasDropdowns returns a boolean if a field has been set.
func (o *DropdownsRegistryList) HasDropdowns() bool {
	if o != nil && !isNil(o.Dropdowns) {
		return true
	}

	return false
}

// SetDropdowns gets a reference to the given []DropdownSummary and assigns it to the Dropdowns field.
func (o *DropdownsRegistryList) SetDropdowns(v []DropdownSummary) {
	o.Dropdowns = v
}

func (o DropdownsRegistryList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Dropdowns) {
		toSerialize["dropdowns"] = o.Dropdowns
	}
	return json.Marshal(toSerialize)
}

type NullableDropdownsRegistryList struct {
	value *DropdownsRegistryList
	isSet bool
}

func (v NullableDropdownsRegistryList) Get() *DropdownsRegistryList {
	return v.value
}

func (v *NullableDropdownsRegistryList) Set(val *DropdownsRegistryList) {
	v.value = val
	v.isSet = true
}

func (v NullableDropdownsRegistryList) IsSet() bool {
	return v.isSet
}

func (v *NullableDropdownsRegistryList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDropdownsRegistryList(val *DropdownsRegistryList) *NullableDropdownsRegistryList {
	return &NullableDropdownsRegistryList{value: val, isSet: true}
}

func (v NullableDropdownsRegistryList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDropdownsRegistryList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


