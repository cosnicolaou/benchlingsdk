/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// OrganizationsPaginatedListAllOf struct for OrganizationsPaginatedListAllOf
type OrganizationsPaginatedListAllOf struct {
	Organizations []Organization `json:"organizations,omitempty"`
}

// NewOrganizationsPaginatedListAllOf instantiates a new OrganizationsPaginatedListAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationsPaginatedListAllOf() *OrganizationsPaginatedListAllOf {
	this := OrganizationsPaginatedListAllOf{}
	return &this
}

// NewOrganizationsPaginatedListAllOfWithDefaults instantiates a new OrganizationsPaginatedListAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationsPaginatedListAllOfWithDefaults() *OrganizationsPaginatedListAllOf {
	this := OrganizationsPaginatedListAllOf{}
	return &this
}

// GetOrganizations returns the Organizations field value if set, zero value otherwise.
func (o *OrganizationsPaginatedListAllOf) GetOrganizations() []Organization {
	if o == nil || isNil(o.Organizations) {
		var ret []Organization
		return ret
	}
	return o.Organizations
}

// GetOrganizationsOk returns a tuple with the Organizations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationsPaginatedListAllOf) GetOrganizationsOk() ([]Organization, bool) {
	if o == nil || isNil(o.Organizations) {
    return nil, false
	}
	return o.Organizations, true
}

// HasOrganizations returns a boolean if a field has been set.
func (o *OrganizationsPaginatedListAllOf) HasOrganizations() bool {
	if o != nil && !isNil(o.Organizations) {
		return true
	}

	return false
}

// SetOrganizations gets a reference to the given []Organization and assigns it to the Organizations field.
func (o *OrganizationsPaginatedListAllOf) SetOrganizations(v []Organization) {
	o.Organizations = v
}

func (o OrganizationsPaginatedListAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Organizations) {
		toSerialize["organizations"] = o.Organizations
	}
	return json.Marshal(toSerialize)
}

type NullableOrganizationsPaginatedListAllOf struct {
	value *OrganizationsPaginatedListAllOf
	isSet bool
}

func (v NullableOrganizationsPaginatedListAllOf) Get() *OrganizationsPaginatedListAllOf {
	return v.value
}

func (v *NullableOrganizationsPaginatedListAllOf) Set(val *OrganizationsPaginatedListAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationsPaginatedListAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationsPaginatedListAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationsPaginatedListAllOf(val *OrganizationsPaginatedListAllOf) *NullableOrganizationsPaginatedListAllOf {
	return &NullableOrganizationsPaginatedListAllOf{value: val, isSet: true}
}

func (v NullableOrganizationsPaginatedListAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationsPaginatedListAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


