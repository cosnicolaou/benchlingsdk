/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// BarcodeValidationResult struct for BarcodeValidationResult
type BarcodeValidationResult struct {
	// Barcode to validate.
	Barcode *string `json:"barcode,omitempty"`
	// Whether the barcode is valid.
	IsValid *bool `json:"isValid,omitempty"`
	// If barcode is not valid, a message string explaining the error.
	Message NullableString `json:"message,omitempty"`
}

// NewBarcodeValidationResult instantiates a new BarcodeValidationResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBarcodeValidationResult() *BarcodeValidationResult {
	this := BarcodeValidationResult{}
	return &this
}

// NewBarcodeValidationResultWithDefaults instantiates a new BarcodeValidationResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBarcodeValidationResultWithDefaults() *BarcodeValidationResult {
	this := BarcodeValidationResult{}
	return &this
}

// GetBarcode returns the Barcode field value if set, zero value otherwise.
func (o *BarcodeValidationResult) GetBarcode() string {
	if o == nil || isNil(o.Barcode) {
		var ret string
		return ret
	}
	return *o.Barcode
}

// GetBarcodeOk returns a tuple with the Barcode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BarcodeValidationResult) GetBarcodeOk() (*string, bool) {
	if o == nil || isNil(o.Barcode) {
    return nil, false
	}
	return o.Barcode, true
}

// HasBarcode returns a boolean if a field has been set.
func (o *BarcodeValidationResult) HasBarcode() bool {
	if o != nil && !isNil(o.Barcode) {
		return true
	}

	return false
}

// SetBarcode gets a reference to the given string and assigns it to the Barcode field.
func (o *BarcodeValidationResult) SetBarcode(v string) {
	o.Barcode = &v
}

// GetIsValid returns the IsValid field value if set, zero value otherwise.
func (o *BarcodeValidationResult) GetIsValid() bool {
	if o == nil || isNil(o.IsValid) {
		var ret bool
		return ret
	}
	return *o.IsValid
}

// GetIsValidOk returns a tuple with the IsValid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BarcodeValidationResult) GetIsValidOk() (*bool, bool) {
	if o == nil || isNil(o.IsValid) {
    return nil, false
	}
	return o.IsValid, true
}

// HasIsValid returns a boolean if a field has been set.
func (o *BarcodeValidationResult) HasIsValid() bool {
	if o != nil && !isNil(o.IsValid) {
		return true
	}

	return false
}

// SetIsValid gets a reference to the given bool and assigns it to the IsValid field.
func (o *BarcodeValidationResult) SetIsValid(v bool) {
	o.IsValid = &v
}

// GetMessage returns the Message field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BarcodeValidationResult) GetMessage() string {
	if o == nil || isNil(o.Message.Get()) {
		var ret string
		return ret
	}
	return *o.Message.Get()
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BarcodeValidationResult) GetMessageOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Message.Get(), o.Message.IsSet()
}

// HasMessage returns a boolean if a field has been set.
func (o *BarcodeValidationResult) HasMessage() bool {
	if o != nil && o.Message.IsSet() {
		return true
	}

	return false
}

// SetMessage gets a reference to the given NullableString and assigns it to the Message field.
func (o *BarcodeValidationResult) SetMessage(v string) {
	o.Message.Set(&v)
}
// SetMessageNil sets the value for Message to be an explicit nil
func (o *BarcodeValidationResult) SetMessageNil() {
	o.Message.Set(nil)
}

// UnsetMessage ensures that no value is present for Message, not even an explicit nil
func (o *BarcodeValidationResult) UnsetMessage() {
	o.Message.Unset()
}

func (o BarcodeValidationResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Barcode) {
		toSerialize["barcode"] = o.Barcode
	}
	if !isNil(o.IsValid) {
		toSerialize["isValid"] = o.IsValid
	}
	if o.Message.IsSet() {
		toSerialize["message"] = o.Message.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableBarcodeValidationResult struct {
	value *BarcodeValidationResult
	isSet bool
}

func (v NullableBarcodeValidationResult) Get() *BarcodeValidationResult {
	return v.value
}

func (v *NullableBarcodeValidationResult) Set(val *BarcodeValidationResult) {
	v.value = val
	v.isSet = true
}

func (v NullableBarcodeValidationResult) IsSet() bool {
	return v.isSet
}

func (v *NullableBarcodeValidationResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBarcodeValidationResult(val *BarcodeValidationResult) *NullableBarcodeValidationResult {
	return &NullableBarcodeValidationResult{value: val, isSet: true}
}

func (v NullableBarcodeValidationResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBarcodeValidationResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


