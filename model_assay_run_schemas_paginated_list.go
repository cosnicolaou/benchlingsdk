/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// AssayRunSchemasPaginatedList struct for AssayRunSchemasPaginatedList
type AssayRunSchemasPaginatedList struct {
	AssayRunSchemas []AssayRunSchema `json:"assayRunSchemas,omitempty"`
	NextToken *string `json:"nextToken,omitempty"`
}

// NewAssayRunSchemasPaginatedList instantiates a new AssayRunSchemasPaginatedList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssayRunSchemasPaginatedList() *AssayRunSchemasPaginatedList {
	this := AssayRunSchemasPaginatedList{}
	return &this
}

// NewAssayRunSchemasPaginatedListWithDefaults instantiates a new AssayRunSchemasPaginatedList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssayRunSchemasPaginatedListWithDefaults() *AssayRunSchemasPaginatedList {
	this := AssayRunSchemasPaginatedList{}
	return &this
}

// GetAssayRunSchemas returns the AssayRunSchemas field value if set, zero value otherwise.
func (o *AssayRunSchemasPaginatedList) GetAssayRunSchemas() []AssayRunSchema {
	if o == nil || isNil(o.AssayRunSchemas) {
		var ret []AssayRunSchema
		return ret
	}
	return o.AssayRunSchemas
}

// GetAssayRunSchemasOk returns a tuple with the AssayRunSchemas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssayRunSchemasPaginatedList) GetAssayRunSchemasOk() ([]AssayRunSchema, bool) {
	if o == nil || isNil(o.AssayRunSchemas) {
    return nil, false
	}
	return o.AssayRunSchemas, true
}

// HasAssayRunSchemas returns a boolean if a field has been set.
func (o *AssayRunSchemasPaginatedList) HasAssayRunSchemas() bool {
	if o != nil && !isNil(o.AssayRunSchemas) {
		return true
	}

	return false
}

// SetAssayRunSchemas gets a reference to the given []AssayRunSchema and assigns it to the AssayRunSchemas field.
func (o *AssayRunSchemasPaginatedList) SetAssayRunSchemas(v []AssayRunSchema) {
	o.AssayRunSchemas = v
}

// GetNextToken returns the NextToken field value if set, zero value otherwise.
func (o *AssayRunSchemasPaginatedList) GetNextToken() string {
	if o == nil || isNil(o.NextToken) {
		var ret string
		return ret
	}
	return *o.NextToken
}

// GetNextTokenOk returns a tuple with the NextToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssayRunSchemasPaginatedList) GetNextTokenOk() (*string, bool) {
	if o == nil || isNil(o.NextToken) {
    return nil, false
	}
	return o.NextToken, true
}

// HasNextToken returns a boolean if a field has been set.
func (o *AssayRunSchemasPaginatedList) HasNextToken() bool {
	if o != nil && !isNil(o.NextToken) {
		return true
	}

	return false
}

// SetNextToken gets a reference to the given string and assigns it to the NextToken field.
func (o *AssayRunSchemasPaginatedList) SetNextToken(v string) {
	o.NextToken = &v
}

func (o AssayRunSchemasPaginatedList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AssayRunSchemas) {
		toSerialize["assayRunSchemas"] = o.AssayRunSchemas
	}
	if !isNil(o.NextToken) {
		toSerialize["nextToken"] = o.NextToken
	}
	return json.Marshal(toSerialize)
}

type NullableAssayRunSchemasPaginatedList struct {
	value *AssayRunSchemasPaginatedList
	isSet bool
}

func (v NullableAssayRunSchemasPaginatedList) Get() *AssayRunSchemasPaginatedList {
	return v.value
}

func (v *NullableAssayRunSchemasPaginatedList) Set(val *AssayRunSchemasPaginatedList) {
	v.value = val
	v.isSet = true
}

func (v NullableAssayRunSchemasPaginatedList) IsSet() bool {
	return v.isSet
}

func (v *NullableAssayRunSchemasPaginatedList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssayRunSchemasPaginatedList(val *AssayRunSchemasPaginatedList) *NullableAssayRunSchemasPaginatedList {
	return &NullableAssayRunSchemasPaginatedList{value: val, isSet: true}
}

func (v NullableAssayRunSchemasPaginatedList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssayRunSchemasPaginatedList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


