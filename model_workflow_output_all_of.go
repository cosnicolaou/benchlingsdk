/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// WorkflowOutputAllOf struct for WorkflowOutputAllOf
type WorkflowOutputAllOf struct {
	CreationOrigin *CreationOrigin `json:"creationOrigin,omitempty"`
	Fields *map[string]Field `json:"fields,omitempty"`
	Task *WorkflowTaskSummary `json:"task,omitempty"`
	// URL of the workflow output
	WebURL *string `json:"webURL,omitempty"`
	WorkflowTaskGroup *WorkflowTaskGroupSummary `json:"workflowTaskGroup,omitempty"`
}

// NewWorkflowOutputAllOf instantiates a new WorkflowOutputAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowOutputAllOf() *WorkflowOutputAllOf {
	this := WorkflowOutputAllOf{}
	return &this
}

// NewWorkflowOutputAllOfWithDefaults instantiates a new WorkflowOutputAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowOutputAllOfWithDefaults() *WorkflowOutputAllOf {
	this := WorkflowOutputAllOf{}
	return &this
}

// GetCreationOrigin returns the CreationOrigin field value if set, zero value otherwise.
func (o *WorkflowOutputAllOf) GetCreationOrigin() CreationOrigin {
	if o == nil || isNil(o.CreationOrigin) {
		var ret CreationOrigin
		return ret
	}
	return *o.CreationOrigin
}

// GetCreationOriginOk returns a tuple with the CreationOrigin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowOutputAllOf) GetCreationOriginOk() (*CreationOrigin, bool) {
	if o == nil || isNil(o.CreationOrigin) {
    return nil, false
	}
	return o.CreationOrigin, true
}

// HasCreationOrigin returns a boolean if a field has been set.
func (o *WorkflowOutputAllOf) HasCreationOrigin() bool {
	if o != nil && !isNil(o.CreationOrigin) {
		return true
	}

	return false
}

// SetCreationOrigin gets a reference to the given CreationOrigin and assigns it to the CreationOrigin field.
func (o *WorkflowOutputAllOf) SetCreationOrigin(v CreationOrigin) {
	o.CreationOrigin = &v
}

// GetFields returns the Fields field value if set, zero value otherwise.
func (o *WorkflowOutputAllOf) GetFields() map[string]Field {
	if o == nil || isNil(o.Fields) {
		var ret map[string]Field
		return ret
	}
	return *o.Fields
}

// GetFieldsOk returns a tuple with the Fields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowOutputAllOf) GetFieldsOk() (*map[string]Field, bool) {
	if o == nil || isNil(o.Fields) {
    return nil, false
	}
	return o.Fields, true
}

// HasFields returns a boolean if a field has been set.
func (o *WorkflowOutputAllOf) HasFields() bool {
	if o != nil && !isNil(o.Fields) {
		return true
	}

	return false
}

// SetFields gets a reference to the given map[string]Field and assigns it to the Fields field.
func (o *WorkflowOutputAllOf) SetFields(v map[string]Field) {
	o.Fields = &v
}

// GetTask returns the Task field value if set, zero value otherwise.
func (o *WorkflowOutputAllOf) GetTask() WorkflowTaskSummary {
	if o == nil || isNil(o.Task) {
		var ret WorkflowTaskSummary
		return ret
	}
	return *o.Task
}

// GetTaskOk returns a tuple with the Task field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowOutputAllOf) GetTaskOk() (*WorkflowTaskSummary, bool) {
	if o == nil || isNil(o.Task) {
    return nil, false
	}
	return o.Task, true
}

// HasTask returns a boolean if a field has been set.
func (o *WorkflowOutputAllOf) HasTask() bool {
	if o != nil && !isNil(o.Task) {
		return true
	}

	return false
}

// SetTask gets a reference to the given WorkflowTaskSummary and assigns it to the Task field.
func (o *WorkflowOutputAllOf) SetTask(v WorkflowTaskSummary) {
	o.Task = &v
}

// GetWebURL returns the WebURL field value if set, zero value otherwise.
func (o *WorkflowOutputAllOf) GetWebURL() string {
	if o == nil || isNil(o.WebURL) {
		var ret string
		return ret
	}
	return *o.WebURL
}

// GetWebURLOk returns a tuple with the WebURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowOutputAllOf) GetWebURLOk() (*string, bool) {
	if o == nil || isNil(o.WebURL) {
    return nil, false
	}
	return o.WebURL, true
}

// HasWebURL returns a boolean if a field has been set.
func (o *WorkflowOutputAllOf) HasWebURL() bool {
	if o != nil && !isNil(o.WebURL) {
		return true
	}

	return false
}

// SetWebURL gets a reference to the given string and assigns it to the WebURL field.
func (o *WorkflowOutputAllOf) SetWebURL(v string) {
	o.WebURL = &v
}

// GetWorkflowTaskGroup returns the WorkflowTaskGroup field value if set, zero value otherwise.
func (o *WorkflowOutputAllOf) GetWorkflowTaskGroup() WorkflowTaskGroupSummary {
	if o == nil || isNil(o.WorkflowTaskGroup) {
		var ret WorkflowTaskGroupSummary
		return ret
	}
	return *o.WorkflowTaskGroup
}

// GetWorkflowTaskGroupOk returns a tuple with the WorkflowTaskGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowOutputAllOf) GetWorkflowTaskGroupOk() (*WorkflowTaskGroupSummary, bool) {
	if o == nil || isNil(o.WorkflowTaskGroup) {
    return nil, false
	}
	return o.WorkflowTaskGroup, true
}

// HasWorkflowTaskGroup returns a boolean if a field has been set.
func (o *WorkflowOutputAllOf) HasWorkflowTaskGroup() bool {
	if o != nil && !isNil(o.WorkflowTaskGroup) {
		return true
	}

	return false
}

// SetWorkflowTaskGroup gets a reference to the given WorkflowTaskGroupSummary and assigns it to the WorkflowTaskGroup field.
func (o *WorkflowOutputAllOf) SetWorkflowTaskGroup(v WorkflowTaskGroupSummary) {
	o.WorkflowTaskGroup = &v
}

func (o WorkflowOutputAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.CreationOrigin) {
		toSerialize["creationOrigin"] = o.CreationOrigin
	}
	if !isNil(o.Fields) {
		toSerialize["fields"] = o.Fields
	}
	if !isNil(o.Task) {
		toSerialize["task"] = o.Task
	}
	if !isNil(o.WebURL) {
		toSerialize["webURL"] = o.WebURL
	}
	if !isNil(o.WorkflowTaskGroup) {
		toSerialize["workflowTaskGroup"] = o.WorkflowTaskGroup
	}
	return json.Marshal(toSerialize)
}

type NullableWorkflowOutputAllOf struct {
	value *WorkflowOutputAllOf
	isSet bool
}

func (v NullableWorkflowOutputAllOf) Get() *WorkflowOutputAllOf {
	return v.value
}

func (v *NullableWorkflowOutputAllOf) Set(val *WorkflowOutputAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowOutputAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowOutputAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowOutputAllOf(val *WorkflowOutputAllOf) *NullableWorkflowOutputAllOf {
	return &NullableWorkflowOutputAllOf{value: val, isSet: true}
}

func (v NullableWorkflowOutputAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowOutputAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


