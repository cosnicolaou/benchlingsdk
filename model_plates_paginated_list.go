/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// PlatesPaginatedList struct for PlatesPaginatedList
type PlatesPaginatedList struct {
	NextToken *string `json:"nextToken,omitempty"`
	Plates []Plate `json:"plates,omitempty"`
}

// NewPlatesPaginatedList instantiates a new PlatesPaginatedList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlatesPaginatedList() *PlatesPaginatedList {
	this := PlatesPaginatedList{}
	return &this
}

// NewPlatesPaginatedListWithDefaults instantiates a new PlatesPaginatedList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlatesPaginatedListWithDefaults() *PlatesPaginatedList {
	this := PlatesPaginatedList{}
	return &this
}

// GetNextToken returns the NextToken field value if set, zero value otherwise.
func (o *PlatesPaginatedList) GetNextToken() string {
	if o == nil || isNil(o.NextToken) {
		var ret string
		return ret
	}
	return *o.NextToken
}

// GetNextTokenOk returns a tuple with the NextToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlatesPaginatedList) GetNextTokenOk() (*string, bool) {
	if o == nil || isNil(o.NextToken) {
    return nil, false
	}
	return o.NextToken, true
}

// HasNextToken returns a boolean if a field has been set.
func (o *PlatesPaginatedList) HasNextToken() bool {
	if o != nil && !isNil(o.NextToken) {
		return true
	}

	return false
}

// SetNextToken gets a reference to the given string and assigns it to the NextToken field.
func (o *PlatesPaginatedList) SetNextToken(v string) {
	o.NextToken = &v
}

// GetPlates returns the Plates field value if set, zero value otherwise.
func (o *PlatesPaginatedList) GetPlates() []Plate {
	if o == nil || isNil(o.Plates) {
		var ret []Plate
		return ret
	}
	return o.Plates
}

// GetPlatesOk returns a tuple with the Plates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlatesPaginatedList) GetPlatesOk() ([]Plate, bool) {
	if o == nil || isNil(o.Plates) {
    return nil, false
	}
	return o.Plates, true
}

// HasPlates returns a boolean if a field has been set.
func (o *PlatesPaginatedList) HasPlates() bool {
	if o != nil && !isNil(o.Plates) {
		return true
	}

	return false
}

// SetPlates gets a reference to the given []Plate and assigns it to the Plates field.
func (o *PlatesPaginatedList) SetPlates(v []Plate) {
	o.Plates = v
}

func (o PlatesPaginatedList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.NextToken) {
		toSerialize["nextToken"] = o.NextToken
	}
	if !isNil(o.Plates) {
		toSerialize["plates"] = o.Plates
	}
	return json.Marshal(toSerialize)
}

type NullablePlatesPaginatedList struct {
	value *PlatesPaginatedList
	isSet bool
}

func (v NullablePlatesPaginatedList) Get() *PlatesPaginatedList {
	return v.value
}

func (v *NullablePlatesPaginatedList) Set(val *PlatesPaginatedList) {
	v.value = val
	v.isSet = true
}

func (v NullablePlatesPaginatedList) IsSet() bool {
	return v.isSet
}

func (v *NullablePlatesPaginatedList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlatesPaginatedList(val *PlatesPaginatedList) *NullablePlatesPaginatedList {
	return &NullablePlatesPaginatedList{value: val, isSet: true}
}

func (v NullablePlatesPaginatedList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlatesPaginatedList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


