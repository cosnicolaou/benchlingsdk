/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// UnregisterEntities struct for UnregisterEntities
type UnregisterEntities struct {
	// Array of entity IDs
	EntityIds []string `json:"entityIds"`
	// ID of the folder that the entities should be moved to
	FolderId string `json:"folderId"`
}

// NewUnregisterEntities instantiates a new UnregisterEntities object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnregisterEntities(entityIds []string, folderId string) *UnregisterEntities {
	this := UnregisterEntities{}
	this.EntityIds = entityIds
	this.FolderId = folderId
	return &this
}

// NewUnregisterEntitiesWithDefaults instantiates a new UnregisterEntities object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnregisterEntitiesWithDefaults() *UnregisterEntities {
	this := UnregisterEntities{}
	return &this
}

// GetEntityIds returns the EntityIds field value
func (o *UnregisterEntities) GetEntityIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.EntityIds
}

// GetEntityIdsOk returns a tuple with the EntityIds field value
// and a boolean to check if the value has been set.
func (o *UnregisterEntities) GetEntityIdsOk() ([]string, bool) {
	if o == nil {
    return nil, false
	}
	return o.EntityIds, true
}

// SetEntityIds sets field value
func (o *UnregisterEntities) SetEntityIds(v []string) {
	o.EntityIds = v
}

// GetFolderId returns the FolderId field value
func (o *UnregisterEntities) GetFolderId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FolderId
}

// GetFolderIdOk returns a tuple with the FolderId field value
// and a boolean to check if the value has been set.
func (o *UnregisterEntities) GetFolderIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.FolderId, true
}

// SetFolderId sets field value
func (o *UnregisterEntities) SetFolderId(v string) {
	o.FolderId = v
}

func (o UnregisterEntities) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["entityIds"] = o.EntityIds
	}
	if true {
		toSerialize["folderId"] = o.FolderId
	}
	return json.Marshal(toSerialize)
}

type NullableUnregisterEntities struct {
	value *UnregisterEntities
	isSet bool
}

func (v NullableUnregisterEntities) Get() *UnregisterEntities {
	return v.value
}

func (v *NullableUnregisterEntities) Set(val *UnregisterEntities) {
	v.value = val
	v.isSet = true
}

func (v NullableUnregisterEntities) IsSet() bool {
	return v.isSet
}

func (v *NullableUnregisterEntities) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnregisterEntities(val *UnregisterEntities) *NullableUnregisterEntities {
	return &NullableUnregisterEntities{value: val, isSet: true}
}

func (v NullableUnregisterEntities) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnregisterEntities) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


