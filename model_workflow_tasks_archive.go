/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// WorkflowTasksArchive struct for WorkflowTasksArchive
type WorkflowTasksArchive struct {
	Reason WorkflowTaskArchiveReason `json:"reason"`
	WorkflowTaskIds []string `json:"workflowTaskIds"`
}

// NewWorkflowTasksArchive instantiates a new WorkflowTasksArchive object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowTasksArchive(reason WorkflowTaskArchiveReason, workflowTaskIds []string) *WorkflowTasksArchive {
	this := WorkflowTasksArchive{}
	this.Reason = reason
	this.WorkflowTaskIds = workflowTaskIds
	return &this
}

// NewWorkflowTasksArchiveWithDefaults instantiates a new WorkflowTasksArchive object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowTasksArchiveWithDefaults() *WorkflowTasksArchive {
	this := WorkflowTasksArchive{}
	return &this
}

// GetReason returns the Reason field value
func (o *WorkflowTasksArchive) GetReason() WorkflowTaskArchiveReason {
	if o == nil {
		var ret WorkflowTaskArchiveReason
		return ret
	}

	return o.Reason
}

// GetReasonOk returns a tuple with the Reason field value
// and a boolean to check if the value has been set.
func (o *WorkflowTasksArchive) GetReasonOk() (*WorkflowTaskArchiveReason, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Reason, true
}

// SetReason sets field value
func (o *WorkflowTasksArchive) SetReason(v WorkflowTaskArchiveReason) {
	o.Reason = v
}

// GetWorkflowTaskIds returns the WorkflowTaskIds field value
func (o *WorkflowTasksArchive) GetWorkflowTaskIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.WorkflowTaskIds
}

// GetWorkflowTaskIdsOk returns a tuple with the WorkflowTaskIds field value
// and a boolean to check if the value has been set.
func (o *WorkflowTasksArchive) GetWorkflowTaskIdsOk() ([]string, bool) {
	if o == nil {
    return nil, false
	}
	return o.WorkflowTaskIds, true
}

// SetWorkflowTaskIds sets field value
func (o *WorkflowTasksArchive) SetWorkflowTaskIds(v []string) {
	o.WorkflowTaskIds = v
}

func (o WorkflowTasksArchive) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["reason"] = o.Reason
	}
	if true {
		toSerialize["workflowTaskIds"] = o.WorkflowTaskIds
	}
	return json.Marshal(toSerialize)
}

type NullableWorkflowTasksArchive struct {
	value *WorkflowTasksArchive
	isSet bool
}

func (v NullableWorkflowTasksArchive) Get() *WorkflowTasksArchive {
	return v.value
}

func (v *NullableWorkflowTasksArchive) Set(val *WorkflowTasksArchive) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowTasksArchive) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowTasksArchive) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowTasksArchive(val *WorkflowTasksArchive) *NullableWorkflowTasksArchive {
	return &NullableWorkflowTasksArchive{value: val, isSet: true}
}

func (v NullableWorkflowTasksArchive) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowTasksArchive) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


