/*
Benchling API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package benchlingsdk

import (
	"encoding/json"
)

// DnaSequencesBulkGet struct for DnaSequencesBulkGet
type DnaSequencesBulkGet struct {
	DnaSequences []DnaSequence `json:"dnaSequences,omitempty"`
}

// NewDnaSequencesBulkGet instantiates a new DnaSequencesBulkGet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDnaSequencesBulkGet() *DnaSequencesBulkGet {
	this := DnaSequencesBulkGet{}
	return &this
}

// NewDnaSequencesBulkGetWithDefaults instantiates a new DnaSequencesBulkGet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDnaSequencesBulkGetWithDefaults() *DnaSequencesBulkGet {
	this := DnaSequencesBulkGet{}
	return &this
}

// GetDnaSequences returns the DnaSequences field value if set, zero value otherwise.
func (o *DnaSequencesBulkGet) GetDnaSequences() []DnaSequence {
	if o == nil || isNil(o.DnaSequences) {
		var ret []DnaSequence
		return ret
	}
	return o.DnaSequences
}

// GetDnaSequencesOk returns a tuple with the DnaSequences field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnaSequencesBulkGet) GetDnaSequencesOk() ([]DnaSequence, bool) {
	if o == nil || isNil(o.DnaSequences) {
    return nil, false
	}
	return o.DnaSequences, true
}

// HasDnaSequences returns a boolean if a field has been set.
func (o *DnaSequencesBulkGet) HasDnaSequences() bool {
	if o != nil && !isNil(o.DnaSequences) {
		return true
	}

	return false
}

// SetDnaSequences gets a reference to the given []DnaSequence and assigns it to the DnaSequences field.
func (o *DnaSequencesBulkGet) SetDnaSequences(v []DnaSequence) {
	o.DnaSequences = v
}

func (o DnaSequencesBulkGet) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.DnaSequences) {
		toSerialize["dnaSequences"] = o.DnaSequences
	}
	return json.Marshal(toSerialize)
}

type NullableDnaSequencesBulkGet struct {
	value *DnaSequencesBulkGet
	isSet bool
}

func (v NullableDnaSequencesBulkGet) Get() *DnaSequencesBulkGet {
	return v.value
}

func (v *NullableDnaSequencesBulkGet) Set(val *DnaSequencesBulkGet) {
	v.value = val
	v.isSet = true
}

func (v NullableDnaSequencesBulkGet) IsSet() bool {
	return v.isSet
}

func (v *NullableDnaSequencesBulkGet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDnaSequencesBulkGet(val *DnaSequencesBulkGet) *NullableDnaSequencesBulkGet {
	return &NullableDnaSequencesBulkGet{value: val, isSet: true}
}

func (v NullableDnaSequencesBulkGet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDnaSequencesBulkGet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


